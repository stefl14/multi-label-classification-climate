<xml><var name="AutoTokenizer" type="type" qualifier="builtins" value="%3Cclass %27transformers.models.auto.tokenization_auto.AutoTokenizer%27&gt;" isContainer="True" />
<var name="BATCH_SIZE" type="int" qualifier="builtins" value="16" />
<var name="ClassifierChain" type="type" qualifier="builtins" value="%3Cclass %27skmultilearn.problem_transform.cc.ClassifierChain%27&gt;" isContainer="True" />
<var name="CountVectorizer" type="type" qualifier="builtins" value="%3Cclass %27sklearn.feature_extraction.text.CountVectorizer%27&gt;" isContainer="True" />
<var name="DummyClassifier" type="type" qualifier="builtins" value="%3Cclass %27sklearn.dummy.DummyClassifier%27&gt;" isContainer="True" />
<var name="GradientBoostingClassifier" type="ABCMeta" qualifier="abc" value="%3Cclass %27sklearn.ensemble._gb.GradientBoostingClassifier%27&gt;" isContainer="True" />
<var name="HOLD_OUT_PERCENTAGE" type="int" qualifier="builtins" value="10" />
<var name="HUGGINGFACE_CONFIG" type="str" qualifier="builtins" value="distilbert-base-cased" />
<var name="ITERATIVE_STRAT_ORDER" type="int" qualifier="builtins" value="1" />
<var name="In" type="list" qualifier="builtins" value="%5B%27%27%2C %22import sys%5Cn%5Cn%5Cn%5Cnget_ipython%28%29.run_line_magic%28%27load_ext%27%2C %27autoreload%27%29%5Cnget_ipython%28%29.run_line_magic%28%27autoreload%27%2C %272%27%29%22%2C %27from src.sklearn_utils import iter_train_test_split%2C simple_feature_engineering%5Cnfrom sklearn.ensemble import GradientBoostingClassifier%27%2C %27import pandas as pd%5Cnimport numpy as np%5Cnimport os%5Cnimport plotly.express as px%5Cnfrom skmultilearn.model_selection import IterativeStratification%5Cnfrom sklearn.model_selection import train_test_split%5Cnfrom sklearn.preprocessing import MultiLabelBinarizer%5Cnfrom sklearn.dummy import DummyClassifier%5Cnfrom sklearn.metrics import hamming_loss%5Cnimport seaborn as sns%5Cn%5Cnfrom sklearn.feature_extraction.text import TfidfVectorizer%5Cn%5Cnfrom yellowbrick.text import TSNEVisualizer%5Cnfrom yellowbrick.datasets import load_hobbies%5Cn%23 import tensorflow_addons as tfa%5Cnfrom sklearn.metrics import hamming_loss%5Cn%5Cnfrom skmultilearn.problem_transform import ClassifierChain%5Cnfrom sklearn.metrics import hamming_loss%2C accuracy_score%2C make_scorer..." isContainer="True" shape="25" isIPythonHidden="True" />
<var name="IterativeStratification" type="ABCMeta" qualifier="abc" value="%3Cclass %27skmultilearn.model_selection.iterative_stratification.IterativeStratification%27&gt;" isContainer="True" />
<var name="KEEP_MOST_COMMON_LABELS" type="int" qualifier="builtins" value="10" />
<var name="Lasso" type="ABCMeta" qualifier="abc" value="%3Cclass %27sklearn.linear_model._coordinate_descent.Lasso%27&gt;" isContainer="True" />
<var name="MultiLabelBinarizer" type="type" qualifier="builtins" value="%3Cclass %27sklearn.preprocessing._label.MultiLabelBinarizer%27&gt;" isContainer="True" />
<var name="MultinomialNB" type="ABCMeta" qualifier="abc" value="%3Cclass %27sklearn.naive_bayes.MultinomialNB%27&gt;" isContainer="True" />
<var name="Out" type="dict" qualifier="builtins" value="%7B5%3A %27/home/stefan/PycharmProjects/multi-label-classification-climate/notebooks%27%2C 7%3A    policy_id                       policy_title  %5C%0A0      10088     Circular economy promotion law   %0A1      10087                14th Five-Year Plan   %0A2      10046             National Forest Policy   %0A3      10044   Suriname National REDD%2B Strategy   %0A4      10042  Policy Development Plan 2017-2021   %0A%0A                                             sectors  %5C%0A0                  Industry%3BAgriculture%3BEconomy-wide   %0A1  Transportation%3BRural%3BLULUCF%3BEnergy%3BEconomy-wid...   %0A2                                             LULUCF   %0A3                                             LULUCF   %0A4                                       Economy-wide   %0A%0A                                    description_text  %0A0  This law promotes the development of a circula...  %0A1  The 14th Five Year Plan lays down the strategy...  %0A2  This document aims at protecting the country%27s...  %0A3  This document aims to protect Suriname%27s fores......" isContainer="True" shape="9" isIPythonHidden="True" />
<var name="Path" type="type" qualifier="builtins" value="%3Cclass %27pathlib.Path%27&gt;" isContainer="True" />
<var name="Pipeline" type="ABCMeta" qualifier="abc" value="%3Cclass %27sklearn.pipeline.Pipeline%27&gt;" isContainer="True" />
<var name="SEED" type="int" qualifier="builtins" value="42" />
<var name="TEST_SET_FRAC" type="float" qualifier="builtins" value="0.1" />
<var name="TRAIN_FRACTION" type="float" qualifier="builtins" value="0.9" />
<var name="TSNEVisualizer" type="type" qualifier="builtins" value="%3Cclass %27yellowbrick.text.tsne.TSNEVisualizer%27&gt;" isContainer="True" />
<var name="TextFeatureEngineering" type="type" qualifier="builtins" value="%3Cclass %27src.sklearn_utils.TextFeatureEngineering%27&gt;" isContainer="True" />
<var name="TfidfVectorizer" type="type" qualifier="builtins" value="%3Cclass %27sklearn.feature_extraction.text.TfidfVectorizer%27&gt;" isContainer="True" />
<var name="Tuple" type="_TupleType" qualifier="typing" value="typing.Tuple" isContainer="True" />
<var name="X" type="DataFrame" qualifier="pandas.core.frame" value="policy_id                                       policy_title  %5C %5B0         10088                     Circular economy promotion law   %5D %5B3         10044                   Suriname National REDD%2B Strategy   %5D %5B5         10049                               Energy Strategy 2050   %5D %5B6         10051                   Long-Term Climate Strategy%2C 2021   %5D %5B9         10054  Environmentally Sustainable Transport System P...   %5D %5B...         ...                                                ...   %5D %5B1955       8835  National Climate Change Strategy and Action Pl...   %5D %5B1956       9110                 National Policy for Climate Change   %5D %5B1957       9191  Presidential Decree 7/2019 establishing the na...   %5D %5B1958       8889  Act No. 28 of 1972 concerning nuclear energy a...   %5D %5B1959       8887  Natural Hazards Compensation Act %28No. 59 of 2014%29   %5D %5B%5D %5B                                       description_text  %5C%5D %5B0     This law promotes the development of a circula...   %5D %5B3     This document aims to protect Surin...%5D" isContainer="True" shape="(1680, 14)" />
<var name="X_test" type="DataFrame" qualifier="pandas.core.frame" value="description_text  %5C %5B1497  The Enemalta %28Transfer of Assets%2C Rights%2C Liab...   %5D %5B1517  The National Climate Change Policy%2C published ...   %5D %5B1244  This document sets the remuneration framework ...   %5D %5B249   This document sets the government%27s National T...   %5D %5B698   This document sets the government%27s energy pol...   %5D %5B...                                                 ...   %5D %5B1704  The goal of this regulation is to grant financ...   %5D %5B598   This law commits Ireland%27s national treasury t...   %5D %5B1533  The Democratic Republic of Congo%27s Disaster Re...   %5D %5B1903  The Small and Medium-sized Power Plant Act was...   %5D %5B240   The Strategic Investment Framework for Environ...   %5D %5B%5D %5B                                           policy_title  %5C%5D %5B1497  ACT No. XXXIV of 2014 and associated feed-in t...   %5D %5B1517            Myanmar National Climate Change Policy    %5D %5B1244  Royal Decree 960/2020 regulating the economic ...   %5D %5B249   National Transport Plan 2018-2029 %28Meld. St. 3......%5D" isContainer="True" shape="(249, 3)" />
<var name="X_train" type="DataFrame" qualifier="pandas.core.frame" value="description_text  %5C %5B946   This Act establishes the Energy Market Authori...   %5D %5B1077  This Act creates the Energy and Climate Fund. ...   %5D %5B753   This Strategy%2C developed in partnership with U...   %5D %5B917   Energy efficiency labelling requirements are s...   %5D %5B966   The law provided a legal framework to set up a...   %5D %5B...                                                 ...   %5D %5B220   South Africa%27s Sectoral Cold Spell Management ...   %5D %5B422   The Energy Efficiency Action Plan 2011%3F2020 le...   %5D %5B789   This law states that the State shall provide t...   %5D %5B1125  The Strategy aims to develop a sustainable ene...   %5D %5B404   The main objectives of Law 1391-V are to%3A %5Cn- ...   %5D %5B%5D %5B                                           policy_title  %5C%5D %5B946   Energy Market Authority of Singapore Act %28Chap...   %5D %5B1077                 Energy and Climate Fund Act %28EKFG%29   %5D %5B753   Decentralized Rural Electrification Strategy %28...   %5D %5B917   Energy Resources Regulations %28Energy labeling ......%5D" isContainer="True" shape="(503, 3)" />
<var name="_" type="Run" qualifier="wandb.sdk.wandb_run" value="%3Cwandb.sdk.wandb_run.Run object at 0x7fdea06a8400&gt;" isContainer="True" isIPythonHidden="True" />
<var name="_11" type="DataFrame" qualifier="pandas.core.frame" value="num_labels  cumulative_positive_labels  %5C %5BEnergy                                1143                        1143   %5D %5BTransportation                         761                        1904   %5D %5BLULUCF                                 398                        2302   %5D %5BEconomy-wide                           366                        2668   %5D %5BResidential and Commercial             351                        3019   %5D %5BAgriculture                            305                        3324   %5D %5BWater                                  297                        3621   %5D %5BIndustry                               238                        3859   %5D %5BWaste                                  177                        4036   %5D %5BHealth                                 158                        4194   %5D %5BEnvironment                            127                        4321   %5D %5BUrban                                   73                        4394   %5D %5BBuildings                             ...%5D" isContainer="True" shape="(23, 3)" isIPythonHidden="True" />
<var name="_12" type="Figure" qualifier="plotly.graph_objs._figure" value="Figure%28%7B%0A    %27data%27%3A %5B%7B%27alignmentgroup%27%3A %27True%27%2C%0A              %27hovertemplate%27%3A %27index=%25%7Bx%7D%3Cbr&gt;num_labels=%25%7By%7D%3Cextra&gt;%3C/extra&gt;%27%2C%0A              %27legendgroup%27%3A %27%27%2C%0A              %27marker%27%3A %7B%27color%27%3A %27%23636efa%27%2C %27pattern%27%3A %7B%27shape%27%3A %27%27%7D%7D%2C%0A              %27name%27%3A %27%27%2C%0A              %27offsetgroup%27%3A %27%27%2C%0A              %27orientation%27%3A %27v%27%2C%0A              %27showlegend%27%3A False%2C%0A              %27textposition%27%3A %27auto%27%2C%0A              %27type%27%3A %27bar%27%2C%0A              %27x%27%3A array%28%5B%27Energy%27%2C %27Transportation%27%2C %27LULUCF%27%2C %27Economy-wide%27%2C%0A                          %27Residential and Commercial%27%2C %27Agriculture%27%2C %27Water%27%2C %27Industry%27%2C%0A                          %27Waste%27%2C %27Health%27%2C %27Environment%27%2C %27Urban%27%2C %27Buildings%27%2C %27Tourism%27%2C%0A                          %27Social development%27%2C %27Disaster Risk Management %28Drm%29%27%2C %27Coastal zones%27%2C%0A                          %27Rural%27%2C %27Adaptation%27%2C %27Cross Cutting Area%27%2C %27Public Sector%27%2C %27Other%27%2C%0A                          %27Finance%27%5D%2C dtype=object%29%2C%0A              %27xaxis%27%3A %27x%27%2C%0A              %27y%27%3A array%28%5B1143..." isContainer="True" isIPythonHidden="True" />
<var name="_13" type="AxesSubplot" qualifier="matplotlib.axes._subplots" value="AxesSubplot%280.125%2C0.125%3B0.62x0.755%29" isContainer="True" isIPythonHidden="True" />
<var name="_14" type="Figure" qualifier="plotly.graph_objs._figure" value="Figure%28%7B%0A    %27data%27%3A %5B%7B%27alignmentgroup%27%3A %27True%27%2C%0A              %27bingroup%27%3A %27x%27%2C%0A              %27hovertemplate%27%3A %27variable=sectors_list%3Cbr&gt;value=%25%7Bx%7D%3Cbr&gt;count=%25%7By%7D%3Cextra&gt;%3C/extra&gt;%27%2C%0A              %27legendgroup%27%3A %27sectors_list%27%2C%0A              %27marker%27%3A %7B%27color%27%3A %27%23636efa%27%2C %27pattern%27%3A %7B%27shape%27%3A %27%27%7D%7D%2C%0A              %27name%27%3A %27sectors_list%27%2C%0A              %27offsetgroup%27%3A %27sectors_list%27%2C%0A              %27orientation%27%3A %27v%27%2C%0A              %27showlegend%27%3A True%2C%0A              %27type%27%3A %27histogram%27%2C%0A              %27x%27%3A array%28%5B3%2C 6%2C 1%2C ...%2C 5%2C 1%2C 1%5D%29%2C%0A              %27xaxis%27%3A %27x%27%2C%0A              %27yaxis%27%3A %27y%27%7D%5D%2C%0A    %27layout%27%3A %7B%27barmode%27%3A %27relative%27%2C%0A               %27legend%27%3A %7B%27title%27%3A %7B%27text%27%3A %27variable%27%7D%2C %27tracegroupgap%27%3A 0%7D%2C%0A               %27template%27%3A %27...%27%2C%0A               %27title%27%3A %7B%27text%27%3A %27num labels per instance%27%7D%2C%0A               %27xaxis%27%3A %7B%27anchor%27%3A %27y%27%2C %27domain%27%3A %5B0.0%2C 1.0%5D%2C %27title%27%3A %7B%27text%27%3A %27value%27%7D%7D%2C%0A               %27yaxis%27%3A %7B%27anchor%27%3A %27x%27%2C %27domain%27%3A %5B0.0%2C 1.0%5D%2C %27title%27%3A %7B%27text%27%3A %27count%27%7D%7D%7D%0A%7D%29" isContainer="True" isIPythonHidden="True" />
<var name="_15" type="Series" qualifier="pandas.core.series" value="%28%27Energy%27%2C 365%29 %28%27Economy-wide%27%2C 144%29 %28%27Transportation%3BEnergy%27%2C 117%29 %28%27Transportation%27%2C 112%29 %28%27Energy%3BResidential and Commercial%27%2C 63%29 %28%27LULUCF%27%2C 58%29 %28%27Transportation%3BEnergy%3BResidential and Commercial%27%2C 30%29 %28%27Agriculture%27%2C 26%29 %28%27Transportation%3BLULUCF%27%2C 24%29 %28%27Industry%3BEnergy%27%2C 24%29" isContainer="True" shape="(10,)" isIPythonHidden="True" />
<var name="_18" type="AxesSubplot" qualifier="matplotlib.axes._subplots" value="AxesSubplot%280.125%2C0.125%3B0.62x0.755%29" isContainer="True" isIPythonHidden="True" />
<var name="_24" type="Run" qualifier="wandb.sdk.wandb_run" value="%3Cwandb.sdk.wandb_run.Run object at 0x7fdea06a8400&gt;" isContainer="True" isIPythonHidden="True" />
<var name="_5" type="str" qualifier="builtins" value="/home/stefan/PycharmProjects/multi-label-classification-climate/notebooks" isIPythonHidden="True" />
<var name="_7" type="DataFrame" qualifier="pandas.core.frame" value="policy_id                       policy_title  %5C %5B0      10088     Circular economy promotion law   %5D %5B1      10087                14th Five-Year Plan   %5D %5B2      10046             National Forest Policy   %5D %5B3      10044   Suriname National REDD%2B Strategy   %5D %5B4      10042  Policy Development Plan 2017-2021   %5D %5B%5D %5B                                             sectors  %5C%5D %5B0                  Industry%3BAgriculture%3BEconomy-wide   %5D %5B1  Transportation%3BRural%3BLULUCF%3BEnergy%3BEconomy-wid...   %5D %5B2                                             LULUCF   %5D %5B3                                             LULUCF   %5D %5B4                                       Economy-wide   %5D %5B%5D %5B                                    description_text  %5D %5B0  This law promotes the development of a circula...  %5D %5B1  The 14th Five Year Plan lays down the strategy...  %5D %5B2  This document aims at protecting the country%27s...  %5D %5B3  This document aims to protect Suriname%27s fores...  %5D %5B4  This document lays out the country%27s developme...  %5D" isContainer="True" shape="(5, 4)" isIPythonHidden="True" />
<var name="__" type="AxesSubplot" qualifier="matplotlib.axes._subplots" value="AxesSubplot%280.125%2C0.125%3B0.62x0.755%29" isContainer="True" isIPythonHidden="True" />
<var name="___" type="Series" qualifier="pandas.core.series" value="%28%27Energy%27%2C 365%29 %28%27Economy-wide%27%2C 144%29 %28%27Transportation%3BEnergy%27%2C 117%29 %28%27Transportation%27%2C 112%29 %28%27Energy%3BResidential and Commercial%27%2C 63%29 %28%27LULUCF%27%2C 58%29 %28%27Transportation%3BEnergy%3BResidential and Commercial%27%2C 30%29 %28%27Agriculture%27%2C 26%29 %28%27Transportation%3BLULUCF%27%2C 24%29 %28%27Industry%3BEnergy%27%2C 24%29" isContainer="True" shape="(10,)" isIPythonHidden="True" />
<var name="__builtin__" type="module" qualifier="builtins" value="%3Cmodule %27builtins%27 %28built-in%29&gt;" isContainer="True" isIPythonHidden="True" />
<var name="__builtins__" type="module" qualifier="builtins" value="%3Cmodule %27builtins%27 %28built-in%29&gt;" isContainer="True" isIPythonHidden="True" />
<var name="__doc__" type="str" qualifier="builtins" value="Automatically created module for IPython interactive environment" isIPythonHidden="True" />
<var name="__loader__" type="NoneType" qualifier="builtins" value="None" isIPythonHidden="True" />
<var name="__name__" type="str" qualifier="builtins" value="__main__" isIPythonHidden="True" />
<var name="__package__" type="NoneType" qualifier="builtins" value="None" isIPythonHidden="True" />
<var name="__spec__" type="NoneType" qualifier="builtins" value="None" isIPythonHidden="True" />
<var name="_dh" type="list" qualifier="builtins" value="%5BPosixPath%28%27/home/stefan/PycharmProjects/multi-label-classification-climate/notebooks%27%29%5D" isContainer="True" shape="1" isIPythonHidden="True" />
<var name="_i" type="str" qualifier="builtins" value="X%2C y = df_eda%2C mlb.fit_transform%28df_eda%5B%27sectors_list%27%5D%29" isIPythonHidden="True" />
<var name="_i1" type="str" qualifier="builtins" value="import sys%0A%0A%0A%0A%25load_ext autoreload%0A%25autoreload 2" isIPythonHidden="True" />
<var name="_i10" type="str" qualifier="builtins" value="%23 Let%27s analyse the labels.%0Alabels_flattened=df%5B%27sectors_list%27%5D.explode%28%29%0Aunique_labels=labels_flattened.unique%28%29%0An_unique_labels=len%28unique_labels%29%0Aprint%28f%22There are %7Bn_unique_labels%7D classes with possible labels%3A %5Cn %7Bunique_labels%7D%22%29" isIPythonHidden="True" />
<var name="_i11" type="str" qualifier="builtins" value="%23 What are the cumulative totals for each label%3F%0Anum_instances_each_label=labels_flattened.value_counts%28%29%0Atotal_positive_labels=num_instances_each_label.sum%28%29%0Acumulative_sum=num_instances_each_label.cumsum%28%29%0Afraction_dataset_covered=cumulative_sum/total_positive_labels%0Adf_labels=pd.DataFrame%28%7B%27num_labels%27%3A num_instances_each_label%2C%0A                        %27cumulative_positive_labels%27%3A cumulative_sum%2C %0A                        %27cumulative_fraction_dataset_covered%27%3A fraction_dataset_covered%7D%29%0Adf_labels" isIPythonHidden="True" />
<var name="_i12" type="str" qualifier="builtins" value="px.bar%28df_labels%2C x=df_labels.index%2C y=%27num_labels%27%2C title=%27label distribution%27%29" isIPythonHidden="True" />
<var name="_i13" type="str" qualifier="builtins" value="%23 12 most under represented labels.%0Aunderrepresented_labels=df_labels%5B11%3A%5D.index%0A%0Amlb=MultiLabelBinarizer%28%29%0Ay = mlb.fit_transform%28df%5B%27sectors_list%27%5D%29%0A%23 Now let%27s look at the correlations between labels.%0Asns.heatmap%28pd.DataFrame%28y%2C columns=mlb.classes_%29.corr%28%29.loc%5Bunderrepresented_labels%5D%29" isIPythonHidden="True" />
<var name="_i14" type="str" qualifier="builtins" value="px.histogram%28df%5B%27sectors_list%27%5D.apply%28len%29%2C title=%27num labels per instance%27%29" isIPythonHidden="True" />
<var name="_i15" type="str" qualifier="builtins" value="%23 Let%27s also check if there are any labels with an especially high number of classes such that we could change this to a multi-class problem%0A%23 instead of a multi-label problem.%0Adf%5B%27sectors%27%5D.value_counts%28%29.head%2810%29" isIPythonHidden="True" />
<var name="_i16" type="str" qualifier="builtins" value="common_labels=df_labels.index%5B0%3AKEEP_MOST_COMMON_LABELS%5D%0A%0A%23 Only keep sectors in top n labels%0Adf%5B%27sectors_list%27%5D = df%5B%27sectors_list%27%5D.apply%28lambda x%3A %5Btag for tag in x if tag in common_labels%5D%29%0Adf_filtered = df.copy%28%29%5Bdf%5B%27sectors_list%27%5D.str.len%28%29&gt;0%5D%0Adf_filtered.drop%28columns=%27sectors%27%2Cinplace=True%29" isIPythonHidden="True" />
<var name="_i17" type="str" qualifier="builtins" value="y = mlb.fit_transform%28df_filtered%5B%27sectors_list%27%5D%29%0A%0A%23 Split%0Adf_eda%2C df_test%2C y_eda%2C y_test = iter_train_test_split%28%0A    df_filtered%2C y%2C train_size=1-TEST_SET_FRAC%29%0A%0A%0Ay_eda_df = pd.DataFrame%28y_eda%2C columns = mlb.classes_%29" isIPythonHidden="True" />
<var name="_i18" type="str" qualifier="builtins" value="%23 Now let%27s look at the correlations between labels.%0Asns.heatmap%28y_eda_df.corr%28%29%29" isIPythonHidden="True" />
<var name="_i19" type="str" qualifier="builtins" value="%23 Let%27s do a quick analysis of a bunch of statistics from the text columns. %0A%0Adf_eda=df_eda.copy%28%29 %23 Suppress warnings%0Adf_eda%5B%27full_text%27%5D= df_eda%5B%27policy_title%27%5D%2B%27%3A %27%2Bdf_eda%5B%27description_text%27%5D %23 Concat text columns%0A%0Atext_cols=%5B%27description_text%27%2C %27policy_title%27%2C %27full_text%27%5D%0Atext_cols_n_words = %5Bf%27%7Bx%7D_nwords%27 for x in text_cols%5D%0Afor col in text_cols%3A%0A    df_eda%5Bf%27%7Bcol%7D_nwords%27%5D=df_eda%5Bcol%5D.str.split%28%29.str.len%28%29%0A    %0Adef subplot_helper%28cols%3A list%29 -&gt; None%3A%0A    fig=make_subplots%283%2C1%2C subplot_titles=cols%29%0A    for i%2C col in enumerate%28cols%29%3A%0A        trace=go.Histogram%28x=df_eda%5Bcol%5D%29%0A        fig.append_trace%28trace%2C i%2B1%2C1%29%0A    %0A    fig.update_layout%28height=700%2C width=800%29%0A    fig.show%28%29%0A%0Asubplot_helper%28text_cols_n_words%29" isIPythonHidden="True" />
<var name="_i2" type="str" qualifier="builtins" value="from src.sklearn_utils import iter_train_test_split%2C simple_feature_engineering%0Afrom sklearn.ensemble import GradientBoostingClassifier" isIPythonHidden="True" />
<var name="_i20" type="str" qualifier="builtins" value="tokenizer = AutoTokenizer.from_pretrained%28%27distilbert-base-cased%27%29%0Afor col in text_cols%3A%0A    df_eda%5Bf%27%7Bcol%7D_tokens%27%5D=df_eda%5Bcol%5D.apply%28lambda x%3A tokenizer.tokenize%28x%29%29%0A    df_eda%5Bf%27%7Bcol%7D_ntokens%27%5D=df_eda%5Bf%27%7Bcol%7D_tokens%27%5D.str.len%28%29%0A%0Atext_cols_n_tokens = %5Bf%27%7Bx%7D_ntokens%27 for x in text_cols%5D%0Asubplot_helper%28text_cols_n_tokens%29" isIPythonHidden="True" />
<var name="_i21" type="str" qualifier="builtins" value="%23 Let%27s see what happens if we subset the dataset so that it only contains rows with a single label%0A%23 and visualise the separation between classes to get%0Adf_single_label=df_eda%5Bdf_eda%5B%27sectors_list%27%5D.apply%28len%29==1%5D%0AX%2C y = df_single_label%5B%5B%27description_text%27%2C%27policy_title%27%2C%27full_text%27%5D%5D%2C df_single_label%5B%27sectors_list%27%5D.apply%28lambda x%3A x%5B0%5D%29%0AX_train%2C X_test%2C y_train%2C y_test = train_test_split%28%0A     X%2C y%2C test_size=0.33%2C random_state=SEED%29%0A%0Adef tsne_plot%28X_train%2C X_test%2C y_train%2C y_test%2C col%3A str%29%3A%0A    %22%22%22%0A    Helper to plot tsne visualisations on train and test set for a tfidf transformed column.%0A    %22%22%22%0A    tfidf = TfidfVectorizer%28%29%0A    tfidf.fit_transform%28X_train%5Bcol%5D%29%0A    train_features = tfidf.transform%28X_train%5Bcol%5D%29%0A    test_features = tfidf.transform%28X_test%5Bcol%5D%29%0A    tsne_train = TSNEVisualizer%28decompose_by=24%2C title=f%27Train set%3A %7Bcol%7D%27%29%0A    tsne_train.fit%28train_features%2C y_train%29%0A    tsne_train.show%28%29%0A    tsne_test = TSNEVisualizer%28decompose_by=24%2C title=f%27Test set%3A %7Bcol%7D%27%29%0A    ts..." isIPythonHidden="True" />
<var name="_i22" type="str" qualifier="builtins" value="from src.sklearn_utils import TextFeatureEngineering%2C select_col%2C construct_pipeline" isIPythonHidden="True" />
<var name="_i23" type="str" qualifier="builtins" value="X%2C y = df_eda%2C mlb.fit_transform%28df_eda%5B%27sectors_list%27%5D%29" isIPythonHidden="True" />
<var name="_i24" type="str" qualifier="builtins" value="import wandb%0Awandb.init%28project=%22climate-multi-label-classification%22%2C entity=%22stefl14%22%29" isIPythonHidden="True" />
<var name="_i3" type="str" qualifier="builtins" value="import pandas as pd%0Aimport numpy as np%0Aimport os%0Aimport plotly.express as px%0Afrom skmultilearn.model_selection import IterativeStratification%0Afrom sklearn.model_selection import train_test_split%0Afrom sklearn.preprocessing import MultiLabelBinarizer%0Afrom sklearn.dummy import DummyClassifier%0Afrom sklearn.metrics import hamming_loss%0Aimport seaborn as sns%0A%0Afrom sklearn.feature_extraction.text import TfidfVectorizer%0A%0Afrom yellowbrick.text import TSNEVisualizer%0Afrom yellowbrick.datasets import load_hobbies%0A%23 import tensorflow_addons as tfa%0Afrom sklearn.metrics import hamming_loss%0A%0Afrom skmultilearn.problem_transform import ClassifierChain%0Afrom sklearn.metrics import hamming_loss%2C accuracy_score%2C make_scorer%0Afrom sklearn.feature_extraction.text import CountVectorizer%2C TfidfVectorizer%0Afrom sklearn.naive_bayes import MultinomialNB%0Afrom sklearn.pipeline import Pipeline%0Afrom sklearn.linear_model import Lasso%0Afrom sklearn.model_selection import cross_val_score%0Afrom datetime import time%0A%0Afrom trans..." isIPythonHidden="True" />
<var name="_i4" type="str" qualifier="builtins" value="def create_tokenized_ds%28%0A    X%2C y%2C text_column=%22description_text%22%2C model_name=%22bert-base-cased%22%2C batch_size=16%0A%29%3A%0A    y = np.array%28y%2C dtype=%22int32%22%29%0A    X = X%5Btext_column%5D%0A    tokens = tokenizer%28%0A        list%28X%29%2C%0A        padding=%22max_length%22%2C%0A        truncation=True%2C%0A        return_tensors=%22tf%22%2C%0A        return_token_type_ids=False%2C%0A    %29%0A    tokens_w_labels = tokens.copy%28%29%0A    tokens_w_labels%5B%22target%22%5D = y%0A    tf_dataset = tf.data.Dataset.from_tensor_slices%28%28dict%28tokens_w_labels%29%2C y%29%29%0A    tf_dataset = tf_dataset.shuffle%28len%28tf_dataset%29%29.batch%28batch_size%29%0A    return tf_dataset%0A%0A%0Aimport keras%0A%0AK = keras.backend%0A%0A%0Aclass ExponentialLearningRate%28keras.callbacks.Callback%29%3A%0A    def __init__%28self%2C factor%29%3A%0A        self.factor = factor%0A        self.rates = %5B%5D%0A        self.losses = %5B%5D%0A%0A    def on_batch_end%28self%2C batch%2C logs%29%3A%0A        self.rates.append%28K.get_value%28self.model.optimizer.learning_rate%29%29%0A        self.losses.append%28logs%5B%22loss%22%5D%29%0A        K.set_value%28%0A            self.model.optimizer.le..." isIPythonHidden="True" />
<var name="_i5" type="str" qualifier="builtins" value="os.getcwd%28%29" isIPythonHidden="True" />
<var name="_i6" type="str" qualifier="builtins" value="%23 Constants%0ASEED=42%0AHOLD_OUT_PERCENTAGE=10%0AITERATIVE_STRAT_ORDER=1%0AKEEP_MOST_COMMON_LABELS=10%0ABATCH_SIZE=16%0ATRAIN_FRACTION=0.9%0AHUGGINGFACE_CONFIG=%27distilbert-base-cased%27%0ATEST_SET_FRAC=.1" isIPythonHidden="True" />
<var name="_i7" type="str" qualifier="builtins" value="data_path = Path%28os.path.abspath%28%27%27%29%29.parent / %27data%27 / %27recruitment-task_1-full.csv%27%0A%0Adf=pd.read_csv%28%27/home/stefan/PycharmProjects/multi-label-classification-climate/data/recruitment-task_1-full.csv%27%29%0Adf.head%28%29" isIPythonHidden="True" />
<var name="_i8" type="str" qualifier="builtins" value="df.info%28%29" isIPythonHidden="True" />
<var name="_i9" type="str" qualifier="builtins" value="%23 Parse labels into a list.%0Adf%5B%27sectors_list%27%5D=df%5B%27sectors%27%5D.str.split%28%22%3B%22%29%0Adf=df%5B~df.description_text.duplicated%28%29%5D %23 Found a duplicated entry" isIPythonHidden="True" />
<var name="_ih" type="list" qualifier="builtins" value="%5B%27%27%2C %22import sys%5Cn%5Cn%5Cn%5Cnget_ipython%28%29.run_line_magic%28%27load_ext%27%2C %27autoreload%27%29%5Cnget_ipython%28%29.run_line_magic%28%27autoreload%27%2C %272%27%29%22%2C %27from src.sklearn_utils import iter_train_test_split%2C simple_feature_engineering%5Cnfrom sklearn.ensemble import GradientBoostingClassifier%27%2C %27import pandas as pd%5Cnimport numpy as np%5Cnimport os%5Cnimport plotly.express as px%5Cnfrom skmultilearn.model_selection import IterativeStratification%5Cnfrom sklearn.model_selection import train_test_split%5Cnfrom sklearn.preprocessing import MultiLabelBinarizer%5Cnfrom sklearn.dummy import DummyClassifier%5Cnfrom sklearn.metrics import hamming_loss%5Cnimport seaborn as sns%5Cn%5Cnfrom sklearn.feature_extraction.text import TfidfVectorizer%5Cn%5Cnfrom yellowbrick.text import TSNEVisualizer%5Cnfrom yellowbrick.datasets import load_hobbies%5Cn%23 import tensorflow_addons as tfa%5Cnfrom sklearn.metrics import hamming_loss%5Cn%5Cnfrom skmultilearn.problem_transform import ClassifierChain%5Cnfrom sklearn.metrics import hamming_loss%2C accuracy_score%2C make_scorer..." isContainer="True" shape="25" isIPythonHidden="True" />
<var name="_ii" type="str" qualifier="builtins" value="from src.sklearn_utils import TextFeatureEngineering%2C select_col%2C construct_pipeline" isIPythonHidden="True" />
<var name="_iii" type="str" qualifier="builtins" value="%23 Let%27s see what happens if we subset the dataset so that it only contains rows with a single label%0A%23 and visualise the separation between classes to get%0Adf_single_label=df_eda%5Bdf_eda%5B%27sectors_list%27%5D.apply%28len%29==1%5D%0AX%2C y = df_single_label%5B%5B%27description_text%27%2C%27policy_title%27%2C%27full_text%27%5D%5D%2C df_single_label%5B%27sectors_list%27%5D.apply%28lambda x%3A x%5B0%5D%29%0AX_train%2C X_test%2C y_train%2C y_test = train_test_split%28%0A     X%2C y%2C test_size=0.33%2C random_state=SEED%29%0A%0Adef tsne_plot%28X_train%2C X_test%2C y_train%2C y_test%2C col%3A str%29%3A%0A    %22%22%22%0A    Helper to plot tsne visualisations on train and test set for a tfidf transformed column.%0A    %22%22%22%0A    tfidf = TfidfVectorizer%28%29%0A    tfidf.fit_transform%28X_train%5Bcol%5D%29%0A    train_features = tfidf.transform%28X_train%5Bcol%5D%29%0A    test_features = tfidf.transform%28X_test%5Bcol%5D%29%0A    tsne_train = TSNEVisualizer%28decompose_by=24%2C title=f%27Train set%3A %7Bcol%7D%27%29%0A    tsne_train.fit%28train_features%2C y_train%29%0A    tsne_train.show%28%29%0A    tsne_test = TSNEVisualizer%28decompose_by=24%2C title=f%27Test set%3A %7Bcol%7D%27%29%0A    ts..." isIPythonHidden="True" />
<var name="_oh" type="dict" qualifier="builtins" value="%7B5%3A %27/home/stefan/PycharmProjects/multi-label-classification-climate/notebooks%27%2C 7%3A    policy_id                       policy_title  %5C%0A0      10088     Circular economy promotion law   %0A1      10087                14th Five-Year Plan   %0A2      10046             National Forest Policy   %0A3      10044   Suriname National REDD%2B Strategy   %0A4      10042  Policy Development Plan 2017-2021   %0A%0A                                             sectors  %5C%0A0                  Industry%3BAgriculture%3BEconomy-wide   %0A1  Transportation%3BRural%3BLULUCF%3BEnergy%3BEconomy-wid...   %0A2                                             LULUCF   %0A3                                             LULUCF   %0A4                                       Economy-wide   %0A%0A                                    description_text  %0A0  This law promotes the development of a circula...  %0A1  The 14th Five Year Plan lays down the strategy...  %0A2  This document aims at protecting the country%27s...  %0A3  This document aims to protect Suriname%27s fores......" isContainer="True" shape="9" isIPythonHidden="True" />
<var name="_pydevd_bundle" type="module" qualifier="builtins" value="%3Cmodule %27_pydevd_bundle%27 from %27/snap/pycharm-professional/290/plugins/python/helpers/pydev/_pydevd_bundle/__init__.py%27&gt;" isContainer="True" />
<var name="accuracy_score" type="function" qualifier="builtins" value="%3Cfunction accuracy_score at 0x7fdf48fbb8b0&gt;" isContainer="True" />
<var name="col" type="str" qualifier="builtins" value="full_text" />
<var name="common_labels" type="Index" qualifier="pandas.core.indexes.base" value="Index%28%5B%27Energy%27%2C %27Transportation%27%2C %27LULUCF%27%2C %27Economy-wide%27%2C%0A       %27Residential and Commercial%27%2C %27Agriculture%27%2C %27Water%27%2C %27Industry%27%2C%0A       %27Waste%27%2C %27Health%27%5D%2C%0A      dtype=%27object%27%29" isContainer="True" shape="(10,)" />
<var name="construct_pipeline" type="function" qualifier="builtins" value="%3Cfunction construct_pipeline at 0x7fdf1be14a60&gt;" isContainer="True" />
<var name="create_tokenized_ds" type="function" qualifier="builtins" value="%3Cfunction create_tokenized_ds at 0x7fdf196f1790&gt;" isContainer="True" />
<var name="cross_val_score" type="function" qualifier="builtins" value="%3Cfunction cross_val_score at 0x7fdf48eb9b80&gt;" isContainer="True" />
<var name="cumulative_sum" type="Series" qualifier="pandas.core.series" value="%28%27Energy%27%2C 1143%29 %28%27Transportation%27%2C 1904%29 %28%27LULUCF%27%2C 2302%29 %28%27Economy-wide%27%2C 2668%29 %28%27Residential and Commercial%27%2C 3019%29 %28%27Agriculture%27%2C 3324%29 %28%27Water%27%2C 3621%29 %28%27Industry%27%2C 3859%29 %28%27Waste%27%2C 4036%29 %28%27Health%27%2C 4194%29 %28%27Environment%27%2C 4321%29 %28%27Urban%27%2C 4394%29 %28%27Buildings%27%2C 4459%29 %28%27Tourism%27%2C 4511%29 %28%27Social development%27%2C 4556%29 %28%27Disaster Risk Management %28Drm%29%27%2C 4589%29 %28%27Coastal zones%27%2C 4617%29 %28%27Rural%27%2C 4636%29 %28%27Adaptation%27%2C 4647%29 %28%27Cross Cutting Area%27%2C 4656%29 %28%27Public Sector%27%2C 4664%29 %28%27Other%27%2C 4670%29 %28%27Finance%27%2C 4675%29" isContainer="True" shape="(23,)" />
<var name="data_path" type="PosixPath" qualifier="pathlib" value="/home/stefan/PycharmProjects/multi-label-classification-climate/data/recruitment-task_1-full.csv" isContainer="True" />
<var name="df" type="DataFrame" qualifier="pandas.core.frame" value="policy_id                                       policy_title  %5C %5B0         10088                     Circular economy promotion law   %5D %5B1         10087                                14th Five-Year Plan   %5D %5B2         10046                             National Forest Policy   %5D %5B3         10044                   Suriname National REDD%2B Strategy   %5D %5B4         10042                  Policy Development Plan 2017-2021   %5D %5B...         ...                                                ...   %5D %5B1955       8835  National Climate Change Strategy and Action Pl...   %5D %5B1956       9110                 National Policy for Climate Change   %5D %5B1957       9191  Presidential Decree 7/2019 establishing the na...   %5D %5B1958       8889  Act No. 28 of 1972 concerning nuclear energy a...   %5D %5B1959       8887  Natural Hazards Compensation Act %28No. 59 of 2014%29   %5D %5B%5D %5B                                                sectors  %5C%5D %5B0                     Industry%3BAgriculture%3BEconomy-wide   %5D %5B1     Transportation%3BRural%3BLULUCF%3BEnergy%3B...%5D" isContainer="True" shape="(1959, 5)" />
<var name="df_eda" type="DataFrame" qualifier="pandas.core.frame" value="policy_id                                       policy_title  %5C %5B0         10088                     Circular economy promotion law   %5D %5B3         10044                   Suriname National REDD%2B Strategy   %5D %5B5         10049                               Energy Strategy 2050   %5D %5B6         10051                   Long-Term Climate Strategy%2C 2021   %5D %5B9         10054  Environmentally Sustainable Transport System P...   %5D %5B...         ...                                                ...   %5D %5B1955       8835  National Climate Change Strategy and Action Pl...   %5D %5B1956       9110                 National Policy for Climate Change   %5D %5B1957       9191  Presidential Decree 7/2019 establishing the na...   %5D %5B1958       8889  Act No. 28 of 1972 concerning nuclear energy a...   %5D %5B1959       8887  Natural Hazards Compensation Act %28No. 59 of 2014%29   %5D %5B%5D %5B                                       description_text  %5C%5D %5B0     This law promotes the development of a circula...   %5D %5B3     This document aims to protect Surin...%5D" isContainer="True" shape="(1680, 14)" />
<var name="df_filtered" type="DataFrame" qualifier="pandas.core.frame" value="policy_id                                       policy_title  %5C %5B0         10088                     Circular economy promotion law   %5D %5B1         10087                                14th Five-Year Plan   %5D %5B2         10046                             National Forest Policy   %5D %5B3         10044                   Suriname National REDD%2B Strategy   %5D %5B4         10042                  Policy Development Plan 2017-2021   %5D %5B...         ...                                                ...   %5D %5B1955       8835  National Climate Change Strategy and Action Pl...   %5D %5B1956       9110                 National Policy for Climate Change   %5D %5B1957       9191  Presidential Decree 7/2019 establishing the na...   %5D %5B1958       8889  Act No. 28 of 1972 concerning nuclear energy a...   %5D %5B1959       8887  Natural Hazards Compensation Act %28No. 59 of 2014%29   %5D %5B%5D %5B                                       description_text  %5C%5D %5B0     This law promotes the development of a circula...   %5D %5B1     The 14th Five Year Plan lays down t...%5D" isContainer="True" shape="(1879, 4)" />
<var name="df_labels" type="DataFrame" qualifier="pandas.core.frame" value="num_labels  cumulative_positive_labels  %5C %5BEnergy                                1143                        1143   %5D %5BTransportation                         761                        1904   %5D %5BLULUCF                                 398                        2302   %5D %5BEconomy-wide                           366                        2668   %5D %5BResidential and Commercial             351                        3019   %5D %5BAgriculture                            305                        3324   %5D %5BWater                                  297                        3621   %5D %5BIndustry                               238                        3859   %5D %5BWaste                                  177                        4036   %5D %5BHealth                                 158                        4194   %5D %5BEnvironment                            127                        4321   %5D %5BUrban                                   73                        4394   %5D %5BBuildings                             ...%5D" isContainer="True" shape="(23, 3)" />
<var name="df_single_label" type="DataFrame" qualifier="pandas.core.frame" value="policy_id                                       policy_title  %5C %5B3         10044                   Suriname National REDD%2B Strategy   %5D %5B5         10049                               Energy Strategy 2050   %5D %5B6         10051                   Long-Term Climate Strategy%2C 2021   %5D %5B9         10054  Environmentally Sustainable Transport System P...   %5D %5B10        10061  Uganda Green Growth Development Strategy 2017/...   %5D %5B...         ...                                                ...   %5D %5B1950       8704  National Strategy for Adaptation to Climate Ch...   %5D %5B1953       8766  Priority Framework for Action%3A Climate Change ...   %5D %5B1956       9110                 National Policy for Climate Change   %5D %5B1958       8889  Act No. 28 of 1972 concerning nuclear energy a...   %5D %5B1959       8887  Natural Hazards Compensation Act %28No. 59 of 2014%29   %5D %5B%5D %5B                                       description_text      sectors_list  %5C%5D %5B3     This document aims to protect Suriname%27s fores...          %5BLULUCF%5D   %5D %5B5    ...%5D" isContainer="True" shape="(752, 14)" />
<var name="df_test" type="DataFrame" qualifier="pandas.core.frame" value="policy_id                                       policy_title  %5C %5B1        10087                                14th Five-Year Plan   %5D %5B2        10046                             National Forest Policy   %5D %5B4        10042                  Policy Development Plan 2017-2021   %5D %5B7        10052                 Switzerland%E2%80%99s climate policy%2C 2018   %5D %5B8        10053       Smart Grid Development Master Plan 2015-2036   %5D %5B..         ...                                                ...   %5D %5B549       9133                     Law No. 293-Z on energy saving   %5D %5B552       9045                  Law No. 1136-XIV on energy saving   %5D %5B588       8784  Industrial Sector Plan for mitigation and Adap...   %5D %5B616       8687                              Pollution Control Act   %5D %5B760       4313          Second National Environmental Action Plan   %5D %5B%5D %5B                                      description_text  %5C%5D %5B1    The 14th Five Year Plan lays down the strategy...   %5D %5B2    This document aims at protecting the country%27s... ...%5D" isContainer="True" shape="(199, 4)" />
<var name="exit" type="ZMQExitAutocall" qualifier="IPython.core.autocall" value="%3CIPython.core.autocall.ZMQExitAutocall object at 0x7fdf59b7a1c0&gt;" isContainer="True" isIPythonHidden="True" />
<var name="fraction_dataset_covered" type="Series" qualifier="pandas.core.series" value="%28%27Energy%27%2C 0.24449197860962568%29 %28%27Transportation%27%2C 0.4072727272727273%29 %28%27LULUCF%27%2C 0.4924064171122995%29 %28%27Economy-wide%27%2C 0.5706951871657754%29 %28%27Residential and Commercial%27%2C 0.6457754010695187%29 %28%27Agriculture%27%2C 0.7110160427807487%29 %28%27Water%27%2C 0.7745454545454545%29 %28%27Industry%27%2C 0.8254545454545454%29 %28%27Waste%27%2C 0.8633155080213903%29 %28%27Health%27%2C 0.8971122994652406%29 %28%27Environment%27%2C 0.9242780748663102%29 %28%27Urban%27%2C 0.9398930481283423%29 %28%27Buildings%27%2C 0.9537967914438503%29 %28%27Tourism%27%2C 0.9649197860962567%29 %28%27Social development%27%2C 0.9745454545454545%29 %28%27Disaster Risk Management %28Drm%29%27%2C 0.9816042780748663%29 %28%27Coastal zones%27%2C 0.9875935828877005%29 %28%27Rural%27%2C 0.9916577540106952%29 %28%27Adaptation%27%2C 0.9940106951871658%29 %28%27Cross Cutting Area%27%2C 0.9959358288770054%29 %28%27Public Sector%27%2C 0.9976470588235294%29 %28%27Other%27%2C 0.9989304812834224%29 %28%27Finance%27%2C 1.0%29" isContainer="True" shape="(23,)" />
<var name="get_ipython" type="method" qualifier="builtins" value="%3Cbound method InteractiveShell.get_ipython of %3Cipykernel.zmqshell.ZMQInteractiveShell object at 0x7fdf59b5e520&gt;&gt;" isContainer="True" isIPythonHidden="True" />
<var name="go" type="module" qualifier="builtins" value="%3Cmodule %27plotly.graph_objects%27 from %27/home/stefan/anaconda3/envs/multi-label-classification-climate/lib/python3.9/site-packages/plotly/graph_objects/__init__.py%27&gt;" isContainer="True" />
<var name="hamming_loss" type="function" qualifier="builtins" value="%3Cfunction hamming_loss at 0x7fdf48fc2280&gt;" isContainer="True" />
<var name="iter_train_test_split" type="function" qualifier="builtins" value="%3Cfunction iter_train_test_split at 0x7fdf1cce23a0&gt;" isContainer="True" />
<var name="joblib" type="module" qualifier="builtins" value="%3Cmodule %27joblib%27 from %27/home/stefan/anaconda3/envs/multi-label-classification-climate/lib/python3.9/site-packages/joblib/__init__.py%27&gt;" isContainer="True" />
<var name="labels_flattened" type="Series" qualifier="pandas.core.series" value="%280%2C %27Industry%27%29 %280%2C %27Agriculture%27%29 %280%2C %27Economy-wide%27%29 %281%2C %27Transportation%27%29 %281%2C %27Rural%27%29 %281%2C %27LULUCF%27%29 %281%2C %27Energy%27%29 %281%2C %27Economy-wide%27%29 %281%2C %27Agriculture%27%29 %282%2C %27LULUCF%27%29 %283%2C %27LULUCF%27%29 %284%2C %27Economy-wide%27%29 %285%2C %27Energy%27%29 %286%2C %27Economy-wide%27%29 %287%2C %27Economy-wide%27%29 %288%2C %27Energy%27%29 %289%2C %27Transportation%27%29 %2810%2C %27Economy-wide%27%29 %2811%2C %27Economy-wide%27%29 %2812%2C %27Economy-wide%27%29 %2813%2C %27Economy-wide%27%29 %2814%2C %27Economy-wide%27%29 %2815%2C %27Economy-wide%27%29 %2816%2C %27Social development%27%29 %2816%2C %27LULUCF%27%29 %2816%2C %27Economy-wide%27%29 %2817%2C %27Industry%27%29 %2818%2C %27Economy-wide%27%29 %2819%2C %27Agriculture%27%29 %2821%2C %27Energy%27%29 %2821%2C %27Economy-wide%27%29 %2821%2C %27Adaptation%27%29 %2822%2C %27Health%27%29 %2823%2C %27Economy-wide%27%29 %2824%2C %27Economy-wide%27%29 %2825%2C %27Transportation%27%29 %2826%2C %27LULUCF%27%29 %2827%2C %27Economy-wide%27%29 %2828%2C %27Adaptation%27%29 %2829%2C %27Buildings%27%29 %2830%2C %27Tourism%27%29 %2831%2C %27Environment%27%29 %2831%2C %27Energy%27%29 %2831%2C %27Economy-wide%27%29 %2832%2C %27Economy-wide%27%29 %2833%2C %27Transportation%27%29 %2834%2C %27Energy%27%29 %2834%2C %27Economy-wide%27%29 %2835%2C %27Economy-wide%27%29 %2835%2C %27Coastal zones%27%29 %2835%2C %27Adaptation%27%29 %2836%2C %27LULUCF%27%29 %2836%2C %27Energy%27%29 %2836%2C %27Economy-wide%27%29 %2837%2C %27LULUCF%27%29 %2838%2C %27Environment%27%29 %2839%2C %27LULUCF%27%29 %2839%2C %27Energy%27%29 %2840%2C %27Industry%27%29 %2840%2C %27Health%27%29 %2840%2C %27Economy-wide%27%29 %2840%2C %27Coastal zones%27%29 %2840%2C %27Buildings%27%29 %2841%2C %27Urban%27%29 %2841%2C %27Energy%27%29 %2842%2C %27Water%27%29 %2842%2C %27Cross Cutting Area%27%29 %2843%2C %27Economy-wide%27%29 %2844%2C %27Transportation%27%29 %2844%2C %27Public Sector%27%29 %2844%2C %27Buildings%27%29 %2845%2C %27Energy%27%29 %2846%2C %27Urban%27%29 %2846%2C %27LULUCF%27%29 %2846%2C %27Agriculture%27%29 %2847%2C %27Environment%27%29 %2848%2C %27LULUCF%27%29 %2849%2C %27Energy%27%29 %2849%2C %27Economy-wide%27%29 %2850%2C %27Residential and Commercial%27%29 %2850%2C %27Buildings%27%29 %2851%2C %27LULUCF%27%29 %2852%2C %27Economy-wide%27%29 %2853%2C %27Economy-wide%27%29 %2854%2C %27Economy-wide%27%29 %2855%2C %27Energy%27%29 %2856%2C %27Energy%27%29 %2857%2C %27Economy-wide%27%29 %2858%2C %27Economy-wide%27%29 %2859%2C %27Economy-wide%27%29 %2860%2C %27Economy-wide%27%29 %2861%2C %27Economy-wide%27%29 %2862%2C %27Transportation%27%29 %2863%2C %27Economy-wide%27%29 %2864%2C %27Economy-wide%27%29 %2865%2C %27Energy%27%29 %2866%2C %27Energy%27%29 %2867%2C %27Economy-wide%27%29 %2868%2C %27Transportation%27%29 %2869%2C %27Economy-wide%27%29" isContainer="True" shape="(4675,)" />
<var name="load_hobbies" type="function" qualifier="builtins" value="%3Cfunction load_hobbies at 0x7fdf1b790700&gt;" isContainer="True" />
<var name="logger" type="RootLogger" qualifier="logging" value="%3CRootLogger root %28CRITICAL%29&gt;" isContainer="True" />
<var name="logging" type="module" qualifier="builtins" value="%3Cmodule %27logging%27 from %27/home/stefan/anaconda3/envs/multi-label-classification-climate/lib/python3.9/logging/__init__.py%27&gt;" isContainer="True" />
<var name="make_scorer" type="function" qualifier="builtins" value="%3Cfunction make_scorer at 0x7fdf48eac670&gt;" isContainer="True" />
<var name="make_subplots" type="function" qualifier="builtins" value="%3Cfunction make_subplots at 0x7fdf1a24e790&gt;" isContainer="True" />
<var name="math" type="module" qualifier="builtins" value="%3Cmodule %27math%27 from %27/home/stefan/anaconda3/envs/multi-label-classification-climate/lib/python3.9/lib-dynload/math.cpython-39-x86_64-linux-gnu.so%27&gt;" isContainer="True" />
<var name="mlb" type="MultiLabelBinarizer" qualifier="sklearn.preprocessing._label" value="MultiLabelBinarizer%28%29" isContainer="True" />
<var name="n_unique_labels" type="int" qualifier="builtins" value="23" />
<var name="np" type="module" qualifier="builtins" value="%3Cmodule %27numpy%27 from %27/home/stefan/anaconda3/envs/multi-label-classification-climate/lib/python3.9/site-packages/numpy/__init__.py%27&gt;" isContainer="True" />
<var name="num_instances_each_label" type="Series" qualifier="pandas.core.series" value="%28%27Energy%27%2C 1143%29 %28%27Transportation%27%2C 761%29 %28%27LULUCF%27%2C 398%29 %28%27Economy-wide%27%2C 366%29 %28%27Residential and Commercial%27%2C 351%29 %28%27Agriculture%27%2C 305%29 %28%27Water%27%2C 297%29 %28%27Industry%27%2C 238%29 %28%27Waste%27%2C 177%29 %28%27Health%27%2C 158%29 %28%27Environment%27%2C 127%29 %28%27Urban%27%2C 73%29 %28%27Buildings%27%2C 65%29 %28%27Tourism%27%2C 52%29 %28%27Social development%27%2C 45%29 %28%27Disaster Risk Management %28Drm%29%27%2C 33%29 %28%27Coastal zones%27%2C 28%29 %28%27Rural%27%2C 19%29 %28%27Adaptation%27%2C 11%29 %28%27Cross Cutting Area%27%2C 9%29 %28%27Public Sector%27%2C 8%29 %28%27Other%27%2C 6%29 %28%27Finance%27%2C 5%29" isContainer="True" shape="(23,)" />
<var name="os" type="module" qualifier="builtins" value="%3Cmodule %27os%27 from %27/home/stefan/anaconda3/envs/multi-label-classification-climate/lib/python3.9/os.py%27&gt;" isContainer="True" />
<var name="pd" type="module" qualifier="builtins" value="%3Cmodule %27pandas%27 from %27/home/stefan/anaconda3/envs/multi-label-classification-climate/lib/python3.9/site-packages/pandas/__init__.py%27&gt;" isContainer="True" />
<var name="plt" type="module" qualifier="builtins" value="%3Cmodule %27matplotlib.pyplot%27 from %27/home/stefan/anaconda3/envs/multi-label-classification-climate/lib/python3.9/site-packages/matplotlib/pyplot.py%27&gt;" isContainer="True" />
<var name="px" type="module" qualifier="builtins" value="%3Cmodule %27plotly.express%27 from %27/home/stefan/anaconda3/envs/multi-label-classification-climate/lib/python3.9/site-packages/plotly/express/__init__.py%27&gt;" isContainer="True" />
<var name="pydev_jupyter_vars" type="module" qualifier="builtins" value="%3Cmodule %27pydev_jupyter_vars%27 from %27/snap/pycharm-professional/290/plugins/python/helpers-pro/jupyter_debug/pydev_jupyter_vars.py%27&gt;" isContainer="True" />
<var name="quit" type="ZMQExitAutocall" qualifier="IPython.core.autocall" value="%3CIPython.core.autocall.ZMQExitAutocall object at 0x7fdf59b7a1c0&gt;" isContainer="True" isIPythonHidden="True" />
<var name="remove_imported_pydev_package" type="function" qualifier="builtins" value="%3Cfunction remove_imported_pydev_package at 0x7fdf1cd905e0&gt;" isContainer="True" />
<var name="select_col" type="function" qualifier="builtins" value="%3Cfunction select_col at 0x7fdf1be14310&gt;" isContainer="True" />
<var name="simple_feature_engineering" type="function" qualifier="builtins" value="%3Cfunction simple_feature_engineering at 0x7fdf1cb21af0&gt;" isContainer="True" />
<var name="sns" type="module" qualifier="builtins" value="%3Cmodule %27seaborn%27 from %27/home/stefan/anaconda3/envs/multi-label-classification-climate/lib/python3.9/site-packages/seaborn/__init__.py%27&gt;" isContainer="True" />
<var name="subplot_helper" type="function" qualifier="builtins" value="%3Cfunction subplot_helper at 0x7fdf0eee9f70&gt;" isContainer="True" />
<var name="sys" type="module" qualifier="builtins" value="%3Cmodule %27sys%27 %28built-in%29&gt;" isContainer="True" />
<var name="text_cols" type="list" qualifier="builtins" value="%5B%27description_text%27%2C %27policy_title%27%2C %27full_text%27%5D" isContainer="True" shape="3" />
<var name="text_cols_n_tokens" type="list" qualifier="builtins" value="%5B%27description_text_ntokens%27%2C %27policy_title_ntokens%27%2C %27full_text_ntokens%27%5D" isContainer="True" shape="3" />
<var name="text_cols_n_words" type="list" qualifier="builtins" value="%5B%27description_text_nwords%27%2C %27policy_title_nwords%27%2C %27full_text_nwords%27%5D" isContainer="True" shape="3" />
<var name="time" type="type" qualifier="builtins" value="%3Cclass %27datetime.time%27&gt;" isContainer="True" />
<var name="tokenizer" type="DistilBertTokenizerFast" qualifier="transformers.models.distilbert.tokenization_distilbert_fast" value="PreTrainedTokenizerFast%28name_or_path=%27distilbert-base-cased%27%2C vocab_size=28996%2C model_max_len=512%2C is_fast=True%2C padding_side=%27right%27%2C truncation_side=%27right%27%2C special_tokens=%7B%27unk_token%27%3A %27%5BUNK%5D%27%2C %27sep_token%27%3A %27%5BSEP%5D%27%2C %27pad_token%27%3A %27%5BPAD%5D%27%2C %27cls_token%27%3A %27%5BCLS%5D%27%2C %27mask_token%27%3A %27%5BMASK%5D%27%7D%29" isContainer="True" shape="28996" />
<var name="total_positive_labels" type="int64" qualifier="numpy" value="4675" isContainer="True" shape="()" />
<var name="train_test_split" type="function" qualifier="builtins" value="%3Cfunction train_test_split at 0x7fdf1c8fb790&gt;" isContainer="True" />
<var name="tsne_plot" type="function" qualifier="builtins" value="%3Cfunction tsne_plot at 0x7fdf195f7dc0&gt;" isContainer="True" />
<var name="underrepresented_labels" type="Index" qualifier="pandas.core.indexes.base" value="Index%28%5B%27Urban%27%2C %27Buildings%27%2C %27Tourism%27%2C %27Social development%27%2C%0A       %27Disaster Risk Management %28Drm%29%27%2C %27Coastal zones%27%2C %27Rural%27%2C%0A       %27Adaptation%27%2C %27Cross Cutting Area%27%2C %27Public Sector%27%2C %27Other%27%2C%0A       %27Finance%27%5D%2C%0A      dtype=%27object%27%29" isContainer="True" shape="(12,)" />
<var name="unique_labels" type="ndarray" qualifier="numpy" value="%5B%27Industry%27 %27Agriculture%27 %27Economy-wide%27 %27Transportation%27 %27Rural%27 %27LULUCF%27%2C %27Energy%27 %27Social development%27 %27Adaptation%27 %27Health%27 %27Buildings%27 %27Tourism%27%2C %27Environment%27 %27Coastal zones%27 %27Urban%27 %27Water%27 %27Cross Cutting Area%27%2C %27Public Sector%27 %27Residential and Commercial%27 %27Finance%27 %27Waste%27 %27Other%27%2C %27Disaster Risk Management %28Drm%29%27%5D" isContainer="True" shape="(23,)" />
<var name="wandb" type="module" qualifier="builtins" value="%3Cmodule %27wandb%27 from %27/home/stefan/anaconda3/envs/multi-label-classification-climate/lib/python3.9/site-packages/wandb/__init__.py%27&gt;" isContainer="True" />
<var name="y" type="ndarray" qualifier="numpy" value="%5B%5B1 1 0 0 1 0 0 0 0 0%5D%2C %5B0 0 0 0 0 1 0 0 0 0%5D%2C %5B0 0 1 0 0 0 0 0 0 0%5D%2C %5B0 1 0 0 0 0 0 0 0 0%5D%2C %5B0 0 0 0 0 0 0 1 0 0%5D%2C %5B0 1 0 0 0 0 0 0 0 0%5D%2C %5B0 1 0 0 0 0 0 0 0 0%5D%2C %5B0 1 0 0 0 0 0 0 0 0%5D%2C %5B0 1 0 0 0 1 0 0 0 0%5D%2C %5B1 0 0 0 0 0 0 0 0 0%5D%2C %5B0 1 1 0 0 0 0 0 0 0%5D%2C %5B0 1 0 0 0 0 0 0 0 0%5D%2C %5B0 1 1 0 0 0 0 0 0 0%5D%2C %5B0 0 0 0 0 0 0 1 0 0%5D%2C %5B0 1 1 0 0 0 0 0 0 0%5D%2C %5B0 1 1 0 0 1 0 0 0 0%5D%2C %5B0 0 0 0 0 1 0 0 0 0%5D%2C %5B0 0 1 0 0 1 0 0 0 0%5D%2C %5B0 0 0 0 0 0 0 0 0 1%5D%2C %5B0 1 0 0 0 0 0 0 0 0%5D%2C %5B0 0 1 0 0 0 0 0 0 0%5D%2C %5B0 0 0 0 0 0 1 0 0 0%5D%2C %5B0 0 0 0 0 1 0 0 0 0%5D%2C %5B0 1 0 0 0 0 0 0 0 0%5D%2C %5B0 1 0 0 0 0 0 0 0 0%5D%2C %5B0 0 1 0 0 0 0 0 0 0%5D%2C %5B0 1 0 0 0 0 0 0 0 0%5D%2C %5B0 1 0 0 0 0 0 0 0 0%5D%2C %5B0 0 0 0 0 0 0 1 0 0%5D%2C %5B0 1 0 0 0 0 0 0 0 0%5D%2C %5B0 0 1 0 0 0 0 0 0 0%5D%2C %5B0 1 0 0 0 0 0 0 0 0%5D%2C %5B0 1 0 0 0 0 0 0 0 0%5D%2C %5B0 0 1 0 0 0 0 0 0 0%5D%2C %5B0 1 0 0 0 0 0 0 0 0%5D%2C %5B0 0 1 0 0 0 0 0 0 0%5D%2C %5B0 1 0 0 0 0 0 0 0 0%5D%2C %5B0 1 1 0 0 0 0 0 0 0%5D%2C %5B0 0 1 0 0 0 0 0 0 0%5D%2C %5B0 0 1 0 0 0 0 0 0 0%5D%2C %5B0 0 1 0 0 0 0 1 0 0%5D%2C %5B0 0 1 0 0 0 0 0 0 0%5D%2C %5B0 0 1 0 0 0 1 1 0 0%5D%2C %5B1 0 0 0 0..." isContainer="True" shape="(1680, 10)" />
<var name="y_eda" type="ndarray" qualifier="numpy" value="%5B%5B1 1 0 0 1 0 0 0 0 0%5D%2C %5B0 0 0 0 0 1 0 0 0 0%5D%2C %5B0 0 1 0 0 0 0 0 0 0%5D%2C %5B0 1 0 0 0 0 0 0 0 0%5D%2C %5B0 0 0 0 0 0 0 1 0 0%5D%2C %5B0 1 0 0 0 0 0 0 0 0%5D%2C %5B0 1 0 0 0 0 0 0 0 0%5D%2C %5B0 1 0 0 0 0 0 0 0 0%5D%2C %5B0 1 0 0 0 1 0 0 0 0%5D%2C %5B1 0 0 0 0 0 0 0 0 0%5D%2C %5B0 1 1 0 0 0 0 0 0 0%5D%2C %5B0 1 0 0 0 0 0 0 0 0%5D%2C %5B0 1 1 0 0 0 0 0 0 0%5D%2C %5B0 0 0 0 0 0 0 1 0 0%5D%2C %5B0 1 1 0 0 0 0 0 0 0%5D%2C %5B0 1 1 0 0 1 0 0 0 0%5D%2C %5B0 0 0 0 0 1 0 0 0 0%5D%2C %5B0 0 1 0 0 1 0 0 0 0%5D%2C %5B0 0 0 0 0 0 0 0 0 1%5D%2C %5B0 1 0 0 0 0 0 0 0 0%5D%2C %5B0 0 1 0 0 0 0 0 0 0%5D%2C %5B0 0 0 0 0 0 1 0 0 0%5D%2C %5B0 0 0 0 0 1 0 0 0 0%5D%2C %5B0 1 0 0 0 0 0 0 0 0%5D%2C %5B0 1 0 0 0 0 0 0 0 0%5D%2C %5B0 0 1 0 0 0 0 0 0 0%5D%2C %5B0 1 0 0 0 0 0 0 0 0%5D%2C %5B0 1 0 0 0 0 0 0 0 0%5D%2C %5B0 0 0 0 0 0 0 1 0 0%5D%2C %5B0 1 0 0 0 0 0 0 0 0%5D%2C %5B0 0 1 0 0 0 0 0 0 0%5D%2C %5B0 1 0 0 0 0 0 0 0 0%5D%2C %5B0 1 0 0 0 0 0 0 0 0%5D%2C %5B0 0 1 0 0 0 0 0 0 0%5D%2C %5B0 1 0 0 0 0 0 0 0 0%5D%2C %5B0 0 1 0 0 0 0 0 0 0%5D%2C %5B0 1 0 0 0 0 0 0 0 0%5D%2C %5B0 1 1 0 0 0 0 0 0 0%5D%2C %5B0 0 1 0 0 0 0 0 0 0%5D%2C %5B0 0 1 0 0 0 0 0 0 0%5D%2C %5B0 0 1 0 0 0 0 1 0 0%5D%2C %5B0 0 1 0 0 0 0 0 0 0%5D%2C %5B0 0 1 0 0 0 1 1 0 0%5D%2C %5B1 0 0 0 0..." isContainer="True" shape="(1680, 10)" />
<var name="y_eda_df" type="DataFrame" qualifier="pandas.core.frame" value="Agriculture  Economy-wide  Energy  Health  Industry  LULUCF  %5C %5B0               1             1       0       0         1       0   %5D %5B1               0             0       0       0         0       1   %5D %5B2               0             0       1       0         0       0   %5D %5B3               0             1       0       0         0       0   %5D %5B4               0             0       0       0         0       0   %5D %5B...           ...           ...     ...     ...       ...     ...   %5D %5B1675            0             0       1       1         0       0   %5D %5B1676            0             0       0       0         0       0   %5D %5B1677            0             0       1       0         0       1   %5D %5B1678            0             0       1       0         0       0   %5D %5B1679            0             0       0       0         0       0   %5D %5B%5D %5B      Residential and Commercial  Transportation  Waste  Water  %5D %5B0                              0               0      0      0  %5D %5B1                              0         ...%5D" isContainer="True" shape="(1680, 10)" />
<var name="y_test" type="Series" qualifier="pandas.core.series" value="%281497%2C %27Energy%27%29 %281517%2C %27Economy-wide%27%29 %281244%2C %27Energy%27%29 %28249%2C %27Transportation%27%29 %28698%2C %27Energy%27%29 %281002%2C %27Economy-wide%27%29 %281757%2C %27Transportation%27%29 %28765%2C %27Energy%27%29 %281958%2C %27Energy%27%29 %281738%2C %27Economy-wide%27%29 %281091%2C %27Energy%27%29 %28893%2C %27Energy%27%29 %281328%2C %27LULUCF%27%29 %281869%2C %27Energy%27%29 %281257%2C %27Economy-wide%27%29 %28398%2C %27Transportation%27%29 %281326%2C %27Energy%27%29 %281550%2C %27Transportation%27%29 %28375%2C %27LULUCF%27%29 %28666%2C %27Energy%27%29 %281201%2C %27Energy%27%29 %281010%2C %27Energy%27%29 %281570%2C %27Transportation%27%29 %281199%2C %27Energy%27%29 %28979%2C %27Energy%27%29 %28112%2C %27Energy%27%29 %281928%2C %27Economy-wide%27%29 %28697%2C %27Residential and Commercial%27%29 %281112%2C %27Energy%27%29 %28583%2C %27LULUCF%27%29 %28484%2C %27Residential and Commercial%27%29 %281059%2C %27Energy%27%29 %281908%2C %27Energy%27%29 %28708%2C %27Economy-wide%27%29 %281953%2C %27Agriculture%27%29 %281214%2C %27Energy%27%29 %28438%2C %27Transportation%27%29 %28951%2C %27Energy%27%29 %281448%2C %27Transportation%27%29 %28762%2C %27Energy%27%29 %28795%2C %27Energy%27%29 %28918%2C %27Transportation%27%29 %281914%2C %27Energy%27%29 %281544%2C %27Agriculture%27%29 %28953%2C %27Economy-wide%27%29 %2895%2C %27Agriculture%27%29 %28700%2C %27LULUCF%27%29 %281222%2C %27Energy%27%29 %28294%2C %27Agriculture%27%29 %281100%2C %27Energy%27%29 %281217%2C %27Transportation%27%29 %281526%2C %27Transportation%27%29 %281041%2C %27Transportation%27%29 %281644%2C %27Energy%27%29 %2837%2C %27LULUCF%27%29 %28554%2C %27Energy%27%29 %281065%2C %27Energy%27%29 %2888%2C %27Energy%27%29 %281109%2C %27Energy%27%29 %28590%2C %27Energy%27%29 %28574%2C %27Energy%27%29 %28252%2C %27Agriculture%27%29 %28203%2C %27Water%27%29 %28165%2C %27LULUCF%27%29 %28619%2C %27Water%27%29 %281039%2C %27Economy-wide%27%29 %281237%2C %27Economy-wide%27%29 %28823%2C %27Energy%27%29 %28199%2C %27Energy%27%29 %28839%2C %27Energy%27%29 %281915%2C %27Energy%27%29 %281123%2C %27Economy-wide%27%29 %281489%2C %27Energy%27%29 %28964%2C %27Energy%27%29 %281139%2C %27Residential and Commercial%27%29 %28827%2C %27Health%27%29 %281725%2C %27Energy%27%29 %28247%2C %27Transportation%27%29 %281820%2C %27Transportation%27%29 %28232%2C %27Residential and Commercial%27%29 %28702%2C %27LULUCF%27%29 %281221%2C %27Transportation%27%29 %28602%2C %27Transportation%27%29 %28196%2C %27Transportation%27%29 %281624%2C %27Economy-wide%27%29 %28782%2C %27Economy-wide%27%29 %28145%2C %27Residential and Commercial%27%29 %28971%2C %27Energy%27%29 %28990%2C %27Energy%27%29 %28842%2C %27Energy%27%29 %281424%2C %27Economy-wide%27%29 %28502%2C %27Water%27%29 %28769%2C %27Economy-wide%27%29 %2819%2C %27Agriculture%27%29 %28671%2C %27Transportation%27%29 %2866%2C %27Energy%27%29 %281147%2C %27LULUCF%27%29 %281950%2C %27Economy-wide%27%29 %281656%2C %27Economy-wide%27%29 %28725%2C %27Energy%27%29" isContainer="True" shape="(249,)" />
<var name="y_train" type="Series" qualifier="pandas.core.series" value="%28946%2C %27Energy%27%29 %281077%2C %27Energy%27%29 %28753%2C %27Energy%27%29 %28917%2C %27Energy%27%29 %28966%2C %27Economy-wide%27%29 %281563%2C %27Transportation%27%29 %28420%2C %27Transportation%27%29 %28470%2C %27Transportation%27%29 %28776%2C %27Energy%27%29 %28347%2C %27Transportation%27%29 %28329%2C %27LULUCF%27%29 %281004%2C %27Energy%27%29 %281151%2C %27Economy-wide%27%29 %281780%2C %27Transportation%27%29 %281745%2C %27Economy-wide%27%29 %281115%2C %27LULUCF%27%29 %2842%2C %27Water%27%29 %28130%2C %27Energy%27%29 %28125%2C %27LULUCF%27%29 %28607%2C %27Energy%27%29 %281670%2C %27Transportation%27%29 %281541%2C %27Energy%27%29 %281102%2C %27Energy%27%29 %28631%2C %27Energy%27%29 %281225%2C %27Energy%27%29 %281641%2C %27Transportation%27%29 %28630%2C %27Energy%27%29 %281308%2C %27Energy%27%29 %281319%2C %27LULUCF%27%29 %28774%2C %27Economy-wide%27%29 %281243%2C %27Energy%27%29 %281899%2C %27Energy%27%29 %2851%2C %27LULUCF%27%29 %281155%2C %27Energy%27%29 %28771%2C %27Energy%27%29 %28904%2C %27Energy%27%29 %281189%2C %27Economy-wide%27%29 %28824%2C %27Energy%27%29 %281298%2C %27Transportation%27%29 %281209%2C %27Agriculture%27%29 %281335%2C %27Transportation%27%29 %281832%2C %27Energy%27%29 %2833%2C %27Transportation%27%29 %28764%2C %27Energy%27%29 %2863%2C %27Economy-wide%27%29 %28709%2C %27Economy-wide%27%29 %281291%2C %27Transportation%27%29 %281900%2C %27Energy%27%29 %281909%2C %27Transportation%27%29 %281044%2C %27Energy%27%29 %281579%2C %27Energy%27%29 %28680%2C %27Energy%27%29 %281743%2C %27Transportation%27%29 %28350%2C %27Energy%27%29 %28962%2C %27Energy%27%29 %28882%2C %27Industry%27%29 %281145%2C %27Industry%27%29 %28807%2C %27Energy%27%29 %28644%2C %27Energy%27%29 %281542%2C %27Transportation%27%29 %28956%2C %27Agriculture%27%29 %28580%2C %27LULUCF%27%29 %28246%2C %27Water%27%29 %281253%2C %27Energy%27%29 %28798%2C %27Energy%27%29 %28215%2C %27Water%27%29 %281150%2C %27Energy%27%29 %28650%2C %27Energy%27%29 %28790%2C %27Economy-wide%27%29 %28736%2C %27Energy%27%29 %28327%2C %27Agriculture%27%29 %281615%2C %27Energy%27%29 %28483%2C %27LULUCF%27%29 %28523%2C %27Transportation%27%29 %281566%2C %27Economy-wide%27%29 %28815%2C %27Energy%27%29 %28738%2C %27Energy%27%29 %283%2C %27LULUCF%27%29 %281927%2C %27Economy-wide%27%29 %28938%2C %27Economy-wide%27%29 %281655%2C %27LULUCF%27%29 %281067%2C %27Energy%27%29 %28800%2C %27Economy-wide%27%29 %281501%2C %27Transportation%27%29 %28477%2C %27Transportation%27%29 %28719%2C %27Energy%27%29 %28989%2C %27LULUCF%27%29 %281013%2C %27Agriculture%27%29 %28794%2C %27Economy-wide%27%29 %28892%2C %27Health%27%29 %281302%2C %27Transportation%27%29 %28569%2C %27Economy-wide%27%29 %281508%2C %27Energy%27%29 %281491%2C %27LULUCF%27%29 %281729%2C %27Energy%27%29 %281393%2C %27LULUCF%27%29 %28786%2C %27Transportation%27%29 %281331%2C %27Transportation%27%29 %28859%2C %27Energy%27%29 %28863%2C %27Transportation%27%29" isContainer="True" shape="(503,)" />
</xml>
<xml><var name="AutoTokenizer" type="type" qualifier="builtins" value="%3Cclass %27transformers.models.auto.tokenization_auto.AutoTokenizer%27&gt;" isContainer="True" />
<var name="BATCH_SIZE" type="int" qualifier="builtins" value="16" />
<var name="ClassifierChain" type="type" qualifier="builtins" value="%3Cclass %27skmultilearn.problem_transform.cc.ClassifierChain%27&gt;" isContainer="True" />
<var name="CountVectorizer" type="type" qualifier="builtins" value="%3Cclass %27sklearn.feature_extraction.text.CountVectorizer%27&gt;" isContainer="True" />
<var name="DummyClassifier" type="type" qualifier="builtins" value="%3Cclass %27sklearn.dummy.DummyClassifier%27&gt;" isContainer="True" />
<var name="GradientBoostingClassifier" type="ABCMeta" qualifier="abc" value="%3Cclass %27sklearn.ensemble._gb.GradientBoostingClassifier%27&gt;" isContainer="True" />
<var name="HOLD_OUT_PERCENTAGE" type="int" qualifier="builtins" value="10" />
<var name="HUGGINGFACE_CONFIG" type="str" qualifier="builtins" value="distilbert-base-cased" />
<var name="ITERATIVE_STRAT_ORDER" type="int" qualifier="builtins" value="1" />
<var name="In" type="list" qualifier="builtins" value="%5B%27%27%2C %22import sys%5Cn%5Cn%5Cn%5Cnget_ipython%28%29.run_line_magic%28%27load_ext%27%2C %27autoreload%27%29%5Cnget_ipython%28%29.run_line_magic%28%27autoreload%27%2C %272%27%29%22%2C %27from src.sklearn_utils import iter_train_test_split%2C simple_feature_engineering%5Cnfrom sklearn.ensemble import GradientBoostingClassifier%27%2C %27import pandas as pd%5Cnimport numpy as np%5Cnimport os%5Cnimport plotly.express as px%5Cnfrom skmultilearn.model_selection import IterativeStratification%5Cnfrom sklearn.model_selection import train_test_split%5Cnfrom sklearn.preprocessing import MultiLabelBinarizer%5Cnfrom sklearn.dummy import DummyClassifier%5Cnfrom sklearn.metrics import hamming_loss%5Cnimport seaborn as sns%5Cn%5Cnfrom sklearn.feature_extraction.text import TfidfVectorizer%5Cn%5Cnfrom yellowbrick.text import TSNEVisualizer%5Cnfrom yellowbrick.datasets import load_hobbies%5Cn%23 import tensorflow_addons as tfa%5Cnfrom sklearn.metrics import hamming_loss%5Cn%5Cnfrom skmultilearn.problem_transform import ClassifierChain%5Cnfrom sklearn.metrics import hamming_loss%2C accuracy_score%2C make_scorer..." isContainer="True" shape="26" isIPythonHidden="True" />
<var name="IterativeStratification" type="ABCMeta" qualifier="abc" value="%3Cclass %27skmultilearn.model_selection.iterative_stratification.IterativeStratification%27&gt;" isContainer="True" />
<var name="KEEP_MOST_COMMON_LABELS" type="int" qualifier="builtins" value="10" />
<var name="Lasso" type="ABCMeta" qualifier="abc" value="%3Cclass %27sklearn.linear_model._coordinate_descent.Lasso%27&gt;" isContainer="True" />
<var name="MultiLabelBinarizer" type="type" qualifier="builtins" value="%3Cclass %27sklearn.preprocessing._label.MultiLabelBinarizer%27&gt;" isContainer="True" />
<var name="MultinomialNB" type="ABCMeta" qualifier="abc" value="%3Cclass %27sklearn.naive_bayes.MultinomialNB%27&gt;" isContainer="True" />
<var name="Out" type="dict" qualifier="builtins" value="%7B5%3A %27/home/stefan/PycharmProjects/multi-label-classification-climate/notebooks%27%2C 7%3A    policy_id                       policy_title  %5C%0A0      10088     Circular economy promotion law   %0A1      10087                14th Five-Year Plan   %0A2      10046             National Forest Policy   %0A3      10044   Suriname National REDD%2B Strategy   %0A4      10042  Policy Development Plan 2017-2021   %0A%0A                                             sectors  %5C%0A0                  Industry%3BAgriculture%3BEconomy-wide   %0A1  Transportation%3BRural%3BLULUCF%3BEnergy%3BEconomy-wid...   %0A2                                             LULUCF   %0A3                                             LULUCF   %0A4                                       Economy-wide   %0A%0A                                    description_text  %0A0  This law promotes the development of a circula...  %0A1  The 14th Five Year Plan lays down the strategy...  %0A2  This document aims at protecting the country%27s...  %0A3  This document aims to protect Suriname%27s fores......" isContainer="True" shape="9" isIPythonHidden="True" />
<var name="Path" type="type" qualifier="builtins" value="%3Cclass %27pathlib.Path%27&gt;" isContainer="True" />
<var name="Pipeline" type="ABCMeta" qualifier="abc" value="%3Cclass %27sklearn.pipeline.Pipeline%27&gt;" isContainer="True" />
<var name="SEED" type="int" qualifier="builtins" value="42" />
<var name="TEST_SET_FRAC" type="float" qualifier="builtins" value="0.1" />
<var name="TRAIN_FRACTION" type="float" qualifier="builtins" value="0.9" />
<var name="TSNEVisualizer" type="type" qualifier="builtins" value="%3Cclass %27yellowbrick.text.tsne.TSNEVisualizer%27&gt;" isContainer="True" />
<var name="TextFeatureEngineering" type="type" qualifier="builtins" value="%3Cclass %27src.sklearn_utils.TextFeatureEngineering%27&gt;" isContainer="True" />
<var name="TfidfVectorizer" type="type" qualifier="builtins" value="%3Cclass %27sklearn.feature_extraction.text.TfidfVectorizer%27&gt;" isContainer="True" />
<var name="Tuple" type="_TupleType" qualifier="typing" value="typing.Tuple" isContainer="True" />
<var name="X" type="DataFrame" qualifier="pandas.core.frame" value="policy_id                                       policy_title  %5C %5B0         10088                     Circular economy promotion law   %5D %5B3         10044                   Suriname National REDD%2B Strategy   %5D %5B5         10049                               Energy Strategy 2050   %5D %5B6         10051                   Long-Term Climate Strategy%2C 2021   %5D %5B9         10054  Environmentally Sustainable Transport System P...   %5D %5B...         ...                                                ...   %5D %5B1955       8835  National Climate Change Strategy and Action Pl...   %5D %5B1956       9110                 National Policy for Climate Change   %5D %5B1957       9191  Presidential Decree 7/2019 establishing the na...   %5D %5B1958       8889  Act No. 28 of 1972 concerning nuclear energy a...   %5D %5B1959       8887  Natural Hazards Compensation Act %28No. 59 of 2014%29   %5D %5B%5D %5B                                       description_text  %5C%5D %5B0     This law promotes the development of a circula...   %5D %5B3     This document aims to protect Surin...%5D" isContainer="True" shape="(1680, 14)" />
<var name="X_test" type="DataFrame" qualifier="pandas.core.frame" value="description_text  %5C %5B1497  The Enemalta %28Transfer of Assets%2C Rights%2C Liab...   %5D %5B1517  The National Climate Change Policy%2C published ...   %5D %5B1244  This document sets the remuneration framework ...   %5D %5B249   This document sets the government%27s National T...   %5D %5B698   This document sets the government%27s energy pol...   %5D %5B...                                                 ...   %5D %5B1704  The goal of this regulation is to grant financ...   %5D %5B598   This law commits Ireland%27s national treasury t...   %5D %5B1533  The Democratic Republic of Congo%27s Disaster Re...   %5D %5B1903  The Small and Medium-sized Power Plant Act was...   %5D %5B240   The Strategic Investment Framework for Environ...   %5D %5B%5D %5B                                           policy_title  %5C%5D %5B1497  ACT No. XXXIV of 2014 and associated feed-in t...   %5D %5B1517            Myanmar National Climate Change Policy    %5D %5B1244  Royal Decree 960/2020 regulating the economic ...   %5D %5B249   National Transport Plan 2018-2029 %28Meld. St. 3......%5D" isContainer="True" shape="(249, 3)" />
<var name="X_train" type="DataFrame" qualifier="pandas.core.frame" value="description_text  %5C %5B946   This Act establishes the Energy Market Authori...   %5D %5B1077  This Act creates the Energy and Climate Fund. ...   %5D %5B753   This Strategy%2C developed in partnership with U...   %5D %5B917   Energy efficiency labelling requirements are s...   %5D %5B966   The law provided a legal framework to set up a...   %5D %5B...                                                 ...   %5D %5B220   South Africa%27s Sectoral Cold Spell Management ...   %5D %5B422   The Energy Efficiency Action Plan 2011%3F2020 le...   %5D %5B789   This law states that the State shall provide t...   %5D %5B1125  The Strategy aims to develop a sustainable ene...   %5D %5B404   The main objectives of Law 1391-V are to%3A %5Cn- ...   %5D %5B%5D %5B                                           policy_title  %5C%5D %5B946   Energy Market Authority of Singapore Act %28Chap...   %5D %5B1077                 Energy and Climate Fund Act %28EKFG%29   %5D %5B753   Decentralized Rural Electrification Strategy %28...   %5D %5B917   Energy Resources Regulations %28Energy labeling ......%5D" isContainer="True" shape="(503, 3)" />
<var name="_" type="Run" qualifier="wandb.sdk.wandb_run" value="%3Cwandb.sdk.wandb_run.Run object at 0x7fdea06a8400&gt;" isContainer="True" isIPythonHidden="True" />
<var name="_11" type="DataFrame" qualifier="pandas.core.frame" value="num_labels  cumulative_positive_labels  %5C %5BEnergy                                1143                        1143   %5D %5BTransportation                         761                        1904   %5D %5BLULUCF                                 398                        2302   %5D %5BEconomy-wide                           366                        2668   %5D %5BResidential and Commercial             351                        3019   %5D %5BAgriculture                            305                        3324   %5D %5BWater                                  297                        3621   %5D %5BIndustry                               238                        3859   %5D %5BWaste                                  177                        4036   %5D %5BHealth                                 158                        4194   %5D %5BEnvironment                            127                        4321   %5D %5BUrban                                   73                        4394   %5D %5BBuildings                             ...%5D" isContainer="True" shape="(23, 3)" isIPythonHidden="True" />
<var name="_12" type="Figure" qualifier="plotly.graph_objs._figure" value="Figure%28%7B%0A    %27data%27%3A %5B%7B%27alignmentgroup%27%3A %27True%27%2C%0A              %27hovertemplate%27%3A %27index=%25%7Bx%7D%3Cbr&gt;num_labels=%25%7By%7D%3Cextra&gt;%3C/extra&gt;%27%2C%0A              %27legendgroup%27%3A %27%27%2C%0A              %27marker%27%3A %7B%27color%27%3A %27%23636efa%27%2C %27pattern%27%3A %7B%27shape%27%3A %27%27%7D%7D%2C%0A              %27name%27%3A %27%27%2C%0A              %27offsetgroup%27%3A %27%27%2C%0A              %27orientation%27%3A %27v%27%2C%0A              %27showlegend%27%3A False%2C%0A              %27textposition%27%3A %27auto%27%2C%0A              %27type%27%3A %27bar%27%2C%0A              %27x%27%3A array%28%5B%27Energy%27%2C %27Transportation%27%2C %27LULUCF%27%2C %27Economy-wide%27%2C%0A                          %27Residential and Commercial%27%2C %27Agriculture%27%2C %27Water%27%2C %27Industry%27%2C%0A                          %27Waste%27%2C %27Health%27%2C %27Environment%27%2C %27Urban%27%2C %27Buildings%27%2C %27Tourism%27%2C%0A                          %27Social development%27%2C %27Disaster Risk Management %28Drm%29%27%2C %27Coastal zones%27%2C%0A                          %27Rural%27%2C %27Adaptation%27%2C %27Cross Cutting Area%27%2C %27Public Sector%27%2C %27Other%27%2C%0A                          %27Finance%27%5D%2C dtype=object%29%2C%0A              %27xaxis%27%3A %27x%27%2C%0A              %27y%27%3A array%28%5B1143..." isContainer="True" isIPythonHidden="True" />
<var name="_13" type="AxesSubplot" qualifier="matplotlib.axes._subplots" value="AxesSubplot%280.125%2C0.125%3B0.62x0.755%29" isContainer="True" isIPythonHidden="True" />
<var name="_14" type="Figure" qualifier="plotly.graph_objs._figure" value="Figure%28%7B%0A    %27data%27%3A %5B%7B%27alignmentgroup%27%3A %27True%27%2C%0A              %27bingroup%27%3A %27x%27%2C%0A              %27hovertemplate%27%3A %27variable=sectors_list%3Cbr&gt;value=%25%7Bx%7D%3Cbr&gt;count=%25%7By%7D%3Cextra&gt;%3C/extra&gt;%27%2C%0A              %27legendgroup%27%3A %27sectors_list%27%2C%0A              %27marker%27%3A %7B%27color%27%3A %27%23636efa%27%2C %27pattern%27%3A %7B%27shape%27%3A %27%27%7D%7D%2C%0A              %27name%27%3A %27sectors_list%27%2C%0A              %27offsetgroup%27%3A %27sectors_list%27%2C%0A              %27orientation%27%3A %27v%27%2C%0A              %27showlegend%27%3A True%2C%0A              %27type%27%3A %27histogram%27%2C%0A              %27x%27%3A array%28%5B3%2C 6%2C 1%2C ...%2C 5%2C 1%2C 1%5D%29%2C%0A              %27xaxis%27%3A %27x%27%2C%0A              %27yaxis%27%3A %27y%27%7D%5D%2C%0A    %27layout%27%3A %7B%27barmode%27%3A %27relative%27%2C%0A               %27legend%27%3A %7B%27title%27%3A %7B%27text%27%3A %27variable%27%7D%2C %27tracegroupgap%27%3A 0%7D%2C%0A               %27template%27%3A %27...%27%2C%0A               %27title%27%3A %7B%27text%27%3A %27num labels per instance%27%7D%2C%0A               %27xaxis%27%3A %7B%27anchor%27%3A %27y%27%2C %27domain%27%3A %5B0.0%2C 1.0%5D%2C %27title%27%3A %7B%27text%27%3A %27value%27%7D%7D%2C%0A               %27yaxis%27%3A %7B%27anchor%27%3A %27x%27%2C %27domain%27%3A %5B0.0%2C 1.0%5D%2C %27title%27%3A %7B%27text%27%3A %27count%27%7D%7D%7D%0A%7D%29" isContainer="True" isIPythonHidden="True" />
<var name="_15" type="Series" qualifier="pandas.core.series" value="%28%27Energy%27%2C 365%29 %28%27Economy-wide%27%2C 144%29 %28%27Transportation%3BEnergy%27%2C 117%29 %28%27Transportation%27%2C 112%29 %28%27Energy%3BResidential and Commercial%27%2C 63%29 %28%27LULUCF%27%2C 58%29 %28%27Transportation%3BEnergy%3BResidential and Commercial%27%2C 30%29 %28%27Agriculture%27%2C 26%29 %28%27Transportation%3BLULUCF%27%2C 24%29 %28%27Industry%3BEnergy%27%2C 24%29" isContainer="True" shape="(10,)" isIPythonHidden="True" />
<var name="_18" type="AxesSubplot" qualifier="matplotlib.axes._subplots" value="AxesSubplot%280.125%2C0.125%3B0.62x0.755%29" isContainer="True" isIPythonHidden="True" />
<var name="_24" type="Run" qualifier="wandb.sdk.wandb_run" value="%3Cwandb.sdk.wandb_run.Run object at 0x7fdea06a8400&gt;" isContainer="True" isIPythonHidden="True" />
<var name="_5" type="str" qualifier="builtins" value="/home/stefan/PycharmProjects/multi-label-classification-climate/notebooks" isIPythonHidden="True" />
<var name="_7" type="DataFrame" qualifier="pandas.core.frame" value="policy_id                       policy_title  %5C %5B0      10088     Circular economy promotion law   %5D %5B1      10087                14th Five-Year Plan   %5D %5B2      10046             National Forest Policy   %5D %5B3      10044   Suriname National REDD%2B Strategy   %5D %5B4      10042  Policy Development Plan 2017-2021   %5D %5B%5D %5B                                             sectors  %5C%5D %5B0                  Industry%3BAgriculture%3BEconomy-wide   %5D %5B1  Transportation%3BRural%3BLULUCF%3BEnergy%3BEconomy-wid...   %5D %5B2                                             LULUCF   %5D %5B3                                             LULUCF   %5D %5B4                                       Economy-wide   %5D %5B%5D %5B                                    description_text  %5D %5B0  This law promotes the development of a circula...  %5D %5B1  The 14th Five Year Plan lays down the strategy...  %5D %5B2  This document aims at protecting the country%27s...  %5D %5B3  This document aims to protect Suriname%27s fores...  %5D %5B4  This document lays out the country%27s developme...  %5D" isContainer="True" shape="(5, 4)" isIPythonHidden="True" />
<var name="__" type="AxesSubplot" qualifier="matplotlib.axes._subplots" value="AxesSubplot%280.125%2C0.125%3B0.62x0.755%29" isContainer="True" isIPythonHidden="True" />
<var name="___" type="Series" qualifier="pandas.core.series" value="%28%27Energy%27%2C 365%29 %28%27Economy-wide%27%2C 144%29 %28%27Transportation%3BEnergy%27%2C 117%29 %28%27Transportation%27%2C 112%29 %28%27Energy%3BResidential and Commercial%27%2C 63%29 %28%27LULUCF%27%2C 58%29 %28%27Transportation%3BEnergy%3BResidential and Commercial%27%2C 30%29 %28%27Agriculture%27%2C 26%29 %28%27Transportation%3BLULUCF%27%2C 24%29 %28%27Industry%3BEnergy%27%2C 24%29" isContainer="True" shape="(10,)" isIPythonHidden="True" />
<var name="__builtin__" type="module" qualifier="builtins" value="%3Cmodule %27builtins%27 %28built-in%29&gt;" isContainer="True" isIPythonHidden="True" />
<var name="__builtins__" type="module" qualifier="builtins" value="%3Cmodule %27builtins%27 %28built-in%29&gt;" isContainer="True" isIPythonHidden="True" />
<var name="__doc__" type="str" qualifier="builtins" value="Automatically created module for IPython interactive environment" isIPythonHidden="True" />
<var name="__loader__" type="NoneType" qualifier="builtins" value="None" isIPythonHidden="True" />
<var name="__name__" type="str" qualifier="builtins" value="__main__" isIPythonHidden="True" />
<var name="__package__" type="NoneType" qualifier="builtins" value="None" isIPythonHidden="True" />
<var name="__spec__" type="NoneType" qualifier="builtins" value="None" isIPythonHidden="True" />
<var name="_dh" type="list" qualifier="builtins" value="%5BPosixPath%28%27/home/stefan/PycharmProjects/multi-label-classification-climate/notebooks%27%29%5D" isContainer="True" shape="1" isIPythonHidden="True" />
<var name="_i" type="str" qualifier="builtins" value="import wandb%0Awandb.init%28project=%22climate-multi-label-classification%22%2C entity=%22stefl14%22%29" isIPythonHidden="True" />
<var name="_i1" type="str" qualifier="builtins" value="import sys%0A%0A%0A%0A%25load_ext autoreload%0A%25autoreload 2" isIPythonHidden="True" />
<var name="_i10" type="str" qualifier="builtins" value="%23 Let%27s analyse the labels.%0Alabels_flattened=df%5B%27sectors_list%27%5D.explode%28%29%0Aunique_labels=labels_flattened.unique%28%29%0An_unique_labels=len%28unique_labels%29%0Aprint%28f%22There are %7Bn_unique_labels%7D classes with possible labels%3A %5Cn %7Bunique_labels%7D%22%29" isIPythonHidden="True" />
<var name="_i11" type="str" qualifier="builtins" value="%23 What are the cumulative totals for each label%3F%0Anum_instances_each_label=labels_flattened.value_counts%28%29%0Atotal_positive_labels=num_instances_each_label.sum%28%29%0Acumulative_sum=num_instances_each_label.cumsum%28%29%0Afraction_dataset_covered=cumulative_sum/total_positive_labels%0Adf_labels=pd.DataFrame%28%7B%27num_labels%27%3A num_instances_each_label%2C%0A                        %27cumulative_positive_labels%27%3A cumulative_sum%2C %0A                        %27cumulative_fraction_dataset_covered%27%3A fraction_dataset_covered%7D%29%0Adf_labels" isIPythonHidden="True" />
<var name="_i12" type="str" qualifier="builtins" value="px.bar%28df_labels%2C x=df_labels.index%2C y=%27num_labels%27%2C title=%27label distribution%27%29" isIPythonHidden="True" />
<var name="_i13" type="str" qualifier="builtins" value="%23 12 most under represented labels.%0Aunderrepresented_labels=df_labels%5B11%3A%5D.index%0A%0Amlb=MultiLabelBinarizer%28%29%0Ay = mlb.fit_transform%28df%5B%27sectors_list%27%5D%29%0A%23 Now let%27s look at the correlations between labels.%0Asns.heatmap%28pd.DataFrame%28y%2C columns=mlb.classes_%29.corr%28%29.loc%5Bunderrepresented_labels%5D%29" isIPythonHidden="True" />
<var name="_i14" type="str" qualifier="builtins" value="px.histogram%28df%5B%27sectors_list%27%5D.apply%28len%29%2C title=%27num labels per instance%27%29" isIPythonHidden="True" />
<var name="_i15" type="str" qualifier="builtins" value="%23 Let%27s also check if there are any labels with an especially high number of classes such that we could change this to a multi-class problem%0A%23 instead of a multi-label problem.%0Adf%5B%27sectors%27%5D.value_counts%28%29.head%2810%29" isIPythonHidden="True" />
<var name="_i16" type="str" qualifier="builtins" value="common_labels=df_labels.index%5B0%3AKEEP_MOST_COMMON_LABELS%5D%0A%0A%23 Only keep sectors in top n labels%0Adf%5B%27sectors_list%27%5D = df%5B%27sectors_list%27%5D.apply%28lambda x%3A %5Btag for tag in x if tag in common_labels%5D%29%0Adf_filtered = df.copy%28%29%5Bdf%5B%27sectors_list%27%5D.str.len%28%29&gt;0%5D%0Adf_filtered.drop%28columns=%27sectors%27%2Cinplace=True%29" isIPythonHidden="True" />
<var name="_i17" type="str" qualifier="builtins" value="y = mlb.fit_transform%28df_filtered%5B%27sectors_list%27%5D%29%0A%0A%23 Split%0Adf_eda%2C df_test%2C y_eda%2C y_test = iter_train_test_split%28%0A    df_filtered%2C y%2C train_size=1-TEST_SET_FRAC%29%0A%0A%0Ay_eda_df = pd.DataFrame%28y_eda%2C columns = mlb.classes_%29" isIPythonHidden="True" />
<var name="_i18" type="str" qualifier="builtins" value="%23 Now let%27s look at the correlations between labels.%0Asns.heatmap%28y_eda_df.corr%28%29%29" isIPythonHidden="True" />
<var name="_i19" type="str" qualifier="builtins" value="%23 Let%27s do a quick analysis of a bunch of statistics from the text columns. %0A%0Adf_eda=df_eda.copy%28%29 %23 Suppress warnings%0Adf_eda%5B%27full_text%27%5D= df_eda%5B%27policy_title%27%5D%2B%27%3A %27%2Bdf_eda%5B%27description_text%27%5D %23 Concat text columns%0A%0Atext_cols=%5B%27description_text%27%2C %27policy_title%27%2C %27full_text%27%5D%0Atext_cols_n_words = %5Bf%27%7Bx%7D_nwords%27 for x in text_cols%5D%0Afor col in text_cols%3A%0A    df_eda%5Bf%27%7Bcol%7D_nwords%27%5D=df_eda%5Bcol%5D.str.split%28%29.str.len%28%29%0A    %0Adef subplot_helper%28cols%3A list%29 -&gt; None%3A%0A    fig=make_subplots%283%2C1%2C subplot_titles=cols%29%0A    for i%2C col in enumerate%28cols%29%3A%0A        trace=go.Histogram%28x=df_eda%5Bcol%5D%29%0A        fig.append_trace%28trace%2C i%2B1%2C1%29%0A    %0A    fig.update_layout%28height=700%2C width=800%29%0A    fig.show%28%29%0A%0Asubplot_helper%28text_cols_n_words%29" isIPythonHidden="True" />
<var name="_i2" type="str" qualifier="builtins" value="from src.sklearn_utils import iter_train_test_split%2C simple_feature_engineering%0Afrom sklearn.ensemble import GradientBoostingClassifier" isIPythonHidden="True" />
<var name="_i20" type="str" qualifier="builtins" value="tokenizer = AutoTokenizer.from_pretrained%28%27distilbert-base-cased%27%29%0Afor col in text_cols%3A%0A    df_eda%5Bf%27%7Bcol%7D_tokens%27%5D=df_eda%5Bcol%5D.apply%28lambda x%3A tokenizer.tokenize%28x%29%29%0A    df_eda%5Bf%27%7Bcol%7D_ntokens%27%5D=df_eda%5Bf%27%7Bcol%7D_tokens%27%5D.str.len%28%29%0A%0Atext_cols_n_tokens = %5Bf%27%7Bx%7D_ntokens%27 for x in text_cols%5D%0Asubplot_helper%28text_cols_n_tokens%29" isIPythonHidden="True" />
<var name="_i21" type="str" qualifier="builtins" value="%23 Let%27s see what happens if we subset the dataset so that it only contains rows with a single label%0A%23 and visualise the separation between classes to get%0Adf_single_label=df_eda%5Bdf_eda%5B%27sectors_list%27%5D.apply%28len%29==1%5D%0AX%2C y = df_single_label%5B%5B%27description_text%27%2C%27policy_title%27%2C%27full_text%27%5D%5D%2C df_single_label%5B%27sectors_list%27%5D.apply%28lambda x%3A x%5B0%5D%29%0AX_train%2C X_test%2C y_train%2C y_test = train_test_split%28%0A     X%2C y%2C test_size=0.33%2C random_state=SEED%29%0A%0Adef tsne_plot%28X_train%2C X_test%2C y_train%2C y_test%2C col%3A str%29%3A%0A    %22%22%22%0A    Helper to plot tsne visualisations on train and test set for a tfidf transformed column.%0A    %22%22%22%0A    tfidf = TfidfVectorizer%28%29%0A    tfidf.fit_transform%28X_train%5Bcol%5D%29%0A    train_features = tfidf.transform%28X_train%5Bcol%5D%29%0A    test_features = tfidf.transform%28X_test%5Bcol%5D%29%0A    tsne_train = TSNEVisualizer%28decompose_by=24%2C title=f%27Train set%3A %7Bcol%7D%27%29%0A    tsne_train.fit%28train_features%2C y_train%29%0A    tsne_train.show%28%29%0A    tsne_test = TSNEVisualizer%28decompose_by=24%2C title=f%27Test set%3A %7Bcol%7D%27%29%0A    ts..." isIPythonHidden="True" />
<var name="_i22" type="str" qualifier="builtins" value="from src.sklearn_utils import TextFeatureEngineering%2C select_col%2C construct_pipeline" isIPythonHidden="True" />
<var name="_i23" type="str" qualifier="builtins" value="X%2C y = df_eda%2C mlb.fit_transform%28df_eda%5B%27sectors_list%27%5D%29" isIPythonHidden="True" />
<var name="_i24" type="str" qualifier="builtins" value="import wandb%0Awandb.init%28project=%22climate-multi-label-classification%22%2C entity=%22stefl14%22%29" isIPythonHidden="True" />
<var name="_i25" type="str" qualifier="builtins" value="def select_col%28df%2C col=%27full_text%27%29%3A %23 lambda%27s not picklable%2C hence this one liner.%0A    return df%5Bcol%5D%0A%0Afull_pipe_rf=construct_pipeline%28%29%0Afull_pipe_gb=construct_pipeline%28clf=GradientBoostingClassifier%28%29%29%0A%0A%23 cv_score=cross_val_score%28full_pipe_rf%2C X%2C y%2C scoring=make_scorer%28hamming_loss%29%2C cv=5%2C error_score=%27raise%27%29%0A%23%0A%23 %23 fit full_pipe and log the results.%0A%23 full_pipe_rf.fit%28X%2C y%29%0A%23 wandb.log%28%7B%27cv_score%27%3A cv_score.mean%28%29%2C %27cv_std%27%3A cv_score.std%28%29%7D%29" isIPythonHidden="True" />
<var name="_i3" type="str" qualifier="builtins" value="import pandas as pd%0Aimport numpy as np%0Aimport os%0Aimport plotly.express as px%0Afrom skmultilearn.model_selection import IterativeStratification%0Afrom sklearn.model_selection import train_test_split%0Afrom sklearn.preprocessing import MultiLabelBinarizer%0Afrom sklearn.dummy import DummyClassifier%0Afrom sklearn.metrics import hamming_loss%0Aimport seaborn as sns%0A%0Afrom sklearn.feature_extraction.text import TfidfVectorizer%0A%0Afrom yellowbrick.text import TSNEVisualizer%0Afrom yellowbrick.datasets import load_hobbies%0A%23 import tensorflow_addons as tfa%0Afrom sklearn.metrics import hamming_loss%0A%0Afrom skmultilearn.problem_transform import ClassifierChain%0Afrom sklearn.metrics import hamming_loss%2C accuracy_score%2C make_scorer%0Afrom sklearn.feature_extraction.text import CountVectorizer%2C TfidfVectorizer%0Afrom sklearn.naive_bayes import MultinomialNB%0Afrom sklearn.pipeline import Pipeline%0Afrom sklearn.linear_model import Lasso%0Afrom sklearn.model_selection import cross_val_score%0Afrom datetime import time%0A%0Afrom trans..." isIPythonHidden="True" />
<var name="_i4" type="str" qualifier="builtins" value="def create_tokenized_ds%28%0A    X%2C y%2C text_column=%22description_text%22%2C model_name=%22bert-base-cased%22%2C batch_size=16%0A%29%3A%0A    y = np.array%28y%2C dtype=%22int32%22%29%0A    X = X%5Btext_column%5D%0A    tokens = tokenizer%28%0A        list%28X%29%2C%0A        padding=%22max_length%22%2C%0A        truncation=True%2C%0A        return_tensors=%22tf%22%2C%0A        return_token_type_ids=False%2C%0A    %29%0A    tokens_w_labels = tokens.copy%28%29%0A    tokens_w_labels%5B%22target%22%5D = y%0A    tf_dataset = tf.data.Dataset.from_tensor_slices%28%28dict%28tokens_w_labels%29%2C y%29%29%0A    tf_dataset = tf_dataset.shuffle%28len%28tf_dataset%29%29.batch%28batch_size%29%0A    return tf_dataset%0A%0A%0Aimport keras%0A%0AK = keras.backend%0A%0A%0Aclass ExponentialLearningRate%28keras.callbacks.Callback%29%3A%0A    def __init__%28self%2C factor%29%3A%0A        self.factor = factor%0A        self.rates = %5B%5D%0A        self.losses = %5B%5D%0A%0A    def on_batch_end%28self%2C batch%2C logs%29%3A%0A        self.rates.append%28K.get_value%28self.model.optimizer.learning_rate%29%29%0A        self.losses.append%28logs%5B%22loss%22%5D%29%0A        K.set_value%28%0A            self.model.optimizer.le..." isIPythonHidden="True" />
<var name="_i5" type="str" qualifier="builtins" value="os.getcwd%28%29" isIPythonHidden="True" />
<var name="_i6" type="str" qualifier="builtins" value="%23 Constants%0ASEED=42%0AHOLD_OUT_PERCENTAGE=10%0AITERATIVE_STRAT_ORDER=1%0AKEEP_MOST_COMMON_LABELS=10%0ABATCH_SIZE=16%0ATRAIN_FRACTION=0.9%0AHUGGINGFACE_CONFIG=%27distilbert-base-cased%27%0ATEST_SET_FRAC=.1" isIPythonHidden="True" />
<var name="_i7" type="str" qualifier="builtins" value="data_path = Path%28os.path.abspath%28%27%27%29%29.parent / %27data%27 / %27recruitment-task_1-full.csv%27%0A%0Adf=pd.read_csv%28%27/home/stefan/PycharmProjects/multi-label-classification-climate/data/recruitment-task_1-full.csv%27%29%0Adf.head%28%29" isIPythonHidden="True" />
<var name="_i8" type="str" qualifier="builtins" value="df.info%28%29" isIPythonHidden="True" />
<var name="_i9" type="str" qualifier="builtins" value="%23 Parse labels into a list.%0Adf%5B%27sectors_list%27%5D=df%5B%27sectors%27%5D.str.split%28%22%3B%22%29%0Adf=df%5B~df.description_text.duplicated%28%29%5D %23 Found a duplicated entry" isIPythonHidden="True" />
<var name="_ih" type="list" qualifier="builtins" value="%5B%27%27%2C %22import sys%5Cn%5Cn%5Cn%5Cnget_ipython%28%29.run_line_magic%28%27load_ext%27%2C %27autoreload%27%29%5Cnget_ipython%28%29.run_line_magic%28%27autoreload%27%2C %272%27%29%22%2C %27from src.sklearn_utils import iter_train_test_split%2C simple_feature_engineering%5Cnfrom sklearn.ensemble import GradientBoostingClassifier%27%2C %27import pandas as pd%5Cnimport numpy as np%5Cnimport os%5Cnimport plotly.express as px%5Cnfrom skmultilearn.model_selection import IterativeStratification%5Cnfrom sklearn.model_selection import train_test_split%5Cnfrom sklearn.preprocessing import MultiLabelBinarizer%5Cnfrom sklearn.dummy import DummyClassifier%5Cnfrom sklearn.metrics import hamming_loss%5Cnimport seaborn as sns%5Cn%5Cnfrom sklearn.feature_extraction.text import TfidfVectorizer%5Cn%5Cnfrom yellowbrick.text import TSNEVisualizer%5Cnfrom yellowbrick.datasets import load_hobbies%5Cn%23 import tensorflow_addons as tfa%5Cnfrom sklearn.metrics import hamming_loss%5Cn%5Cnfrom skmultilearn.problem_transform import ClassifierChain%5Cnfrom sklearn.metrics import hamming_loss%2C accuracy_score%2C make_scorer..." isContainer="True" shape="26" isIPythonHidden="True" />
<var name="_ii" type="str" qualifier="builtins" value="X%2C y = df_eda%2C mlb.fit_transform%28df_eda%5B%27sectors_list%27%5D%29" isIPythonHidden="True" />
<var name="_iii" type="str" qualifier="builtins" value="from src.sklearn_utils import TextFeatureEngineering%2C select_col%2C construct_pipeline" isIPythonHidden="True" />
<var name="_oh" type="dict" qualifier="builtins" value="%7B5%3A %27/home/stefan/PycharmProjects/multi-label-classification-climate/notebooks%27%2C 7%3A    policy_id                       policy_title  %5C%0A0      10088     Circular economy promotion law   %0A1      10087                14th Five-Year Plan   %0A2      10046             National Forest Policy   %0A3      10044   Suriname National REDD%2B Strategy   %0A4      10042  Policy Development Plan 2017-2021   %0A%0A                                             sectors  %5C%0A0                  Industry%3BAgriculture%3BEconomy-wide   %0A1  Transportation%3BRural%3BLULUCF%3BEnergy%3BEconomy-wid...   %0A2                                             LULUCF   %0A3                                             LULUCF   %0A4                                       Economy-wide   %0A%0A                                    description_text  %0A0  This law promotes the development of a circula...  %0A1  The 14th Five Year Plan lays down the strategy...  %0A2  This document aims at protecting the country%27s...  %0A3  This document aims to protect Suriname%27s fores......" isContainer="True" shape="9" isIPythonHidden="True" />
<var name="_pydevd_bundle" type="module" qualifier="builtins" value="%3Cmodule %27_pydevd_bundle%27 from %27/snap/pycharm-professional/290/plugins/python/helpers/pydev/_pydevd_bundle/__init__.py%27&gt;" isContainer="True" />
<var name="accuracy_score" type="function" qualifier="builtins" value="%3Cfunction accuracy_score at 0x7fdf48fbb8b0&gt;" isContainer="True" />
<var name="col" type="str" qualifier="builtins" value="full_text" />
<var name="common_labels" type="Index" qualifier="pandas.core.indexes.base" value="Index%28%5B%27Energy%27%2C %27Transportation%27%2C %27LULUCF%27%2C %27Economy-wide%27%2C%0A       %27Residential and Commercial%27%2C %27Agriculture%27%2C %27Water%27%2C %27Industry%27%2C%0A       %27Waste%27%2C %27Health%27%5D%2C%0A      dtype=%27object%27%29" isContainer="True" shape="(10,)" />
<var name="construct_pipeline" type="function" qualifier="builtins" value="%3Cfunction construct_pipeline at 0x7fdf1be14a60&gt;" isContainer="True" />
<var name="create_tokenized_ds" type="function" qualifier="builtins" value="%3Cfunction create_tokenized_ds at 0x7fdf196f1790&gt;" isContainer="True" />
<var name="cross_val_score" type="function" qualifier="builtins" value="%3Cfunction cross_val_score at 0x7fdf48eb9b80&gt;" isContainer="True" />
<var name="cumulative_sum" type="Series" qualifier="pandas.core.series" value="%28%27Energy%27%2C 1143%29 %28%27Transportation%27%2C 1904%29 %28%27LULUCF%27%2C 2302%29 %28%27Economy-wide%27%2C 2668%29 %28%27Residential and Commercial%27%2C 3019%29 %28%27Agriculture%27%2C 3324%29 %28%27Water%27%2C 3621%29 %28%27Industry%27%2C 3859%29 %28%27Waste%27%2C 4036%29 %28%27Health%27%2C 4194%29 %28%27Environment%27%2C 4321%29 %28%27Urban%27%2C 4394%29 %28%27Buildings%27%2C 4459%29 %28%27Tourism%27%2C 4511%29 %28%27Social development%27%2C 4556%29 %28%27Disaster Risk Management %28Drm%29%27%2C 4589%29 %28%27Coastal zones%27%2C 4617%29 %28%27Rural%27%2C 4636%29 %28%27Adaptation%27%2C 4647%29 %28%27Cross Cutting Area%27%2C 4656%29 %28%27Public Sector%27%2C 4664%29 %28%27Other%27%2C 4670%29 %28%27Finance%27%2C 4675%29" isContainer="True" shape="(23,)" />
<var name="data_path" type="PosixPath" qualifier="pathlib" value="/home/stefan/PycharmProjects/multi-label-classification-climate/data/recruitment-task_1-full.csv" isContainer="True" />
<var name="df" type="DataFrame" qualifier="pandas.core.frame" value="policy_id                                       policy_title  %5C %5B0         10088                     Circular economy promotion law   %5D %5B1         10087                                14th Five-Year Plan   %5D %5B2         10046                             National Forest Policy   %5D %5B3         10044                   Suriname National REDD%2B Strategy   %5D %5B4         10042                  Policy Development Plan 2017-2021   %5D %5B...         ...                                                ...   %5D %5B1955       8835  National Climate Change Strategy and Action Pl...   %5D %5B1956       9110                 National Policy for Climate Change   %5D %5B1957       9191  Presidential Decree 7/2019 establishing the na...   %5D %5B1958       8889  Act No. 28 of 1972 concerning nuclear energy a...   %5D %5B1959       8887  Natural Hazards Compensation Act %28No. 59 of 2014%29   %5D %5B%5D %5B                                                sectors  %5C%5D %5B0                     Industry%3BAgriculture%3BEconomy-wide   %5D %5B1     Transportation%3BRural%3BLULUCF%3BEnergy%3B...%5D" isContainer="True" shape="(1959, 5)" />
<var name="df_eda" type="DataFrame" qualifier="pandas.core.frame" value="policy_id                                       policy_title  %5C %5B0         10088                     Circular economy promotion law   %5D %5B3         10044                   Suriname National REDD%2B Strategy   %5D %5B5         10049                               Energy Strategy 2050   %5D %5B6         10051                   Long-Term Climate Strategy%2C 2021   %5D %5B9         10054  Environmentally Sustainable Transport System P...   %5D %5B...         ...                                                ...   %5D %5B1955       8835  National Climate Change Strategy and Action Pl...   %5D %5B1956       9110                 National Policy for Climate Change   %5D %5B1957       9191  Presidential Decree 7/2019 establishing the na...   %5D %5B1958       8889  Act No. 28 of 1972 concerning nuclear energy a...   %5D %5B1959       8887  Natural Hazards Compensation Act %28No. 59 of 2014%29   %5D %5B%5D %5B                                       description_text  %5C%5D %5B0     This law promotes the development of a circula...   %5D %5B3     This document aims to protect Surin...%5D" isContainer="True" shape="(1680, 14)" />
<var name="df_filtered" type="DataFrame" qualifier="pandas.core.frame" value="policy_id                                       policy_title  %5C %5B0         10088                     Circular economy promotion law   %5D %5B1         10087                                14th Five-Year Plan   %5D %5B2         10046                             National Forest Policy   %5D %5B3         10044                   Suriname National REDD%2B Strategy   %5D %5B4         10042                  Policy Development Plan 2017-2021   %5D %5B...         ...                                                ...   %5D %5B1955       8835  National Climate Change Strategy and Action Pl...   %5D %5B1956       9110                 National Policy for Climate Change   %5D %5B1957       9191  Presidential Decree 7/2019 establishing the na...   %5D %5B1958       8889  Act No. 28 of 1972 concerning nuclear energy a...   %5D %5B1959       8887  Natural Hazards Compensation Act %28No. 59 of 2014%29   %5D %5B%5D %5B                                       description_text  %5C%5D %5B0     This law promotes the development of a circula...   %5D %5B1     The 14th Five Year Plan lays down t...%5D" isContainer="True" shape="(1879, 4)" />
<var name="df_labels" type="DataFrame" qualifier="pandas.core.frame" value="num_labels  cumulative_positive_labels  %5C %5BEnergy                                1143                        1143   %5D %5BTransportation                         761                        1904   %5D %5BLULUCF                                 398                        2302   %5D %5BEconomy-wide                           366                        2668   %5D %5BResidential and Commercial             351                        3019   %5D %5BAgriculture                            305                        3324   %5D %5BWater                                  297                        3621   %5D %5BIndustry                               238                        3859   %5D %5BWaste                                  177                        4036   %5D %5BHealth                                 158                        4194   %5D %5BEnvironment                            127                        4321   %5D %5BUrban                                   73                        4394   %5D %5BBuildings                             ...%5D" isContainer="True" shape="(23, 3)" />
<var name="df_single_label" type="DataFrame" qualifier="pandas.core.frame" value="policy_id                                       policy_title  %5C %5B3         10044                   Suriname National REDD%2B Strategy   %5D %5B5         10049                               Energy Strategy 2050   %5D %5B6         10051                   Long-Term Climate Strategy%2C 2021   %5D %5B9         10054  Environmentally Sustainable Transport System P...   %5D %5B10        10061  Uganda Green Growth Development Strategy 2017/...   %5D %5B...         ...                                                ...   %5D %5B1950       8704  National Strategy for Adaptation to Climate Ch...   %5D %5B1953       8766  Priority Framework for Action%3A Climate Change ...   %5D %5B1956       9110                 National Policy for Climate Change   %5D %5B1958       8889  Act No. 28 of 1972 concerning nuclear energy a...   %5D %5B1959       8887  Natural Hazards Compensation Act %28No. 59 of 2014%29   %5D %5B%5D %5B                                       description_text      sectors_list  %5C%5D %5B3     This document aims to protect Suriname%27s fores...          %5BLULUCF%5D   %5D %5B5    ...%5D" isContainer="True" shape="(752, 14)" />
<var name="df_test" type="DataFrame" qualifier="pandas.core.frame" value="policy_id                                       policy_title  %5C %5B1        10087                                14th Five-Year Plan   %5D %5B2        10046                             National Forest Policy   %5D %5B4        10042                  Policy Development Plan 2017-2021   %5D %5B7        10052                 Switzerland%E2%80%99s climate policy%2C 2018   %5D %5B8        10053       Smart Grid Development Master Plan 2015-2036   %5D %5B..         ...                                                ...   %5D %5B549       9133                     Law No. 293-Z on energy saving   %5D %5B552       9045                  Law No. 1136-XIV on energy saving   %5D %5B588       8784  Industrial Sector Plan for mitigation and Adap...   %5D %5B616       8687                              Pollution Control Act   %5D %5B760       4313          Second National Environmental Action Plan   %5D %5B%5D %5B                                      description_text  %5C%5D %5B1    The 14th Five Year Plan lays down the strategy...   %5D %5B2    This document aims at protecting the country%27s... ...%5D" isContainer="True" shape="(199, 4)" />
<var name="exit" type="ZMQExitAutocall" qualifier="IPython.core.autocall" value="%3CIPython.core.autocall.ZMQExitAutocall object at 0x7fdf59b7a1c0&gt;" isContainer="True" isIPythonHidden="True" />
<var name="fraction_dataset_covered" type="Series" qualifier="pandas.core.series" value="%28%27Energy%27%2C 0.24449197860962568%29 %28%27Transportation%27%2C 0.4072727272727273%29 %28%27LULUCF%27%2C 0.4924064171122995%29 %28%27Economy-wide%27%2C 0.5706951871657754%29 %28%27Residential and Commercial%27%2C 0.6457754010695187%29 %28%27Agriculture%27%2C 0.7110160427807487%29 %28%27Water%27%2C 0.7745454545454545%29 %28%27Industry%27%2C 0.8254545454545454%29 %28%27Waste%27%2C 0.8633155080213903%29 %28%27Health%27%2C 0.8971122994652406%29 %28%27Environment%27%2C 0.9242780748663102%29 %28%27Urban%27%2C 0.9398930481283423%29 %28%27Buildings%27%2C 0.9537967914438503%29 %28%27Tourism%27%2C 0.9649197860962567%29 %28%27Social development%27%2C 0.9745454545454545%29 %28%27Disaster Risk Management %28Drm%29%27%2C 0.9816042780748663%29 %28%27Coastal zones%27%2C 0.9875935828877005%29 %28%27Rural%27%2C 0.9916577540106952%29 %28%27Adaptation%27%2C 0.9940106951871658%29 %28%27Cross Cutting Area%27%2C 0.9959358288770054%29 %28%27Public Sector%27%2C 0.9976470588235294%29 %28%27Other%27%2C 0.9989304812834224%29 %28%27Finance%27%2C 1.0%29" isContainer="True" shape="(23,)" />
<var name="full_pipe_gb" type="Pipeline" qualifier="sklearn.pipeline" value="Pipeline%28steps=%5B%28%27features%27%2C%0A                 FeatureUnion%28transformer_list=%5B%28%27pipeline_text%27%2C%0A                                                 Pipeline%28steps=%5B%28%27select_text_col%27%2C%0A                                                                  FunctionTransformer%28func=%3Cfunction select_col at 0x7fdf1be14310&gt;%29%29%2C%0A                                                                 %28%27tfidf%27%2C%0A                                                                  TfidfVectorizer%28lowercase=False%2C%0A                                                                                  max_df=0.5%2C%0A                                                                                  stop_words=%27english%27%29%29%5D%29%29%2C%0A                                                %28%27feature_engineering%27%2C%0A                                                 TextFeatureEngineering%28%29%29%5D%29%29%2C%0A                %28%27clf%27%2C%0A                 ClassifierChain%28classifier=GradientBoostingClassifier%28%29%2C%0A                                 require_dense=%5BTrue%2C True%5D%29..." isContainer="True" shape="2" />
<var name="full_pipe_rf" type="Pipeline" qualifier="sklearn.pipeline" value="Pipeline%28steps=%5B%28%27features%27%2C%0A                 FeatureUnion%28transformer_list=%5B%28%27pipeline_text%27%2C%0A                                                 Pipeline%28steps=%5B%28%27select_text_col%27%2C%0A                                                                  FunctionTransformer%28func=%3Cfunction select_col at 0x7fdf1be14310&gt;%29%29%2C%0A                                                                 %28%27tfidf%27%2C%0A                                                                  TfidfVectorizer%28lowercase=False%2C%0A                                                                                  max_df=0.5%2C%0A                                                                                  stop_words=%27english%27%29%29%5D%29%29%2C%0A                                                %28%27feature_engineering%27%2C%0A                                                 TextFeatureEngineering%28%29%29%5D%29%29%2C%0A                %28%27clf%27%2C%0A                 ClassifierChain%28classifier=RandomForestClassifier%28%29%2C%0A                                 require_dense=%5BTrue%2C True%5D%29%29%5D%29" isContainer="True" shape="2" />
<var name="get_ipython" type="method" qualifier="builtins" value="%3Cbound method InteractiveShell.get_ipython of %3Cipykernel.zmqshell.ZMQInteractiveShell object at 0x7fdf59b5e520&gt;&gt;" isContainer="True" isIPythonHidden="True" />
<var name="go" type="module" qualifier="builtins" value="%3Cmodule %27plotly.graph_objects%27 from %27/home/stefan/anaconda3/envs/multi-label-classification-climate/lib/python3.9/site-packages/plotly/graph_objects/__init__.py%27&gt;" isContainer="True" />
<var name="hamming_loss" type="function" qualifier="builtins" value="%3Cfunction hamming_loss at 0x7fdf48fc2280&gt;" isContainer="True" />
<var name="iter_train_test_split" type="function" qualifier="builtins" value="%3Cfunction iter_train_test_split at 0x7fdf1cce23a0&gt;" isContainer="True" />
<var name="joblib" type="module" qualifier="builtins" value="%3Cmodule %27joblib%27 from %27/home/stefan/anaconda3/envs/multi-label-classification-climate/lib/python3.9/site-packages/joblib/__init__.py%27&gt;" isContainer="True" />
<var name="labels_flattened" type="Series" qualifier="pandas.core.series" value="%280%2C %27Industry%27%29 %280%2C %27Agriculture%27%29 %280%2C %27Economy-wide%27%29 %281%2C %27Transportation%27%29 %281%2C %27Rural%27%29 %281%2C %27LULUCF%27%29 %281%2C %27Energy%27%29 %281%2C %27Economy-wide%27%29 %281%2C %27Agriculture%27%29 %282%2C %27LULUCF%27%29 %283%2C %27LULUCF%27%29 %284%2C %27Economy-wide%27%29 %285%2C %27Energy%27%29 %286%2C %27Economy-wide%27%29 %287%2C %27Economy-wide%27%29 %288%2C %27Energy%27%29 %289%2C %27Transportation%27%29 %2810%2C %27Economy-wide%27%29 %2811%2C %27Economy-wide%27%29 %2812%2C %27Economy-wide%27%29 %2813%2C %27Economy-wide%27%29 %2814%2C %27Economy-wide%27%29 %2815%2C %27Economy-wide%27%29 %2816%2C %27Social development%27%29 %2816%2C %27LULUCF%27%29 %2816%2C %27Economy-wide%27%29 %2817%2C %27Industry%27%29 %2818%2C %27Economy-wide%27%29 %2819%2C %27Agriculture%27%29 %2821%2C %27Energy%27%29 %2821%2C %27Economy-wide%27%29 %2821%2C %27Adaptation%27%29 %2822%2C %27Health%27%29 %2823%2C %27Economy-wide%27%29 %2824%2C %27Economy-wide%27%29 %2825%2C %27Transportation%27%29 %2826%2C %27LULUCF%27%29 %2827%2C %27Economy-wide%27%29 %2828%2C %27Adaptation%27%29 %2829%2C %27Buildings%27%29 %2830%2C %27Tourism%27%29 %2831%2C %27Environment%27%29 %2831%2C %27Energy%27%29 %2831%2C %27Economy-wide%27%29 %2832%2C %27Economy-wide%27%29 %2833%2C %27Transportation%27%29 %2834%2C %27Energy%27%29 %2834%2C %27Economy-wide%27%29 %2835%2C %27Economy-wide%27%29 %2835%2C %27Coastal zones%27%29 %2835%2C %27Adaptation%27%29 %2836%2C %27LULUCF%27%29 %2836%2C %27Energy%27%29 %2836%2C %27Economy-wide%27%29 %2837%2C %27LULUCF%27%29 %2838%2C %27Environment%27%29 %2839%2C %27LULUCF%27%29 %2839%2C %27Energy%27%29 %2840%2C %27Industry%27%29 %2840%2C %27Health%27%29 %2840%2C %27Economy-wide%27%29 %2840%2C %27Coastal zones%27%29 %2840%2C %27Buildings%27%29 %2841%2C %27Urban%27%29 %2841%2C %27Energy%27%29 %2842%2C %27Water%27%29 %2842%2C %27Cross Cutting Area%27%29 %2843%2C %27Economy-wide%27%29 %2844%2C %27Transportation%27%29 %2844%2C %27Public Sector%27%29 %2844%2C %27Buildings%27%29 %2845%2C %27Energy%27%29 %2846%2C %27Urban%27%29 %2846%2C %27LULUCF%27%29 %2846%2C %27Agriculture%27%29 %2847%2C %27Environment%27%29 %2848%2C %27LULUCF%27%29 %2849%2C %27Energy%27%29 %2849%2C %27Economy-wide%27%29 %2850%2C %27Residential and Commercial%27%29 %2850%2C %27Buildings%27%29 %2851%2C %27LULUCF%27%29 %2852%2C %27Economy-wide%27%29 %2853%2C %27Economy-wide%27%29 %2854%2C %27Economy-wide%27%29 %2855%2C %27Energy%27%29 %2856%2C %27Energy%27%29 %2857%2C %27Economy-wide%27%29 %2858%2C %27Economy-wide%27%29 %2859%2C %27Economy-wide%27%29 %2860%2C %27Economy-wide%27%29 %2861%2C %27Economy-wide%27%29 %2862%2C %27Transportation%27%29 %2863%2C %27Economy-wide%27%29 %2864%2C %27Economy-wide%27%29 %2865%2C %27Energy%27%29 %2866%2C %27Energy%27%29 %2867%2C %27Economy-wide%27%29 %2868%2C %27Transportation%27%29 %2869%2C %27Economy-wide%27%29" isContainer="True" shape="(4675,)" />
<var name="load_hobbies" type="function" qualifier="builtins" value="%3Cfunction load_hobbies at 0x7fdf1b790700&gt;" isContainer="True" />
<var name="logger" type="RootLogger" qualifier="logging" value="%3CRootLogger root %28CRITICAL%29&gt;" isContainer="True" />
<var name="logging" type="module" qualifier="builtins" value="%3Cmodule %27logging%27 from %27/home/stefan/anaconda3/envs/multi-label-classification-climate/lib/python3.9/logging/__init__.py%27&gt;" isContainer="True" />
<var name="make_scorer" type="function" qualifier="builtins" value="%3Cfunction make_scorer at 0x7fdf48eac670&gt;" isContainer="True" />
<var name="make_subplots" type="function" qualifier="builtins" value="%3Cfunction make_subplots at 0x7fdf1a24e790&gt;" isContainer="True" />
<var name="math" type="module" qualifier="builtins" value="%3Cmodule %27math%27 from %27/home/stefan/anaconda3/envs/multi-label-classification-climate/lib/python3.9/lib-dynload/math.cpython-39-x86_64-linux-gnu.so%27&gt;" isContainer="True" />
<var name="mlb" type="MultiLabelBinarizer" qualifier="sklearn.preprocessing._label" value="MultiLabelBinarizer%28%29" isContainer="True" />
<var name="n_unique_labels" type="int" qualifier="builtins" value="23" />
<var name="np" type="module" qualifier="builtins" value="%3Cmodule %27numpy%27 from %27/home/stefan/anaconda3/envs/multi-label-classification-climate/lib/python3.9/site-packages/numpy/__init__.py%27&gt;" isContainer="True" />
<var name="num_instances_each_label" type="Series" qualifier="pandas.core.series" value="%28%27Energy%27%2C 1143%29 %28%27Transportation%27%2C 761%29 %28%27LULUCF%27%2C 398%29 %28%27Economy-wide%27%2C 366%29 %28%27Residential and Commercial%27%2C 351%29 %28%27Agriculture%27%2C 305%29 %28%27Water%27%2C 297%29 %28%27Industry%27%2C 238%29 %28%27Waste%27%2C 177%29 %28%27Health%27%2C 158%29 %28%27Environment%27%2C 127%29 %28%27Urban%27%2C 73%29 %28%27Buildings%27%2C 65%29 %28%27Tourism%27%2C 52%29 %28%27Social development%27%2C 45%29 %28%27Disaster Risk Management %28Drm%29%27%2C 33%29 %28%27Coastal zones%27%2C 28%29 %28%27Rural%27%2C 19%29 %28%27Adaptation%27%2C 11%29 %28%27Cross Cutting Area%27%2C 9%29 %28%27Public Sector%27%2C 8%29 %28%27Other%27%2C 6%29 %28%27Finance%27%2C 5%29" isContainer="True" shape="(23,)" />
<var name="os" type="module" qualifier="builtins" value="%3Cmodule %27os%27 from %27/home/stefan/anaconda3/envs/multi-label-classification-climate/lib/python3.9/os.py%27&gt;" isContainer="True" />
<var name="pd" type="module" qualifier="builtins" value="%3Cmodule %27pandas%27 from %27/home/stefan/anaconda3/envs/multi-label-classification-climate/lib/python3.9/site-packages/pandas/__init__.py%27&gt;" isContainer="True" />
<var name="plt" type="module" qualifier="builtins" value="%3Cmodule %27matplotlib.pyplot%27 from %27/home/stefan/anaconda3/envs/multi-label-classification-climate/lib/python3.9/site-packages/matplotlib/pyplot.py%27&gt;" isContainer="True" />
<var name="px" type="module" qualifier="builtins" value="%3Cmodule %27plotly.express%27 from %27/home/stefan/anaconda3/envs/multi-label-classification-climate/lib/python3.9/site-packages/plotly/express/__init__.py%27&gt;" isContainer="True" />
<var name="pydev_jupyter_vars" type="module" qualifier="builtins" value="%3Cmodule %27pydev_jupyter_vars%27 from %27/snap/pycharm-professional/290/plugins/python/helpers-pro/jupyter_debug/pydev_jupyter_vars.py%27&gt;" isContainer="True" />
<var name="quit" type="ZMQExitAutocall" qualifier="IPython.core.autocall" value="%3CIPython.core.autocall.ZMQExitAutocall object at 0x7fdf59b7a1c0&gt;" isContainer="True" isIPythonHidden="True" />
<var name="remove_imported_pydev_package" type="function" qualifier="builtins" value="%3Cfunction remove_imported_pydev_package at 0x7fdf1cd905e0&gt;" isContainer="True" />
<var name="select_col" type="function" qualifier="builtins" value="%3Cfunction select_col at 0x7fdeab42f0d0&gt;" isContainer="True" />
<var name="simple_feature_engineering" type="function" qualifier="builtins" value="%3Cfunction simple_feature_engineering at 0x7fdf1cb21af0&gt;" isContainer="True" />
<var name="sns" type="module" qualifier="builtins" value="%3Cmodule %27seaborn%27 from %27/home/stefan/anaconda3/envs/multi-label-classification-climate/lib/python3.9/site-packages/seaborn/__init__.py%27&gt;" isContainer="True" />
<var name="subplot_helper" type="function" qualifier="builtins" value="%3Cfunction subplot_helper at 0x7fdf0eee9f70&gt;" isContainer="True" />
<var name="sys" type="module" qualifier="builtins" value="%3Cmodule %27sys%27 %28built-in%29&gt;" isContainer="True" />
<var name="text_cols" type="list" qualifier="builtins" value="%5B%27description_text%27%2C %27policy_title%27%2C %27full_text%27%5D" isContainer="True" shape="3" />
<var name="text_cols_n_tokens" type="list" qualifier="builtins" value="%5B%27description_text_ntokens%27%2C %27policy_title_ntokens%27%2C %27full_text_ntokens%27%5D" isContainer="True" shape="3" />
<var name="text_cols_n_words" type="list" qualifier="builtins" value="%5B%27description_text_nwords%27%2C %27policy_title_nwords%27%2C %27full_text_nwords%27%5D" isContainer="True" shape="3" />
<var name="time" type="type" qualifier="builtins" value="%3Cclass %27datetime.time%27&gt;" isContainer="True" />
<var name="tokenizer" type="DistilBertTokenizerFast" qualifier="transformers.models.distilbert.tokenization_distilbert_fast" value="PreTrainedTokenizerFast%28name_or_path=%27distilbert-base-cased%27%2C vocab_size=28996%2C model_max_len=512%2C is_fast=True%2C padding_side=%27right%27%2C truncation_side=%27right%27%2C special_tokens=%7B%27unk_token%27%3A %27%5BUNK%5D%27%2C %27sep_token%27%3A %27%5BSEP%5D%27%2C %27pad_token%27%3A %27%5BPAD%5D%27%2C %27cls_token%27%3A %27%5BCLS%5D%27%2C %27mask_token%27%3A %27%5BMASK%5D%27%7D%29" isContainer="True" shape="28996" />
<var name="total_positive_labels" type="int64" qualifier="numpy" value="4675" isContainer="True" shape="()" />
<var name="train_test_split" type="function" qualifier="builtins" value="%3Cfunction train_test_split at 0x7fdf1c8fb790&gt;" isContainer="True" />
<var name="tsne_plot" type="function" qualifier="builtins" value="%3Cfunction tsne_plot at 0x7fdf195f7dc0&gt;" isContainer="True" />
<var name="underrepresented_labels" type="Index" qualifier="pandas.core.indexes.base" value="Index%28%5B%27Urban%27%2C %27Buildings%27%2C %27Tourism%27%2C %27Social development%27%2C%0A       %27Disaster Risk Management %28Drm%29%27%2C %27Coastal zones%27%2C %27Rural%27%2C%0A       %27Adaptation%27%2C %27Cross Cutting Area%27%2C %27Public Sector%27%2C %27Other%27%2C%0A       %27Finance%27%5D%2C%0A      dtype=%27object%27%29" isContainer="True" shape="(12,)" />
<var name="unique_labels" type="ndarray" qualifier="numpy" value="%5B%27Industry%27 %27Agriculture%27 %27Economy-wide%27 %27Transportation%27 %27Rural%27 %27LULUCF%27%2C %27Energy%27 %27Social development%27 %27Adaptation%27 %27Health%27 %27Buildings%27 %27Tourism%27%2C %27Environment%27 %27Coastal zones%27 %27Urban%27 %27Water%27 %27Cross Cutting Area%27%2C %27Public Sector%27 %27Residential and Commercial%27 %27Finance%27 %27Waste%27 %27Other%27%2C %27Disaster Risk Management %28Drm%29%27%5D" isContainer="True" shape="(23,)" />
<var name="wandb" type="module" qualifier="builtins" value="%3Cmodule %27wandb%27 from %27/home/stefan/anaconda3/envs/multi-label-classification-climate/lib/python3.9/site-packages/wandb/__init__.py%27&gt;" isContainer="True" />
<var name="y" type="ndarray" qualifier="numpy" value="%5B%5B1 1 0 0 1 0 0 0 0 0%5D%2C %5B0 0 0 0 0 1 0 0 0 0%5D%2C %5B0 0 1 0 0 0 0 0 0 0%5D%2C %5B0 1 0 0 0 0 0 0 0 0%5D%2C %5B0 0 0 0 0 0 0 1 0 0%5D%2C %5B0 1 0 0 0 0 0 0 0 0%5D%2C %5B0 1 0 0 0 0 0 0 0 0%5D%2C %5B0 1 0 0 0 0 0 0 0 0%5D%2C %5B0 1 0 0 0 1 0 0 0 0%5D%2C %5B1 0 0 0 0 0 0 0 0 0%5D%2C %5B0 1 1 0 0 0 0 0 0 0%5D%2C %5B0 1 0 0 0 0 0 0 0 0%5D%2C %5B0 1 1 0 0 0 0 0 0 0%5D%2C %5B0 0 0 0 0 0 0 1 0 0%5D%2C %5B0 1 1 0 0 0 0 0 0 0%5D%2C %5B0 1 1 0 0 1 0 0 0 0%5D%2C %5B0 0 0 0 0 1 0 0 0 0%5D%2C %5B0 0 1 0 0 1 0 0 0 0%5D%2C %5B0 0 0 0 0 0 0 0 0 1%5D%2C %5B0 1 0 0 0 0 0 0 0 0%5D%2C %5B0 0 1 0 0 0 0 0 0 0%5D%2C %5B0 0 0 0 0 0 1 0 0 0%5D%2C %5B0 0 0 0 0 1 0 0 0 0%5D%2C %5B0 1 0 0 0 0 0 0 0 0%5D%2C %5B0 1 0 0 0 0 0 0 0 0%5D%2C %5B0 0 1 0 0 0 0 0 0 0%5D%2C %5B0 1 0 0 0 0 0 0 0 0%5D%2C %5B0 1 0 0 0 0 0 0 0 0%5D%2C %5B0 0 0 0 0 0 0 1 0 0%5D%2C %5B0 1 0 0 0 0 0 0 0 0%5D%2C %5B0 0 1 0 0 0 0 0 0 0%5D%2C %5B0 1 0 0 0 0 0 0 0 0%5D%2C %5B0 1 0 0 0 0 0 0 0 0%5D%2C %5B0 0 1 0 0 0 0 0 0 0%5D%2C %5B0 1 0 0 0 0 0 0 0 0%5D%2C %5B0 0 1 0 0 0 0 0 0 0%5D%2C %5B0 1 0 0 0 0 0 0 0 0%5D%2C %5B0 1 1 0 0 0 0 0 0 0%5D%2C %5B0 0 1 0 0 0 0 0 0 0%5D%2C %5B0 0 1 0 0 0 0 0 0 0%5D%2C %5B0 0 1 0 0 0 0 1 0 0%5D%2C %5B0 0 1 0 0 0 0 0 0 0%5D%2C %5B0 0 1 0 0 0 1 1 0 0%5D%2C %5B1 0 0 0 0..." isContainer="True" shape="(1680, 10)" />
<var name="y_eda" type="ndarray" qualifier="numpy" value="%5B%5B1 1 0 0 1 0 0 0 0 0%5D%2C %5B0 0 0 0 0 1 0 0 0 0%5D%2C %5B0 0 1 0 0 0 0 0 0 0%5D%2C %5B0 1 0 0 0 0 0 0 0 0%5D%2C %5B0 0 0 0 0 0 0 1 0 0%5D%2C %5B0 1 0 0 0 0 0 0 0 0%5D%2C %5B0 1 0 0 0 0 0 0 0 0%5D%2C %5B0 1 0 0 0 0 0 0 0 0%5D%2C %5B0 1 0 0 0 1 0 0 0 0%5D%2C %5B1 0 0 0 0 0 0 0 0 0%5D%2C %5B0 1 1 0 0 0 0 0 0 0%5D%2C %5B0 1 0 0 0 0 0 0 0 0%5D%2C %5B0 1 1 0 0 0 0 0 0 0%5D%2C %5B0 0 0 0 0 0 0 1 0 0%5D%2C %5B0 1 1 0 0 0 0 0 0 0%5D%2C %5B0 1 1 0 0 1 0 0 0 0%5D%2C %5B0 0 0 0 0 1 0 0 0 0%5D%2C %5B0 0 1 0 0 1 0 0 0 0%5D%2C %5B0 0 0 0 0 0 0 0 0 1%5D%2C %5B0 1 0 0 0 0 0 0 0 0%5D%2C %5B0 0 1 0 0 0 0 0 0 0%5D%2C %5B0 0 0 0 0 0 1 0 0 0%5D%2C %5B0 0 0 0 0 1 0 0 0 0%5D%2C %5B0 1 0 0 0 0 0 0 0 0%5D%2C %5B0 1 0 0 0 0 0 0 0 0%5D%2C %5B0 0 1 0 0 0 0 0 0 0%5D%2C %5B0 1 0 0 0 0 0 0 0 0%5D%2C %5B0 1 0 0 0 0 0 0 0 0%5D%2C %5B0 0 0 0 0 0 0 1 0 0%5D%2C %5B0 1 0 0 0 0 0 0 0 0%5D%2C %5B0 0 1 0 0 0 0 0 0 0%5D%2C %5B0 1 0 0 0 0 0 0 0 0%5D%2C %5B0 1 0 0 0 0 0 0 0 0%5D%2C %5B0 0 1 0 0 0 0 0 0 0%5D%2C %5B0 1 0 0 0 0 0 0 0 0%5D%2C %5B0 0 1 0 0 0 0 0 0 0%5D%2C %5B0 1 0 0 0 0 0 0 0 0%5D%2C %5B0 1 1 0 0 0 0 0 0 0%5D%2C %5B0 0 1 0 0 0 0 0 0 0%5D%2C %5B0 0 1 0 0 0 0 0 0 0%5D%2C %5B0 0 1 0 0 0 0 1 0 0%5D%2C %5B0 0 1 0 0 0 0 0 0 0%5D%2C %5B0 0 1 0 0 0 1 1 0 0%5D%2C %5B1 0 0 0 0..." isContainer="True" shape="(1680, 10)" />
<var name="y_eda_df" type="DataFrame" qualifier="pandas.core.frame" value="Agriculture  Economy-wide  Energy  Health  Industry  LULUCF  %5C %5B0               1             1       0       0         1       0   %5D %5B1               0             0       0       0         0       1   %5D %5B2               0             0       1       0         0       0   %5D %5B3               0             1       0       0         0       0   %5D %5B4               0             0       0       0         0       0   %5D %5B...           ...           ...     ...     ...       ...     ...   %5D %5B1675            0             0       1       1         0       0   %5D %5B1676            0             0       0       0         0       0   %5D %5B1677            0             0       1       0         0       1   %5D %5B1678            0             0       1       0         0       0   %5D %5B1679            0             0       0       0         0       0   %5D %5B%5D %5B      Residential and Commercial  Transportation  Waste  Water  %5D %5B0                              0               0      0      0  %5D %5B1                              0         ...%5D" isContainer="True" shape="(1680, 10)" />
<var name="y_test" type="Series" qualifier="pandas.core.series" value="%281497%2C %27Energy%27%29 %281517%2C %27Economy-wide%27%29 %281244%2C %27Energy%27%29 %28249%2C %27Transportation%27%29 %28698%2C %27Energy%27%29 %281002%2C %27Economy-wide%27%29 %281757%2C %27Transportation%27%29 %28765%2C %27Energy%27%29 %281958%2C %27Energy%27%29 %281738%2C %27Economy-wide%27%29 %281091%2C %27Energy%27%29 %28893%2C %27Energy%27%29 %281328%2C %27LULUCF%27%29 %281869%2C %27Energy%27%29 %281257%2C %27Economy-wide%27%29 %28398%2C %27Transportation%27%29 %281326%2C %27Energy%27%29 %281550%2C %27Transportation%27%29 %28375%2C %27LULUCF%27%29 %28666%2C %27Energy%27%29 %281201%2C %27Energy%27%29 %281010%2C %27Energy%27%29 %281570%2C %27Transportation%27%29 %281199%2C %27Energy%27%29 %28979%2C %27Energy%27%29 %28112%2C %27Energy%27%29 %281928%2C %27Economy-wide%27%29 %28697%2C %27Residential and Commercial%27%29 %281112%2C %27Energy%27%29 %28583%2C %27LULUCF%27%29 %28484%2C %27Residential and Commercial%27%29 %281059%2C %27Energy%27%29 %281908%2C %27Energy%27%29 %28708%2C %27Economy-wide%27%29 %281953%2C %27Agriculture%27%29 %281214%2C %27Energy%27%29 %28438%2C %27Transportation%27%29 %28951%2C %27Energy%27%29 %281448%2C %27Transportation%27%29 %28762%2C %27Energy%27%29 %28795%2C %27Energy%27%29 %28918%2C %27Transportation%27%29 %281914%2C %27Energy%27%29 %281544%2C %27Agriculture%27%29 %28953%2C %27Economy-wide%27%29 %2895%2C %27Agriculture%27%29 %28700%2C %27LULUCF%27%29 %281222%2C %27Energy%27%29 %28294%2C %27Agriculture%27%29 %281100%2C %27Energy%27%29 %281217%2C %27Transportation%27%29 %281526%2C %27Transportation%27%29 %281041%2C %27Transportation%27%29 %281644%2C %27Energy%27%29 %2837%2C %27LULUCF%27%29 %28554%2C %27Energy%27%29 %281065%2C %27Energy%27%29 %2888%2C %27Energy%27%29 %281109%2C %27Energy%27%29 %28590%2C %27Energy%27%29 %28574%2C %27Energy%27%29 %28252%2C %27Agriculture%27%29 %28203%2C %27Water%27%29 %28165%2C %27LULUCF%27%29 %28619%2C %27Water%27%29 %281039%2C %27Economy-wide%27%29 %281237%2C %27Economy-wide%27%29 %28823%2C %27Energy%27%29 %28199%2C %27Energy%27%29 %28839%2C %27Energy%27%29 %281915%2C %27Energy%27%29 %281123%2C %27Economy-wide%27%29 %281489%2C %27Energy%27%29 %28964%2C %27Energy%27%29 %281139%2C %27Residential and Commercial%27%29 %28827%2C %27Health%27%29 %281725%2C %27Energy%27%29 %28247%2C %27Transportation%27%29 %281820%2C %27Transportation%27%29 %28232%2C %27Residential and Commercial%27%29 %28702%2C %27LULUCF%27%29 %281221%2C %27Transportation%27%29 %28602%2C %27Transportation%27%29 %28196%2C %27Transportation%27%29 %281624%2C %27Economy-wide%27%29 %28782%2C %27Economy-wide%27%29 %28145%2C %27Residential and Commercial%27%29 %28971%2C %27Energy%27%29 %28990%2C %27Energy%27%29 %28842%2C %27Energy%27%29 %281424%2C %27Economy-wide%27%29 %28502%2C %27Water%27%29 %28769%2C %27Economy-wide%27%29 %2819%2C %27Agriculture%27%29 %28671%2C %27Transportation%27%29 %2866%2C %27Energy%27%29 %281147%2C %27LULUCF%27%29 %281950%2C %27Economy-wide%27%29 %281656%2C %27Economy-wide%27%29 %28725%2C %27Energy%27%29" isContainer="True" shape="(249,)" />
<var name="y_train" type="Series" qualifier="pandas.core.series" value="%28946%2C %27Energy%27%29 %281077%2C %27Energy%27%29 %28753%2C %27Energy%27%29 %28917%2C %27Energy%27%29 %28966%2C %27Economy-wide%27%29 %281563%2C %27Transportation%27%29 %28420%2C %27Transportation%27%29 %28470%2C %27Transportation%27%29 %28776%2C %27Energy%27%29 %28347%2C %27Transportation%27%29 %28329%2C %27LULUCF%27%29 %281004%2C %27Energy%27%29 %281151%2C %27Economy-wide%27%29 %281780%2C %27Transportation%27%29 %281745%2C %27Economy-wide%27%29 %281115%2C %27LULUCF%27%29 %2842%2C %27Water%27%29 %28130%2C %27Energy%27%29 %28125%2C %27LULUCF%27%29 %28607%2C %27Energy%27%29 %281670%2C %27Transportation%27%29 %281541%2C %27Energy%27%29 %281102%2C %27Energy%27%29 %28631%2C %27Energy%27%29 %281225%2C %27Energy%27%29 %281641%2C %27Transportation%27%29 %28630%2C %27Energy%27%29 %281308%2C %27Energy%27%29 %281319%2C %27LULUCF%27%29 %28774%2C %27Economy-wide%27%29 %281243%2C %27Energy%27%29 %281899%2C %27Energy%27%29 %2851%2C %27LULUCF%27%29 %281155%2C %27Energy%27%29 %28771%2C %27Energy%27%29 %28904%2C %27Energy%27%29 %281189%2C %27Economy-wide%27%29 %28824%2C %27Energy%27%29 %281298%2C %27Transportation%27%29 %281209%2C %27Agriculture%27%29 %281335%2C %27Transportation%27%29 %281832%2C %27Energy%27%29 %2833%2C %27Transportation%27%29 %28764%2C %27Energy%27%29 %2863%2C %27Economy-wide%27%29 %28709%2C %27Economy-wide%27%29 %281291%2C %27Transportation%27%29 %281900%2C %27Energy%27%29 %281909%2C %27Transportation%27%29 %281044%2C %27Energy%27%29 %281579%2C %27Energy%27%29 %28680%2C %27Energy%27%29 %281743%2C %27Transportation%27%29 %28350%2C %27Energy%27%29 %28962%2C %27Energy%27%29 %28882%2C %27Industry%27%29 %281145%2C %27Industry%27%29 %28807%2C %27Energy%27%29 %28644%2C %27Energy%27%29 %281542%2C %27Transportation%27%29 %28956%2C %27Agriculture%27%29 %28580%2C %27LULUCF%27%29 %28246%2C %27Water%27%29 %281253%2C %27Energy%27%29 %28798%2C %27Energy%27%29 %28215%2C %27Water%27%29 %281150%2C %27Energy%27%29 %28650%2C %27Energy%27%29 %28790%2C %27Economy-wide%27%29 %28736%2C %27Energy%27%29 %28327%2C %27Agriculture%27%29 %281615%2C %27Energy%27%29 %28483%2C %27LULUCF%27%29 %28523%2C %27Transportation%27%29 %281566%2C %27Economy-wide%27%29 %28815%2C %27Energy%27%29 %28738%2C %27Energy%27%29 %283%2C %27LULUCF%27%29 %281927%2C %27Economy-wide%27%29 %28938%2C %27Economy-wide%27%29 %281655%2C %27LULUCF%27%29 %281067%2C %27Energy%27%29 %28800%2C %27Economy-wide%27%29 %281501%2C %27Transportation%27%29 %28477%2C %27Transportation%27%29 %28719%2C %27Energy%27%29 %28989%2C %27LULUCF%27%29 %281013%2C %27Agriculture%27%29 %28794%2C %27Economy-wide%27%29 %28892%2C %27Health%27%29 %281302%2C %27Transportation%27%29 %28569%2C %27Economy-wide%27%29 %281508%2C %27Energy%27%29 %281491%2C %27LULUCF%27%29 %281729%2C %27Energy%27%29 %281393%2C %27LULUCF%27%29 %28786%2C %27Transportation%27%29 %281331%2C %27Transportation%27%29 %28859%2C %27Energy%27%29 %28863%2C %27Transportation%27%29" isContainer="True" shape="(503,)" />
</xml>
<xml><var name="AutoTokenizer" type="type" qualifier="builtins" value="%3Cclass %27transformers.models.auto.tokenization_auto.AutoTokenizer%27&gt;" isContainer="True" />
<var name="BATCH_SIZE" type="int" qualifier="builtins" value="16" />
<var name="ClassifierChain" type="type" qualifier="builtins" value="%3Cclass %27skmultilearn.problem_transform.cc.ClassifierChain%27&gt;" isContainer="True" />
<var name="CountVectorizer" type="type" qualifier="builtins" value="%3Cclass %27sklearn.feature_extraction.text.CountVectorizer%27&gt;" isContainer="True" />
<var name="DummyClassifier" type="type" qualifier="builtins" value="%3Cclass %27sklearn.dummy.DummyClassifier%27&gt;" isContainer="True" />
<var name="GradientBoostingClassifier" type="ABCMeta" qualifier="abc" value="%3Cclass %27sklearn.ensemble._gb.GradientBoostingClassifier%27&gt;" isContainer="True" />
<var name="HOLD_OUT_PERCENTAGE" type="int" qualifier="builtins" value="10" />
<var name="HUGGINGFACE_CONFIG" type="str" qualifier="builtins" value="distilbert-base-cased" />
<var name="ITERATIVE_STRAT_ORDER" type="int" qualifier="builtins" value="1" />
<var name="In" type="list" qualifier="builtins" value="%5B%27%27%2C %22import sys%5Cn%5Cn%5Cn%5Cnget_ipython%28%29.run_line_magic%28%27load_ext%27%2C %27autoreload%27%29%5Cnget_ipython%28%29.run_line_magic%28%27autoreload%27%2C %272%27%29%22%2C %27from src.sklearn_utils import iter_train_test_split%2C simple_feature_engineering%5Cnfrom sklearn.ensemble import GradientBoostingClassifier%27%2C %27import pandas as pd%5Cnimport numpy as np%5Cnimport os%5Cnimport plotly.express as px%5Cnfrom skmultilearn.model_selection import IterativeStratification%5Cnfrom sklearn.model_selection import train_test_split%5Cnfrom sklearn.preprocessing import MultiLabelBinarizer%5Cnfrom sklearn.dummy import DummyClassifier%5Cnfrom sklearn.metrics import hamming_loss%5Cnimport seaborn as sns%5Cn%5Cnfrom sklearn.feature_extraction.text import TfidfVectorizer%5Cn%5Cnfrom yellowbrick.text import TSNEVisualizer%5Cnfrom yellowbrick.datasets import load_hobbies%5Cn%23 import tensorflow_addons as tfa%5Cnfrom sklearn.metrics import hamming_loss%5Cn%5Cnfrom skmultilearn.problem_transform import ClassifierChain%5Cnfrom sklearn.metrics import hamming_loss%2C accuracy_score%2C make_scorer..." isContainer="True" shape="27" isIPythonHidden="True" />
<var name="IterativeStratification" type="ABCMeta" qualifier="abc" value="%3Cclass %27skmultilearn.model_selection.iterative_stratification.IterativeStratification%27&gt;" isContainer="True" />
<var name="KEEP_MOST_COMMON_LABELS" type="int" qualifier="builtins" value="10" />
<var name="Lasso" type="ABCMeta" qualifier="abc" value="%3Cclass %27sklearn.linear_model._coordinate_descent.Lasso%27&gt;" isContainer="True" />
<var name="MultiLabelBinarizer" type="type" qualifier="builtins" value="%3Cclass %27sklearn.preprocessing._label.MultiLabelBinarizer%27&gt;" isContainer="True" />
<var name="MultinomialNB" type="ABCMeta" qualifier="abc" value="%3Cclass %27sklearn.naive_bayes.MultinomialNB%27&gt;" isContainer="True" />
<var name="Out" type="dict" qualifier="builtins" value="%7B5%3A %27/home/stefan/PycharmProjects/multi-label-classification-climate/notebooks%27%2C 7%3A    policy_id                       policy_title  %5C%0A0      10088     Circular economy promotion law   %0A1      10087                14th Five-Year Plan   %0A2      10046             National Forest Policy   %0A3      10044   Suriname National REDD%2B Strategy   %0A4      10042  Policy Development Plan 2017-2021   %0A%0A                                             sectors  %5C%0A0                  Industry%3BAgriculture%3BEconomy-wide   %0A1  Transportation%3BRural%3BLULUCF%3BEnergy%3BEconomy-wid...   %0A2                                             LULUCF   %0A3                                             LULUCF   %0A4                                       Economy-wide   %0A%0A                                    description_text  %0A0  This law promotes the development of a circula...  %0A1  The 14th Five Year Plan lays down the strategy...  %0A2  This document aims at protecting the country%27s...  %0A3  This document aims to protect Suriname%27s fores......" isContainer="True" shape="10" isIPythonHidden="True" />
<var name="Path" type="type" qualifier="builtins" value="%3Cclass %27pathlib.Path%27&gt;" isContainer="True" />
<var name="Pipeline" type="ABCMeta" qualifier="abc" value="%3Cclass %27sklearn.pipeline.Pipeline%27&gt;" isContainer="True" />
<var name="SEED" type="int" qualifier="builtins" value="42" />
<var name="TEST_SET_FRAC" type="float" qualifier="builtins" value="0.1" />
<var name="TRAIN_FRACTION" type="float" qualifier="builtins" value="0.9" />
<var name="TSNEVisualizer" type="type" qualifier="builtins" value="%3Cclass %27yellowbrick.text.tsne.TSNEVisualizer%27&gt;" isContainer="True" />
<var name="TextFeatureEngineering" type="type" qualifier="builtins" value="%3Cclass %27src.sklearn_utils.TextFeatureEngineering%27&gt;" isContainer="True" />
<var name="TfidfVectorizer" type="type" qualifier="builtins" value="%3Cclass %27sklearn.feature_extraction.text.TfidfVectorizer%27&gt;" isContainer="True" />
<var name="Tuple" type="_TupleType" qualifier="typing" value="typing.Tuple" isContainer="True" />
<var name="X" type="DataFrame" qualifier="pandas.core.frame" value="policy_id                                       policy_title  %5C %5B0         10088                     Circular economy promotion law   %5D %5B3         10044                   Suriname National REDD%2B Strategy   %5D %5B5         10049                               Energy Strategy 2050   %5D %5B6         10051                   Long-Term Climate Strategy%2C 2021   %5D %5B9         10054  Environmentally Sustainable Transport System P...   %5D %5B...         ...                                                ...   %5D %5B1955       8835  National Climate Change Strategy and Action Pl...   %5D %5B1956       9110                 National Policy for Climate Change   %5D %5B1957       9191  Presidential Decree 7/2019 establishing the na...   %5D %5B1958       8889  Act No. 28 of 1972 concerning nuclear energy a...   %5D %5B1959       8887  Natural Hazards Compensation Act %28No. 59 of 2014%29   %5D %5B%5D %5B                                       description_text  %5C%5D %5B0     This law promotes the development of a circula...   %5D %5B3     This document aims to protect Surin...%5D" isContainer="True" shape="(1680, 14)" />
<var name="X_test" type="DataFrame" qualifier="pandas.core.frame" value="description_text  %5C %5B1497  The Enemalta %28Transfer of Assets%2C Rights%2C Liab...   %5D %5B1517  The National Climate Change Policy%2C published ...   %5D %5B1244  This document sets the remuneration framework ...   %5D %5B249   This document sets the government%27s National T...   %5D %5B698   This document sets the government%27s energy pol...   %5D %5B...                                                 ...   %5D %5B1704  The goal of this regulation is to grant financ...   %5D %5B598   This law commits Ireland%27s national treasury t...   %5D %5B1533  The Democratic Republic of Congo%27s Disaster Re...   %5D %5B1903  The Small and Medium-sized Power Plant Act was...   %5D %5B240   The Strategic Investment Framework for Environ...   %5D %5B%5D %5B                                           policy_title  %5C%5D %5B1497  ACT No. XXXIV of 2014 and associated feed-in t...   %5D %5B1517            Myanmar National Climate Change Policy    %5D %5B1244  Royal Decree 960/2020 regulating the economic ...   %5D %5B249   National Transport Plan 2018-2029 %28Meld. St. 3......%5D" isContainer="True" shape="(249, 3)" />
<var name="X_train" type="DataFrame" qualifier="pandas.core.frame" value="description_text  %5C %5B946   This Act establishes the Energy Market Authori...   %5D %5B1077  This Act creates the Energy and Climate Fund. ...   %5D %5B753   This Strategy%2C developed in partnership with U...   %5D %5B917   Energy efficiency labelling requirements are s...   %5D %5B966   The law provided a legal framework to set up a...   %5D %5B...                                                 ...   %5D %5B220   South Africa%27s Sectoral Cold Spell Management ...   %5D %5B422   The Energy Efficiency Action Plan 2011%3F2020 le...   %5D %5B789   This law states that the State shall provide t...   %5D %5B1125  The Strategy aims to develop a sustainable ene...   %5D %5B404   The main objectives of Law 1391-V are to%3A %5Cn- ...   %5D %5B%5D %5B                                           policy_title  %5C%5D %5B946   Energy Market Authority of Singapore Act %28Chap...   %5D %5B1077                 Energy and Climate Fund Act %28EKFG%29   %5D %5B753   Decentralized Rural Electrification Strategy %28...   %5D %5B917   Energy Resources Regulations %28Energy labeling ......%5D" isContainer="True" shape="(503, 3)" />
<var name="_" type="dict" qualifier="builtins" value="%7B%27memory%27%3A None%2C %27steps%27%3A %5B%28%27features%27%2C FeatureUnion%28transformer_list=%5B%28%27pipeline_text%27%2C%0A                                Pipeline%28steps=%5B%28%27select_text_col%27%2C%0A                                                 FunctionTransformer%28func=%3Cfunction select_col at 0x7fdf1be14310&gt;%29%29%2C%0A                                                %28%27tfidf%27%2C%0A                                                 TfidfVectorizer%28lowercase=False%2C%0A                                                                 max_df=0.5%2C%0A                                                                 stop_words=%27english%27%29%29%5D%29%29%2C%0A                               %28%27feature_engineering%27%2C%0A                                TextFeatureEngineering%28%29%29%5D%29%29%2C %28%27clf%27%2C ClassifierChain%28classifier=RandomForestClassifier%28%29%2C require_dense=%5BTrue%2C True%5D%29%29%5D%2C %27verbose%27%3A False%2C %27features%27%3A FeatureUnion%28transformer_list=%5B%28%27pipeline_text%27%2C%0A                                Pipeline%28steps=%5B%28%27select_text_col%27%2C%0A                                                 FunctionTran..." isContainer="True" shape="66" isIPythonHidden="True" />
<var name="_11" type="DataFrame" qualifier="pandas.core.frame" value="num_labels  cumulative_positive_labels  %5C %5BEnergy                                1143                        1143   %5D %5BTransportation                         761                        1904   %5D %5BLULUCF                                 398                        2302   %5D %5BEconomy-wide                           366                        2668   %5D %5BResidential and Commercial             351                        3019   %5D %5BAgriculture                            305                        3324   %5D %5BWater                                  297                        3621   %5D %5BIndustry                               238                        3859   %5D %5BWaste                                  177                        4036   %5D %5BHealth                                 158                        4194   %5D %5BEnvironment                            127                        4321   %5D %5BUrban                                   73                        4394   %5D %5BBuildings                             ...%5D" isContainer="True" shape="(23, 3)" isIPythonHidden="True" />
<var name="_12" type="Figure" qualifier="plotly.graph_objs._figure" value="Figure%28%7B%0A    %27data%27%3A %5B%7B%27alignmentgroup%27%3A %27True%27%2C%0A              %27hovertemplate%27%3A %27index=%25%7Bx%7D%3Cbr&gt;num_labels=%25%7By%7D%3Cextra&gt;%3C/extra&gt;%27%2C%0A              %27legendgroup%27%3A %27%27%2C%0A              %27marker%27%3A %7B%27color%27%3A %27%23636efa%27%2C %27pattern%27%3A %7B%27shape%27%3A %27%27%7D%7D%2C%0A              %27name%27%3A %27%27%2C%0A              %27offsetgroup%27%3A %27%27%2C%0A              %27orientation%27%3A %27v%27%2C%0A              %27showlegend%27%3A False%2C%0A              %27textposition%27%3A %27auto%27%2C%0A              %27type%27%3A %27bar%27%2C%0A              %27x%27%3A array%28%5B%27Energy%27%2C %27Transportation%27%2C %27LULUCF%27%2C %27Economy-wide%27%2C%0A                          %27Residential and Commercial%27%2C %27Agriculture%27%2C %27Water%27%2C %27Industry%27%2C%0A                          %27Waste%27%2C %27Health%27%2C %27Environment%27%2C %27Urban%27%2C %27Buildings%27%2C %27Tourism%27%2C%0A                          %27Social development%27%2C %27Disaster Risk Management %28Drm%29%27%2C %27Coastal zones%27%2C%0A                          %27Rural%27%2C %27Adaptation%27%2C %27Cross Cutting Area%27%2C %27Public Sector%27%2C %27Other%27%2C%0A                          %27Finance%27%5D%2C dtype=object%29%2C%0A              %27xaxis%27%3A %27x%27%2C%0A              %27y%27%3A array%28%5B1143..." isContainer="True" isIPythonHidden="True" />
<var name="_13" type="AxesSubplot" qualifier="matplotlib.axes._subplots" value="AxesSubplot%280.125%2C0.125%3B0.62x0.755%29" isContainer="True" isIPythonHidden="True" />
<var name="_14" type="Figure" qualifier="plotly.graph_objs._figure" value="Figure%28%7B%0A    %27data%27%3A %5B%7B%27alignmentgroup%27%3A %27True%27%2C%0A              %27bingroup%27%3A %27x%27%2C%0A              %27hovertemplate%27%3A %27variable=sectors_list%3Cbr&gt;value=%25%7Bx%7D%3Cbr&gt;count=%25%7By%7D%3Cextra&gt;%3C/extra&gt;%27%2C%0A              %27legendgroup%27%3A %27sectors_list%27%2C%0A              %27marker%27%3A %7B%27color%27%3A %27%23636efa%27%2C %27pattern%27%3A %7B%27shape%27%3A %27%27%7D%7D%2C%0A              %27name%27%3A %27sectors_list%27%2C%0A              %27offsetgroup%27%3A %27sectors_list%27%2C%0A              %27orientation%27%3A %27v%27%2C%0A              %27showlegend%27%3A True%2C%0A              %27type%27%3A %27histogram%27%2C%0A              %27x%27%3A array%28%5B3%2C 6%2C 1%2C ...%2C 5%2C 1%2C 1%5D%29%2C%0A              %27xaxis%27%3A %27x%27%2C%0A              %27yaxis%27%3A %27y%27%7D%5D%2C%0A    %27layout%27%3A %7B%27barmode%27%3A %27relative%27%2C%0A               %27legend%27%3A %7B%27title%27%3A %7B%27text%27%3A %27variable%27%7D%2C %27tracegroupgap%27%3A 0%7D%2C%0A               %27template%27%3A %27...%27%2C%0A               %27title%27%3A %7B%27text%27%3A %27num labels per instance%27%7D%2C%0A               %27xaxis%27%3A %7B%27anchor%27%3A %27y%27%2C %27domain%27%3A %5B0.0%2C 1.0%5D%2C %27title%27%3A %7B%27text%27%3A %27value%27%7D%7D%2C%0A               %27yaxis%27%3A %7B%27anchor%27%3A %27x%27%2C %27domain%27%3A %5B0.0%2C 1.0%5D%2C %27title%27%3A %7B%27text%27%3A %27count%27%7D%7D%7D%0A%7D%29" isContainer="True" isIPythonHidden="True" />
<var name="_15" type="Series" qualifier="pandas.core.series" value="%28%27Energy%27%2C 365%29 %28%27Economy-wide%27%2C 144%29 %28%27Transportation%3BEnergy%27%2C 117%29 %28%27Transportation%27%2C 112%29 %28%27Energy%3BResidential and Commercial%27%2C 63%29 %28%27LULUCF%27%2C 58%29 %28%27Transportation%3BEnergy%3BResidential and Commercial%27%2C 30%29 %28%27Agriculture%27%2C 26%29 %28%27Transportation%3BLULUCF%27%2C 24%29 %28%27Industry%3BEnergy%27%2C 24%29" isContainer="True" shape="(10,)" isIPythonHidden="True" />
<var name="_18" type="AxesSubplot" qualifier="matplotlib.axes._subplots" value="AxesSubplot%280.125%2C0.125%3B0.62x0.755%29" isContainer="True" isIPythonHidden="True" />
<var name="_24" type="Run" qualifier="wandb.sdk.wandb_run" value="%3Cwandb.sdk.wandb_run.Run object at 0x7fdea06a8400&gt;" isContainer="True" isIPythonHidden="True" />
<var name="_26" type="dict" qualifier="builtins" value="%7B%27memory%27%3A None%2C %27steps%27%3A %5B%28%27features%27%2C FeatureUnion%28transformer_list=%5B%28%27pipeline_text%27%2C%0A                                Pipeline%28steps=%5B%28%27select_text_col%27%2C%0A                                                 FunctionTransformer%28func=%3Cfunction select_col at 0x7fdf1be14310&gt;%29%29%2C%0A                                                %28%27tfidf%27%2C%0A                                                 TfidfVectorizer%28lowercase=False%2C%0A                                                                 max_df=0.5%2C%0A                                                                 stop_words=%27english%27%29%29%5D%29%29%2C%0A                               %28%27feature_engineering%27%2C%0A                                TextFeatureEngineering%28%29%29%5D%29%29%2C %28%27clf%27%2C ClassifierChain%28classifier=RandomForestClassifier%28%29%2C require_dense=%5BTrue%2C True%5D%29%29%5D%2C %27verbose%27%3A False%2C %27features%27%3A FeatureUnion%28transformer_list=%5B%28%27pipeline_text%27%2C%0A                                Pipeline%28steps=%5B%28%27select_text_col%27%2C%0A                                                 FunctionTran..." isContainer="True" shape="66" isIPythonHidden="True" />
<var name="_5" type="str" qualifier="builtins" value="/home/stefan/PycharmProjects/multi-label-classification-climate/notebooks" isIPythonHidden="True" />
<var name="_7" type="DataFrame" qualifier="pandas.core.frame" value="policy_id                       policy_title  %5C %5B0      10088     Circular economy promotion law   %5D %5B1      10087                14th Five-Year Plan   %5D %5B2      10046             National Forest Policy   %5D %5B3      10044   Suriname National REDD%2B Strategy   %5D %5B4      10042  Policy Development Plan 2017-2021   %5D %5B%5D %5B                                             sectors  %5C%5D %5B0                  Industry%3BAgriculture%3BEconomy-wide   %5D %5B1  Transportation%3BRural%3BLULUCF%3BEnergy%3BEconomy-wid...   %5D %5B2                                             LULUCF   %5D %5B3                                             LULUCF   %5D %5B4                                       Economy-wide   %5D %5B%5D %5B                                    description_text  %5D %5B0  This law promotes the development of a circula...  %5D %5B1  The 14th Five Year Plan lays down the strategy...  %5D %5B2  This document aims at protecting the country%27s...  %5D %5B3  This document aims to protect Suriname%27s fores...  %5D %5B4  This document lays out the country%27s developme...  %5D" isContainer="True" shape="(5, 4)" isIPythonHidden="True" />
<var name="__" type="Run" qualifier="wandb.sdk.wandb_run" value="%3Cwandb.sdk.wandb_run.Run object at 0x7fdea06a8400&gt;" isContainer="True" isIPythonHidden="True" />
<var name="___" type="AxesSubplot" qualifier="matplotlib.axes._subplots" value="AxesSubplot%280.125%2C0.125%3B0.62x0.755%29" isContainer="True" isIPythonHidden="True" />
<var name="__builtin__" type="module" qualifier="builtins" value="%3Cmodule %27builtins%27 %28built-in%29&gt;" isContainer="True" isIPythonHidden="True" />
<var name="__builtins__" type="module" qualifier="builtins" value="%3Cmodule %27builtins%27 %28built-in%29&gt;" isContainer="True" isIPythonHidden="True" />
<var name="__doc__" type="str" qualifier="builtins" value="Automatically created module for IPython interactive environment" isIPythonHidden="True" />
<var name="__loader__" type="NoneType" qualifier="builtins" value="None" isIPythonHidden="True" />
<var name="__name__" type="str" qualifier="builtins" value="__main__" isIPythonHidden="True" />
<var name="__package__" type="NoneType" qualifier="builtins" value="None" isIPythonHidden="True" />
<var name="__spec__" type="NoneType" qualifier="builtins" value="None" isIPythonHidden="True" />
<var name="_dh" type="list" qualifier="builtins" value="%5BPosixPath%28%27/home/stefan/PycharmProjects/multi-label-classification-climate/notebooks%27%29%5D" isContainer="True" shape="1" isIPythonHidden="True" />
<var name="_i" type="str" qualifier="builtins" value="def select_col%28df%2C col=%27full_text%27%29%3A %23 lambda%27s not picklable%2C hence this one liner.%0A    return df%5Bcol%5D%0A%0Afull_pipe_rf=construct_pipeline%28%29%0Afull_pipe_gb=construct_pipeline%28clf=GradientBoostingClassifier%28%29%29%0A%0A%23 cv_score=cross_val_score%28full_pipe_rf%2C X%2C y%2C scoring=make_scorer%28hamming_loss%29%2C cv=5%2C error_score=%27raise%27%29%0A%23%0A%23 %23 fit full_pipe and log the results.%0A%23 full_pipe_rf.fit%28X%2C y%29%0A%23 wandb.log%28%7B%27cv_score%27%3A cv_score.mean%28%29%2C %27cv_std%27%3A cv_score.std%28%29%7D%29" isIPythonHidden="True" />
<var name="_i1" type="str" qualifier="builtins" value="import sys%0A%0A%0A%0A%25load_ext autoreload%0A%25autoreload 2" isIPythonHidden="True" />
<var name="_i10" type="str" qualifier="builtins" value="%23 Let%27s analyse the labels.%0Alabels_flattened=df%5B%27sectors_list%27%5D.explode%28%29%0Aunique_labels=labels_flattened.unique%28%29%0An_unique_labels=len%28unique_labels%29%0Aprint%28f%22There are %7Bn_unique_labels%7D classes with possible labels%3A %5Cn %7Bunique_labels%7D%22%29" isIPythonHidden="True" />
<var name="_i11" type="str" qualifier="builtins" value="%23 What are the cumulative totals for each label%3F%0Anum_instances_each_label=labels_flattened.value_counts%28%29%0Atotal_positive_labels=num_instances_each_label.sum%28%29%0Acumulative_sum=num_instances_each_label.cumsum%28%29%0Afraction_dataset_covered=cumulative_sum/total_positive_labels%0Adf_labels=pd.DataFrame%28%7B%27num_labels%27%3A num_instances_each_label%2C%0A                        %27cumulative_positive_labels%27%3A cumulative_sum%2C %0A                        %27cumulative_fraction_dataset_covered%27%3A fraction_dataset_covered%7D%29%0Adf_labels" isIPythonHidden="True" />
<var name="_i12" type="str" qualifier="builtins" value="px.bar%28df_labels%2C x=df_labels.index%2C y=%27num_labels%27%2C title=%27label distribution%27%29" isIPythonHidden="True" />
<var name="_i13" type="str" qualifier="builtins" value="%23 12 most under represented labels.%0Aunderrepresented_labels=df_labels%5B11%3A%5D.index%0A%0Amlb=MultiLabelBinarizer%28%29%0Ay = mlb.fit_transform%28df%5B%27sectors_list%27%5D%29%0A%23 Now let%27s look at the correlations between labels.%0Asns.heatmap%28pd.DataFrame%28y%2C columns=mlb.classes_%29.corr%28%29.loc%5Bunderrepresented_labels%5D%29" isIPythonHidden="True" />
<var name="_i14" type="str" qualifier="builtins" value="px.histogram%28df%5B%27sectors_list%27%5D.apply%28len%29%2C title=%27num labels per instance%27%29" isIPythonHidden="True" />
<var name="_i15" type="str" qualifier="builtins" value="%23 Let%27s also check if there are any labels with an especially high number of classes such that we could change this to a multi-class problem%0A%23 instead of a multi-label problem.%0Adf%5B%27sectors%27%5D.value_counts%28%29.head%2810%29" isIPythonHidden="True" />
<var name="_i16" type="str" qualifier="builtins" value="common_labels=df_labels.index%5B0%3AKEEP_MOST_COMMON_LABELS%5D%0A%0A%23 Only keep sectors in top n labels%0Adf%5B%27sectors_list%27%5D = df%5B%27sectors_list%27%5D.apply%28lambda x%3A %5Btag for tag in x if tag in common_labels%5D%29%0Adf_filtered = df.copy%28%29%5Bdf%5B%27sectors_list%27%5D.str.len%28%29&gt;0%5D%0Adf_filtered.drop%28columns=%27sectors%27%2Cinplace=True%29" isIPythonHidden="True" />
<var name="_i17" type="str" qualifier="builtins" value="y = mlb.fit_transform%28df_filtered%5B%27sectors_list%27%5D%29%0A%0A%23 Split%0Adf_eda%2C df_test%2C y_eda%2C y_test = iter_train_test_split%28%0A    df_filtered%2C y%2C train_size=1-TEST_SET_FRAC%29%0A%0A%0Ay_eda_df = pd.DataFrame%28y_eda%2C columns = mlb.classes_%29" isIPythonHidden="True" />
<var name="_i18" type="str" qualifier="builtins" value="%23 Now let%27s look at the correlations between labels.%0Asns.heatmap%28y_eda_df.corr%28%29%29" isIPythonHidden="True" />
<var name="_i19" type="str" qualifier="builtins" value="%23 Let%27s do a quick analysis of a bunch of statistics from the text columns. %0A%0Adf_eda=df_eda.copy%28%29 %23 Suppress warnings%0Adf_eda%5B%27full_text%27%5D= df_eda%5B%27policy_title%27%5D%2B%27%3A %27%2Bdf_eda%5B%27description_text%27%5D %23 Concat text columns%0A%0Atext_cols=%5B%27description_text%27%2C %27policy_title%27%2C %27full_text%27%5D%0Atext_cols_n_words = %5Bf%27%7Bx%7D_nwords%27 for x in text_cols%5D%0Afor col in text_cols%3A%0A    df_eda%5Bf%27%7Bcol%7D_nwords%27%5D=df_eda%5Bcol%5D.str.split%28%29.str.len%28%29%0A    %0Adef subplot_helper%28cols%3A list%29 -&gt; None%3A%0A    fig=make_subplots%283%2C1%2C subplot_titles=cols%29%0A    for i%2C col in enumerate%28cols%29%3A%0A        trace=go.Histogram%28x=df_eda%5Bcol%5D%29%0A        fig.append_trace%28trace%2C i%2B1%2C1%29%0A    %0A    fig.update_layout%28height=700%2C width=800%29%0A    fig.show%28%29%0A%0Asubplot_helper%28text_cols_n_words%29" isIPythonHidden="True" />
<var name="_i2" type="str" qualifier="builtins" value="from src.sklearn_utils import iter_train_test_split%2C simple_feature_engineering%0Afrom sklearn.ensemble import GradientBoostingClassifier" isIPythonHidden="True" />
<var name="_i20" type="str" qualifier="builtins" value="tokenizer = AutoTokenizer.from_pretrained%28%27distilbert-base-cased%27%29%0Afor col in text_cols%3A%0A    df_eda%5Bf%27%7Bcol%7D_tokens%27%5D=df_eda%5Bcol%5D.apply%28lambda x%3A tokenizer.tokenize%28x%29%29%0A    df_eda%5Bf%27%7Bcol%7D_ntokens%27%5D=df_eda%5Bf%27%7Bcol%7D_tokens%27%5D.str.len%28%29%0A%0Atext_cols_n_tokens = %5Bf%27%7Bx%7D_ntokens%27 for x in text_cols%5D%0Asubplot_helper%28text_cols_n_tokens%29" isIPythonHidden="True" />
<var name="_i21" type="str" qualifier="builtins" value="%23 Let%27s see what happens if we subset the dataset so that it only contains rows with a single label%0A%23 and visualise the separation between classes to get%0Adf_single_label=df_eda%5Bdf_eda%5B%27sectors_list%27%5D.apply%28len%29==1%5D%0AX%2C y = df_single_label%5B%5B%27description_text%27%2C%27policy_title%27%2C%27full_text%27%5D%5D%2C df_single_label%5B%27sectors_list%27%5D.apply%28lambda x%3A x%5B0%5D%29%0AX_train%2C X_test%2C y_train%2C y_test = train_test_split%28%0A     X%2C y%2C test_size=0.33%2C random_state=SEED%29%0A%0Adef tsne_plot%28X_train%2C X_test%2C y_train%2C y_test%2C col%3A str%29%3A%0A    %22%22%22%0A    Helper to plot tsne visualisations on train and test set for a tfidf transformed column.%0A    %22%22%22%0A    tfidf = TfidfVectorizer%28%29%0A    tfidf.fit_transform%28X_train%5Bcol%5D%29%0A    train_features = tfidf.transform%28X_train%5Bcol%5D%29%0A    test_features = tfidf.transform%28X_test%5Bcol%5D%29%0A    tsne_train = TSNEVisualizer%28decompose_by=24%2C title=f%27Train set%3A %7Bcol%7D%27%29%0A    tsne_train.fit%28train_features%2C y_train%29%0A    tsne_train.show%28%29%0A    tsne_test = TSNEVisualizer%28decompose_by=24%2C title=f%27Test set%3A %7Bcol%7D%27%29%0A    ts..." isIPythonHidden="True" />
<var name="_i22" type="str" qualifier="builtins" value="from src.sklearn_utils import TextFeatureEngineering%2C select_col%2C construct_pipeline" isIPythonHidden="True" />
<var name="_i23" type="str" qualifier="builtins" value="X%2C y = df_eda%2C mlb.fit_transform%28df_eda%5B%27sectors_list%27%5D%29" isIPythonHidden="True" />
<var name="_i24" type="str" qualifier="builtins" value="import wandb%0Awandb.init%28project=%22climate-multi-label-classification%22%2C entity=%22stefl14%22%29" isIPythonHidden="True" />
<var name="_i25" type="str" qualifier="builtins" value="def select_col%28df%2C col=%27full_text%27%29%3A %23 lambda%27s not picklable%2C hence this one liner.%0A    return df%5Bcol%5D%0A%0Afull_pipe_rf=construct_pipeline%28%29%0Afull_pipe_gb=construct_pipeline%28clf=GradientBoostingClassifier%28%29%29%0A%0A%23 cv_score=cross_val_score%28full_pipe_rf%2C X%2C y%2C scoring=make_scorer%28hamming_loss%29%2C cv=5%2C error_score=%27raise%27%29%0A%23%0A%23 %23 fit full_pipe and log the results.%0A%23 full_pipe_rf.fit%28X%2C y%29%0A%23 wandb.log%28%7B%27cv_score%27%3A cv_score.mean%28%29%2C %27cv_std%27%3A cv_score.std%28%29%7D%29" isIPythonHidden="True" />
<var name="_i26" type="str" qualifier="builtins" value="full_pipe_rf.get_params%28%29" isIPythonHidden="True" />
<var name="_i3" type="str" qualifier="builtins" value="import pandas as pd%0Aimport numpy as np%0Aimport os%0Aimport plotly.express as px%0Afrom skmultilearn.model_selection import IterativeStratification%0Afrom sklearn.model_selection import train_test_split%0Afrom sklearn.preprocessing import MultiLabelBinarizer%0Afrom sklearn.dummy import DummyClassifier%0Afrom sklearn.metrics import hamming_loss%0Aimport seaborn as sns%0A%0Afrom sklearn.feature_extraction.text import TfidfVectorizer%0A%0Afrom yellowbrick.text import TSNEVisualizer%0Afrom yellowbrick.datasets import load_hobbies%0A%23 import tensorflow_addons as tfa%0Afrom sklearn.metrics import hamming_loss%0A%0Afrom skmultilearn.problem_transform import ClassifierChain%0Afrom sklearn.metrics import hamming_loss%2C accuracy_score%2C make_scorer%0Afrom sklearn.feature_extraction.text import CountVectorizer%2C TfidfVectorizer%0Afrom sklearn.naive_bayes import MultinomialNB%0Afrom sklearn.pipeline import Pipeline%0Afrom sklearn.linear_model import Lasso%0Afrom sklearn.model_selection import cross_val_score%0Afrom datetime import time%0A%0Afrom trans..." isIPythonHidden="True" />
<var name="_i4" type="str" qualifier="builtins" value="def create_tokenized_ds%28%0A    X%2C y%2C text_column=%22description_text%22%2C model_name=%22bert-base-cased%22%2C batch_size=16%0A%29%3A%0A    y = np.array%28y%2C dtype=%22int32%22%29%0A    X = X%5Btext_column%5D%0A    tokens = tokenizer%28%0A        list%28X%29%2C%0A        padding=%22max_length%22%2C%0A        truncation=True%2C%0A        return_tensors=%22tf%22%2C%0A        return_token_type_ids=False%2C%0A    %29%0A    tokens_w_labels = tokens.copy%28%29%0A    tokens_w_labels%5B%22target%22%5D = y%0A    tf_dataset = tf.data.Dataset.from_tensor_slices%28%28dict%28tokens_w_labels%29%2C y%29%29%0A    tf_dataset = tf_dataset.shuffle%28len%28tf_dataset%29%29.batch%28batch_size%29%0A    return tf_dataset%0A%0A%0Aimport keras%0A%0AK = keras.backend%0A%0A%0Aclass ExponentialLearningRate%28keras.callbacks.Callback%29%3A%0A    def __init__%28self%2C factor%29%3A%0A        self.factor = factor%0A        self.rates = %5B%5D%0A        self.losses = %5B%5D%0A%0A    def on_batch_end%28self%2C batch%2C logs%29%3A%0A        self.rates.append%28K.get_value%28self.model.optimizer.learning_rate%29%29%0A        self.losses.append%28logs%5B%22loss%22%5D%29%0A        K.set_value%28%0A            self.model.optimizer.le..." isIPythonHidden="True" />
<var name="_i5" type="str" qualifier="builtins" value="os.getcwd%28%29" isIPythonHidden="True" />
<var name="_i6" type="str" qualifier="builtins" value="%23 Constants%0ASEED=42%0AHOLD_OUT_PERCENTAGE=10%0AITERATIVE_STRAT_ORDER=1%0AKEEP_MOST_COMMON_LABELS=10%0ABATCH_SIZE=16%0ATRAIN_FRACTION=0.9%0AHUGGINGFACE_CONFIG=%27distilbert-base-cased%27%0ATEST_SET_FRAC=.1" isIPythonHidden="True" />
<var name="_i7" type="str" qualifier="builtins" value="data_path = Path%28os.path.abspath%28%27%27%29%29.parent / %27data%27 / %27recruitment-task_1-full.csv%27%0A%0Adf=pd.read_csv%28%27/home/stefan/PycharmProjects/multi-label-classification-climate/data/recruitment-task_1-full.csv%27%29%0Adf.head%28%29" isIPythonHidden="True" />
<var name="_i8" type="str" qualifier="builtins" value="df.info%28%29" isIPythonHidden="True" />
<var name="_i9" type="str" qualifier="builtins" value="%23 Parse labels into a list.%0Adf%5B%27sectors_list%27%5D=df%5B%27sectors%27%5D.str.split%28%22%3B%22%29%0Adf=df%5B~df.description_text.duplicated%28%29%5D %23 Found a duplicated entry" isIPythonHidden="True" />
<var name="_ih" type="list" qualifier="builtins" value="%5B%27%27%2C %22import sys%5Cn%5Cn%5Cn%5Cnget_ipython%28%29.run_line_magic%28%27load_ext%27%2C %27autoreload%27%29%5Cnget_ipython%28%29.run_line_magic%28%27autoreload%27%2C %272%27%29%22%2C %27from src.sklearn_utils import iter_train_test_split%2C simple_feature_engineering%5Cnfrom sklearn.ensemble import GradientBoostingClassifier%27%2C %27import pandas as pd%5Cnimport numpy as np%5Cnimport os%5Cnimport plotly.express as px%5Cnfrom skmultilearn.model_selection import IterativeStratification%5Cnfrom sklearn.model_selection import train_test_split%5Cnfrom sklearn.preprocessing import MultiLabelBinarizer%5Cnfrom sklearn.dummy import DummyClassifier%5Cnfrom sklearn.metrics import hamming_loss%5Cnimport seaborn as sns%5Cn%5Cnfrom sklearn.feature_extraction.text import TfidfVectorizer%5Cn%5Cnfrom yellowbrick.text import TSNEVisualizer%5Cnfrom yellowbrick.datasets import load_hobbies%5Cn%23 import tensorflow_addons as tfa%5Cnfrom sklearn.metrics import hamming_loss%5Cn%5Cnfrom skmultilearn.problem_transform import ClassifierChain%5Cnfrom sklearn.metrics import hamming_loss%2C accuracy_score%2C make_scorer..." isContainer="True" shape="27" isIPythonHidden="True" />
<var name="_ii" type="str" qualifier="builtins" value="import wandb%0Awandb.init%28project=%22climate-multi-label-classification%22%2C entity=%22stefl14%22%29" isIPythonHidden="True" />
<var name="_iii" type="str" qualifier="builtins" value="X%2C y = df_eda%2C mlb.fit_transform%28df_eda%5B%27sectors_list%27%5D%29" isIPythonHidden="True" />
<var name="_oh" type="dict" qualifier="builtins" value="%7B5%3A %27/home/stefan/PycharmProjects/multi-label-classification-climate/notebooks%27%2C 7%3A    policy_id                       policy_title  %5C%0A0      10088     Circular economy promotion law   %0A1      10087                14th Five-Year Plan   %0A2      10046             National Forest Policy   %0A3      10044   Suriname National REDD%2B Strategy   %0A4      10042  Policy Development Plan 2017-2021   %0A%0A                                             sectors  %5C%0A0                  Industry%3BAgriculture%3BEconomy-wide   %0A1  Transportation%3BRural%3BLULUCF%3BEnergy%3BEconomy-wid...   %0A2                                             LULUCF   %0A3                                             LULUCF   %0A4                                       Economy-wide   %0A%0A                                    description_text  %0A0  This law promotes the development of a circula...  %0A1  The 14th Five Year Plan lays down the strategy...  %0A2  This document aims at protecting the country%27s...  %0A3  This document aims to protect Suriname%27s fores......" isContainer="True" shape="10" isIPythonHidden="True" />
<var name="_pydevd_bundle" type="module" qualifier="builtins" value="%3Cmodule %27_pydevd_bundle%27 from %27/snap/pycharm-professional/290/plugins/python/helpers/pydev/_pydevd_bundle/__init__.py%27&gt;" isContainer="True" />
<var name="accuracy_score" type="function" qualifier="builtins" value="%3Cfunction accuracy_score at 0x7fdf48fbb8b0&gt;" isContainer="True" />
<var name="col" type="str" qualifier="builtins" value="full_text" />
<var name="common_labels" type="Index" qualifier="pandas.core.indexes.base" value="Index%28%5B%27Energy%27%2C %27Transportation%27%2C %27LULUCF%27%2C %27Economy-wide%27%2C%0A       %27Residential and Commercial%27%2C %27Agriculture%27%2C %27Water%27%2C %27Industry%27%2C%0A       %27Waste%27%2C %27Health%27%5D%2C%0A      dtype=%27object%27%29" isContainer="True" shape="(10,)" />
<var name="construct_pipeline" type="function" qualifier="builtins" value="%3Cfunction construct_pipeline at 0x7fdf1be14a60&gt;" isContainer="True" />
<var name="create_tokenized_ds" type="function" qualifier="builtins" value="%3Cfunction create_tokenized_ds at 0x7fdf196f1790&gt;" isContainer="True" />
<var name="cross_val_score" type="function" qualifier="builtins" value="%3Cfunction cross_val_score at 0x7fdf48eb9b80&gt;" isContainer="True" />
<var name="cumulative_sum" type="Series" qualifier="pandas.core.series" value="%28%27Energy%27%2C 1143%29 %28%27Transportation%27%2C 1904%29 %28%27LULUCF%27%2C 2302%29 %28%27Economy-wide%27%2C 2668%29 %28%27Residential and Commercial%27%2C 3019%29 %28%27Agriculture%27%2C 3324%29 %28%27Water%27%2C 3621%29 %28%27Industry%27%2C 3859%29 %28%27Waste%27%2C 4036%29 %28%27Health%27%2C 4194%29 %28%27Environment%27%2C 4321%29 %28%27Urban%27%2C 4394%29 %28%27Buildings%27%2C 4459%29 %28%27Tourism%27%2C 4511%29 %28%27Social development%27%2C 4556%29 %28%27Disaster Risk Management %28Drm%29%27%2C 4589%29 %28%27Coastal zones%27%2C 4617%29 %28%27Rural%27%2C 4636%29 %28%27Adaptation%27%2C 4647%29 %28%27Cross Cutting Area%27%2C 4656%29 %28%27Public Sector%27%2C 4664%29 %28%27Other%27%2C 4670%29 %28%27Finance%27%2C 4675%29" isContainer="True" shape="(23,)" />
<var name="data_path" type="PosixPath" qualifier="pathlib" value="/home/stefan/PycharmProjects/multi-label-classification-climate/data/recruitment-task_1-full.csv" isContainer="True" />
<var name="df" type="DataFrame" qualifier="pandas.core.frame" value="policy_id                                       policy_title  %5C %5B0         10088                     Circular economy promotion law   %5D %5B1         10087                                14th Five-Year Plan   %5D %5B2         10046                             National Forest Policy   %5D %5B3         10044                   Suriname National REDD%2B Strategy   %5D %5B4         10042                  Policy Development Plan 2017-2021   %5D %5B...         ...                                                ...   %5D %5B1955       8835  National Climate Change Strategy and Action Pl...   %5D %5B1956       9110                 National Policy for Climate Change   %5D %5B1957       9191  Presidential Decree 7/2019 establishing the na...   %5D %5B1958       8889  Act No. 28 of 1972 concerning nuclear energy a...   %5D %5B1959       8887  Natural Hazards Compensation Act %28No. 59 of 2014%29   %5D %5B%5D %5B                                                sectors  %5C%5D %5B0                     Industry%3BAgriculture%3BEconomy-wide   %5D %5B1     Transportation%3BRural%3BLULUCF%3BEnergy%3B...%5D" isContainer="True" shape="(1959, 5)" />
<var name="df_eda" type="DataFrame" qualifier="pandas.core.frame" value="policy_id                                       policy_title  %5C %5B0         10088                     Circular economy promotion law   %5D %5B3         10044                   Suriname National REDD%2B Strategy   %5D %5B5         10049                               Energy Strategy 2050   %5D %5B6         10051                   Long-Term Climate Strategy%2C 2021   %5D %5B9         10054  Environmentally Sustainable Transport System P...   %5D %5B...         ...                                                ...   %5D %5B1955       8835  National Climate Change Strategy and Action Pl...   %5D %5B1956       9110                 National Policy for Climate Change   %5D %5B1957       9191  Presidential Decree 7/2019 establishing the na...   %5D %5B1958       8889  Act No. 28 of 1972 concerning nuclear energy a...   %5D %5B1959       8887  Natural Hazards Compensation Act %28No. 59 of 2014%29   %5D %5B%5D %5B                                       description_text  %5C%5D %5B0     This law promotes the development of a circula...   %5D %5B3     This document aims to protect Surin...%5D" isContainer="True" shape="(1680, 14)" />
<var name="df_filtered" type="DataFrame" qualifier="pandas.core.frame" value="policy_id                                       policy_title  %5C %5B0         10088                     Circular economy promotion law   %5D %5B1         10087                                14th Five-Year Plan   %5D %5B2         10046                             National Forest Policy   %5D %5B3         10044                   Suriname National REDD%2B Strategy   %5D %5B4         10042                  Policy Development Plan 2017-2021   %5D %5B...         ...                                                ...   %5D %5B1955       8835  National Climate Change Strategy and Action Pl...   %5D %5B1956       9110                 National Policy for Climate Change   %5D %5B1957       9191  Presidential Decree 7/2019 establishing the na...   %5D %5B1958       8889  Act No. 28 of 1972 concerning nuclear energy a...   %5D %5B1959       8887  Natural Hazards Compensation Act %28No. 59 of 2014%29   %5D %5B%5D %5B                                       description_text  %5C%5D %5B0     This law promotes the development of a circula...   %5D %5B1     The 14th Five Year Plan lays down t...%5D" isContainer="True" shape="(1879, 4)" />
<var name="df_labels" type="DataFrame" qualifier="pandas.core.frame" value="num_labels  cumulative_positive_labels  %5C %5BEnergy                                1143                        1143   %5D %5BTransportation                         761                        1904   %5D %5BLULUCF                                 398                        2302   %5D %5BEconomy-wide                           366                        2668   %5D %5BResidential and Commercial             351                        3019   %5D %5BAgriculture                            305                        3324   %5D %5BWater                                  297                        3621   %5D %5BIndustry                               238                        3859   %5D %5BWaste                                  177                        4036   %5D %5BHealth                                 158                        4194   %5D %5BEnvironment                            127                        4321   %5D %5BUrban                                   73                        4394   %5D %5BBuildings                             ...%5D" isContainer="True" shape="(23, 3)" />
<var name="df_single_label" type="DataFrame" qualifier="pandas.core.frame" value="policy_id                                       policy_title  %5C %5B3         10044                   Suriname National REDD%2B Strategy   %5D %5B5         10049                               Energy Strategy 2050   %5D %5B6         10051                   Long-Term Climate Strategy%2C 2021   %5D %5B9         10054  Environmentally Sustainable Transport System P...   %5D %5B10        10061  Uganda Green Growth Development Strategy 2017/...   %5D %5B...         ...                                                ...   %5D %5B1950       8704  National Strategy for Adaptation to Climate Ch...   %5D %5B1953       8766  Priority Framework for Action%3A Climate Change ...   %5D %5B1956       9110                 National Policy for Climate Change   %5D %5B1958       8889  Act No. 28 of 1972 concerning nuclear energy a...   %5D %5B1959       8887  Natural Hazards Compensation Act %28No. 59 of 2014%29   %5D %5B%5D %5B                                       description_text      sectors_list  %5C%5D %5B3     This document aims to protect Suriname%27s fores...          %5BLULUCF%5D   %5D %5B5    ...%5D" isContainer="True" shape="(752, 14)" />
<var name="df_test" type="DataFrame" qualifier="pandas.core.frame" value="policy_id                                       policy_title  %5C %5B1        10087                                14th Five-Year Plan   %5D %5B2        10046                             National Forest Policy   %5D %5B4        10042                  Policy Development Plan 2017-2021   %5D %5B7        10052                 Switzerland%E2%80%99s climate policy%2C 2018   %5D %5B8        10053       Smart Grid Development Master Plan 2015-2036   %5D %5B..         ...                                                ...   %5D %5B549       9133                     Law No. 293-Z on energy saving   %5D %5B552       9045                  Law No. 1136-XIV on energy saving   %5D %5B588       8784  Industrial Sector Plan for mitigation and Adap...   %5D %5B616       8687                              Pollution Control Act   %5D %5B760       4313          Second National Environmental Action Plan   %5D %5B%5D %5B                                      description_text  %5C%5D %5B1    The 14th Five Year Plan lays down the strategy...   %5D %5B2    This document aims at protecting the country%27s... ...%5D" isContainer="True" shape="(199, 4)" />
<var name="exit" type="ZMQExitAutocall" qualifier="IPython.core.autocall" value="%3CIPython.core.autocall.ZMQExitAutocall object at 0x7fdf59b7a1c0&gt;" isContainer="True" isIPythonHidden="True" />
<var name="fraction_dataset_covered" type="Series" qualifier="pandas.core.series" value="%28%27Energy%27%2C 0.24449197860962568%29 %28%27Transportation%27%2C 0.4072727272727273%29 %28%27LULUCF%27%2C 0.4924064171122995%29 %28%27Economy-wide%27%2C 0.5706951871657754%29 %28%27Residential and Commercial%27%2C 0.6457754010695187%29 %28%27Agriculture%27%2C 0.7110160427807487%29 %28%27Water%27%2C 0.7745454545454545%29 %28%27Industry%27%2C 0.8254545454545454%29 %28%27Waste%27%2C 0.8633155080213903%29 %28%27Health%27%2C 0.8971122994652406%29 %28%27Environment%27%2C 0.9242780748663102%29 %28%27Urban%27%2C 0.9398930481283423%29 %28%27Buildings%27%2C 0.9537967914438503%29 %28%27Tourism%27%2C 0.9649197860962567%29 %28%27Social development%27%2C 0.9745454545454545%29 %28%27Disaster Risk Management %28Drm%29%27%2C 0.9816042780748663%29 %28%27Coastal zones%27%2C 0.9875935828877005%29 %28%27Rural%27%2C 0.9916577540106952%29 %28%27Adaptation%27%2C 0.9940106951871658%29 %28%27Cross Cutting Area%27%2C 0.9959358288770054%29 %28%27Public Sector%27%2C 0.9976470588235294%29 %28%27Other%27%2C 0.9989304812834224%29 %28%27Finance%27%2C 1.0%29" isContainer="True" shape="(23,)" />
<var name="full_pipe_gb" type="Pipeline" qualifier="sklearn.pipeline" value="Pipeline%28steps=%5B%28%27features%27%2C%0A                 FeatureUnion%28transformer_list=%5B%28%27pipeline_text%27%2C%0A                                                 Pipeline%28steps=%5B%28%27select_text_col%27%2C%0A                                                                  FunctionTransformer%28func=%3Cfunction select_col at 0x7fdf1be14310&gt;%29%29%2C%0A                                                                 %28%27tfidf%27%2C%0A                                                                  TfidfVectorizer%28lowercase=False%2C%0A                                                                                  max_df=0.5%2C%0A                                                                                  stop_words=%27english%27%29%29%5D%29%29%2C%0A                                                %28%27feature_engineering%27%2C%0A                                                 TextFeatureEngineering%28%29%29%5D%29%29%2C%0A                %28%27clf%27%2C%0A                 ClassifierChain%28classifier=GradientBoostingClassifier%28%29%2C%0A                                 require_dense=%5BTrue%2C True%5D%29..." isContainer="True" shape="2" />
<var name="full_pipe_rf" type="Pipeline" qualifier="sklearn.pipeline" value="Pipeline%28steps=%5B%28%27features%27%2C%0A                 FeatureUnion%28transformer_list=%5B%28%27pipeline_text%27%2C%0A                                                 Pipeline%28steps=%5B%28%27select_text_col%27%2C%0A                                                                  FunctionTransformer%28func=%3Cfunction select_col at 0x7fdf1be14310&gt;%29%29%2C%0A                                                                 %28%27tfidf%27%2C%0A                                                                  TfidfVectorizer%28lowercase=False%2C%0A                                                                                  max_df=0.5%2C%0A                                                                                  stop_words=%27english%27%29%29%5D%29%29%2C%0A                                                %28%27feature_engineering%27%2C%0A                                                 TextFeatureEngineering%28%29%29%5D%29%29%2C%0A                %28%27clf%27%2C%0A                 ClassifierChain%28classifier=RandomForestClassifier%28%29%2C%0A                                 require_dense=%5BTrue%2C True%5D%29%29%5D%29" isContainer="True" shape="2" />
<var name="get_ipython" type="method" qualifier="builtins" value="%3Cbound method InteractiveShell.get_ipython of %3Cipykernel.zmqshell.ZMQInteractiveShell object at 0x7fdf59b5e520&gt;&gt;" isContainer="True" isIPythonHidden="True" />
<var name="go" type="module" qualifier="builtins" value="%3Cmodule %27plotly.graph_objects%27 from %27/home/stefan/anaconda3/envs/multi-label-classification-climate/lib/python3.9/site-packages/plotly/graph_objects/__init__.py%27&gt;" isContainer="True" />
<var name="hamming_loss" type="function" qualifier="builtins" value="%3Cfunction hamming_loss at 0x7fdf48fc2280&gt;" isContainer="True" />
<var name="iter_train_test_split" type="function" qualifier="builtins" value="%3Cfunction iter_train_test_split at 0x7fdf1cce23a0&gt;" isContainer="True" />
<var name="joblib" type="module" qualifier="builtins" value="%3Cmodule %27joblib%27 from %27/home/stefan/anaconda3/envs/multi-label-classification-climate/lib/python3.9/site-packages/joblib/__init__.py%27&gt;" isContainer="True" />
<var name="labels_flattened" type="Series" qualifier="pandas.core.series" value="%280%2C %27Industry%27%29 %280%2C %27Agriculture%27%29 %280%2C %27Economy-wide%27%29 %281%2C %27Transportation%27%29 %281%2C %27Rural%27%29 %281%2C %27LULUCF%27%29 %281%2C %27Energy%27%29 %281%2C %27Economy-wide%27%29 %281%2C %27Agriculture%27%29 %282%2C %27LULUCF%27%29 %283%2C %27LULUCF%27%29 %284%2C %27Economy-wide%27%29 %285%2C %27Energy%27%29 %286%2C %27Economy-wide%27%29 %287%2C %27Economy-wide%27%29 %288%2C %27Energy%27%29 %289%2C %27Transportation%27%29 %2810%2C %27Economy-wide%27%29 %2811%2C %27Economy-wide%27%29 %2812%2C %27Economy-wide%27%29 %2813%2C %27Economy-wide%27%29 %2814%2C %27Economy-wide%27%29 %2815%2C %27Economy-wide%27%29 %2816%2C %27Social development%27%29 %2816%2C %27LULUCF%27%29 %2816%2C %27Economy-wide%27%29 %2817%2C %27Industry%27%29 %2818%2C %27Economy-wide%27%29 %2819%2C %27Agriculture%27%29 %2821%2C %27Energy%27%29 %2821%2C %27Economy-wide%27%29 %2821%2C %27Adaptation%27%29 %2822%2C %27Health%27%29 %2823%2C %27Economy-wide%27%29 %2824%2C %27Economy-wide%27%29 %2825%2C %27Transportation%27%29 %2826%2C %27LULUCF%27%29 %2827%2C %27Economy-wide%27%29 %2828%2C %27Adaptation%27%29 %2829%2C %27Buildings%27%29 %2830%2C %27Tourism%27%29 %2831%2C %27Environment%27%29 %2831%2C %27Energy%27%29 %2831%2C %27Economy-wide%27%29 %2832%2C %27Economy-wide%27%29 %2833%2C %27Transportation%27%29 %2834%2C %27Energy%27%29 %2834%2C %27Economy-wide%27%29 %2835%2C %27Economy-wide%27%29 %2835%2C %27Coastal zones%27%29 %2835%2C %27Adaptation%27%29 %2836%2C %27LULUCF%27%29 %2836%2C %27Energy%27%29 %2836%2C %27Economy-wide%27%29 %2837%2C %27LULUCF%27%29 %2838%2C %27Environment%27%29 %2839%2C %27LULUCF%27%29 %2839%2C %27Energy%27%29 %2840%2C %27Industry%27%29 %2840%2C %27Health%27%29 %2840%2C %27Economy-wide%27%29 %2840%2C %27Coastal zones%27%29 %2840%2C %27Buildings%27%29 %2841%2C %27Urban%27%29 %2841%2C %27Energy%27%29 %2842%2C %27Water%27%29 %2842%2C %27Cross Cutting Area%27%29 %2843%2C %27Economy-wide%27%29 %2844%2C %27Transportation%27%29 %2844%2C %27Public Sector%27%29 %2844%2C %27Buildings%27%29 %2845%2C %27Energy%27%29 %2846%2C %27Urban%27%29 %2846%2C %27LULUCF%27%29 %2846%2C %27Agriculture%27%29 %2847%2C %27Environment%27%29 %2848%2C %27LULUCF%27%29 %2849%2C %27Energy%27%29 %2849%2C %27Economy-wide%27%29 %2850%2C %27Residential and Commercial%27%29 %2850%2C %27Buildings%27%29 %2851%2C %27LULUCF%27%29 %2852%2C %27Economy-wide%27%29 %2853%2C %27Economy-wide%27%29 %2854%2C %27Economy-wide%27%29 %2855%2C %27Energy%27%29 %2856%2C %27Energy%27%29 %2857%2C %27Economy-wide%27%29 %2858%2C %27Economy-wide%27%29 %2859%2C %27Economy-wide%27%29 %2860%2C %27Economy-wide%27%29 %2861%2C %27Economy-wide%27%29 %2862%2C %27Transportation%27%29 %2863%2C %27Economy-wide%27%29 %2864%2C %27Economy-wide%27%29 %2865%2C %27Energy%27%29 %2866%2C %27Energy%27%29 %2867%2C %27Economy-wide%27%29 %2868%2C %27Transportation%27%29 %2869%2C %27Economy-wide%27%29" isContainer="True" shape="(4675,)" />
<var name="load_hobbies" type="function" qualifier="builtins" value="%3Cfunction load_hobbies at 0x7fdf1b790700&gt;" isContainer="True" />
<var name="logger" type="RootLogger" qualifier="logging" value="%3CRootLogger root %28CRITICAL%29&gt;" isContainer="True" />
<var name="logging" type="module" qualifier="builtins" value="%3Cmodule %27logging%27 from %27/home/stefan/anaconda3/envs/multi-label-classification-climate/lib/python3.9/logging/__init__.py%27&gt;" isContainer="True" />
<var name="make_scorer" type="function" qualifier="builtins" value="%3Cfunction make_scorer at 0x7fdf48eac670&gt;" isContainer="True" />
<var name="make_subplots" type="function" qualifier="builtins" value="%3Cfunction make_subplots at 0x7fdf1a24e790&gt;" isContainer="True" />
<var name="math" type="module" qualifier="builtins" value="%3Cmodule %27math%27 from %27/home/stefan/anaconda3/envs/multi-label-classification-climate/lib/python3.9/lib-dynload/math.cpython-39-x86_64-linux-gnu.so%27&gt;" isContainer="True" />
<var name="mlb" type="MultiLabelBinarizer" qualifier="sklearn.preprocessing._label" value="MultiLabelBinarizer%28%29" isContainer="True" />
<var name="n_unique_labels" type="int" qualifier="builtins" value="23" />
<var name="np" type="module" qualifier="builtins" value="%3Cmodule %27numpy%27 from %27/home/stefan/anaconda3/envs/multi-label-classification-climate/lib/python3.9/site-packages/numpy/__init__.py%27&gt;" isContainer="True" />
<var name="num_instances_each_label" type="Series" qualifier="pandas.core.series" value="%28%27Energy%27%2C 1143%29 %28%27Transportation%27%2C 761%29 %28%27LULUCF%27%2C 398%29 %28%27Economy-wide%27%2C 366%29 %28%27Residential and Commercial%27%2C 351%29 %28%27Agriculture%27%2C 305%29 %28%27Water%27%2C 297%29 %28%27Industry%27%2C 238%29 %28%27Waste%27%2C 177%29 %28%27Health%27%2C 158%29 %28%27Environment%27%2C 127%29 %28%27Urban%27%2C 73%29 %28%27Buildings%27%2C 65%29 %28%27Tourism%27%2C 52%29 %28%27Social development%27%2C 45%29 %28%27Disaster Risk Management %28Drm%29%27%2C 33%29 %28%27Coastal zones%27%2C 28%29 %28%27Rural%27%2C 19%29 %28%27Adaptation%27%2C 11%29 %28%27Cross Cutting Area%27%2C 9%29 %28%27Public Sector%27%2C 8%29 %28%27Other%27%2C 6%29 %28%27Finance%27%2C 5%29" isContainer="True" shape="(23,)" />
<var name="os" type="module" qualifier="builtins" value="%3Cmodule %27os%27 from %27/home/stefan/anaconda3/envs/multi-label-classification-climate/lib/python3.9/os.py%27&gt;" isContainer="True" />
<var name="pd" type="module" qualifier="builtins" value="%3Cmodule %27pandas%27 from %27/home/stefan/anaconda3/envs/multi-label-classification-climate/lib/python3.9/site-packages/pandas/__init__.py%27&gt;" isContainer="True" />
<var name="plt" type="module" qualifier="builtins" value="%3Cmodule %27matplotlib.pyplot%27 from %27/home/stefan/anaconda3/envs/multi-label-classification-climate/lib/python3.9/site-packages/matplotlib/pyplot.py%27&gt;" isContainer="True" />
<var name="px" type="module" qualifier="builtins" value="%3Cmodule %27plotly.express%27 from %27/home/stefan/anaconda3/envs/multi-label-classification-climate/lib/python3.9/site-packages/plotly/express/__init__.py%27&gt;" isContainer="True" />
<var name="pydev_jupyter_vars" type="module" qualifier="builtins" value="%3Cmodule %27pydev_jupyter_vars%27 from %27/snap/pycharm-professional/290/plugins/python/helpers-pro/jupyter_debug/pydev_jupyter_vars.py%27&gt;" isContainer="True" />
<var name="quit" type="ZMQExitAutocall" qualifier="IPython.core.autocall" value="%3CIPython.core.autocall.ZMQExitAutocall object at 0x7fdf59b7a1c0&gt;" isContainer="True" isIPythonHidden="True" />
<var name="remove_imported_pydev_package" type="function" qualifier="builtins" value="%3Cfunction remove_imported_pydev_package at 0x7fdf1cd905e0&gt;" isContainer="True" />
<var name="select_col" type="function" qualifier="builtins" value="%3Cfunction select_col at 0x7fdeab42f0d0&gt;" isContainer="True" />
<var name="simple_feature_engineering" type="function" qualifier="builtins" value="%3Cfunction simple_feature_engineering at 0x7fdf1cb21af0&gt;" isContainer="True" />
<var name="sns" type="module" qualifier="builtins" value="%3Cmodule %27seaborn%27 from %27/home/stefan/anaconda3/envs/multi-label-classification-climate/lib/python3.9/site-packages/seaborn/__init__.py%27&gt;" isContainer="True" />
<var name="subplot_helper" type="function" qualifier="builtins" value="%3Cfunction subplot_helper at 0x7fdf0eee9f70&gt;" isContainer="True" />
<var name="sys" type="module" qualifier="builtins" value="%3Cmodule %27sys%27 %28built-in%29&gt;" isContainer="True" />
<var name="text_cols" type="list" qualifier="builtins" value="%5B%27description_text%27%2C %27policy_title%27%2C %27full_text%27%5D" isContainer="True" shape="3" />
<var name="text_cols_n_tokens" type="list" qualifier="builtins" value="%5B%27description_text_ntokens%27%2C %27policy_title_ntokens%27%2C %27full_text_ntokens%27%5D" isContainer="True" shape="3" />
<var name="text_cols_n_words" type="list" qualifier="builtins" value="%5B%27description_text_nwords%27%2C %27policy_title_nwords%27%2C %27full_text_nwords%27%5D" isContainer="True" shape="3" />
<var name="time" type="type" qualifier="builtins" value="%3Cclass %27datetime.time%27&gt;" isContainer="True" />
<var name="tokenizer" type="DistilBertTokenizerFast" qualifier="transformers.models.distilbert.tokenization_distilbert_fast" value="PreTrainedTokenizerFast%28name_or_path=%27distilbert-base-cased%27%2C vocab_size=28996%2C model_max_len=512%2C is_fast=True%2C padding_side=%27right%27%2C truncation_side=%27right%27%2C special_tokens=%7B%27unk_token%27%3A %27%5BUNK%5D%27%2C %27sep_token%27%3A %27%5BSEP%5D%27%2C %27pad_token%27%3A %27%5BPAD%5D%27%2C %27cls_token%27%3A %27%5BCLS%5D%27%2C %27mask_token%27%3A %27%5BMASK%5D%27%7D%29" isContainer="True" shape="28996" />
<var name="total_positive_labels" type="int64" qualifier="numpy" value="4675" isContainer="True" shape="()" />
<var name="train_test_split" type="function" qualifier="builtins" value="%3Cfunction train_test_split at 0x7fdf1c8fb790&gt;" isContainer="True" />
<var name="tsne_plot" type="function" qualifier="builtins" value="%3Cfunction tsne_plot at 0x7fdf195f7dc0&gt;" isContainer="True" />
<var name="underrepresented_labels" type="Index" qualifier="pandas.core.indexes.base" value="Index%28%5B%27Urban%27%2C %27Buildings%27%2C %27Tourism%27%2C %27Social development%27%2C%0A       %27Disaster Risk Management %28Drm%29%27%2C %27Coastal zones%27%2C %27Rural%27%2C%0A       %27Adaptation%27%2C %27Cross Cutting Area%27%2C %27Public Sector%27%2C %27Other%27%2C%0A       %27Finance%27%5D%2C%0A      dtype=%27object%27%29" isContainer="True" shape="(12,)" />
<var name="unique_labels" type="ndarray" qualifier="numpy" value="%5B%27Industry%27 %27Agriculture%27 %27Economy-wide%27 %27Transportation%27 %27Rural%27 %27LULUCF%27%2C %27Energy%27 %27Social development%27 %27Adaptation%27 %27Health%27 %27Buildings%27 %27Tourism%27%2C %27Environment%27 %27Coastal zones%27 %27Urban%27 %27Water%27 %27Cross Cutting Area%27%2C %27Public Sector%27 %27Residential and Commercial%27 %27Finance%27 %27Waste%27 %27Other%27%2C %27Disaster Risk Management %28Drm%29%27%5D" isContainer="True" shape="(23,)" />
<var name="wandb" type="module" qualifier="builtins" value="%3Cmodule %27wandb%27 from %27/home/stefan/anaconda3/envs/multi-label-classification-climate/lib/python3.9/site-packages/wandb/__init__.py%27&gt;" isContainer="True" />
<var name="y" type="ndarray" qualifier="numpy" value="%5B%5B1 1 0 0 1 0 0 0 0 0%5D%2C %5B0 0 0 0 0 1 0 0 0 0%5D%2C %5B0 0 1 0 0 0 0 0 0 0%5D%2C %5B0 1 0 0 0 0 0 0 0 0%5D%2C %5B0 0 0 0 0 0 0 1 0 0%5D%2C %5B0 1 0 0 0 0 0 0 0 0%5D%2C %5B0 1 0 0 0 0 0 0 0 0%5D%2C %5B0 1 0 0 0 0 0 0 0 0%5D%2C %5B0 1 0 0 0 1 0 0 0 0%5D%2C %5B1 0 0 0 0 0 0 0 0 0%5D%2C %5B0 1 1 0 0 0 0 0 0 0%5D%2C %5B0 1 0 0 0 0 0 0 0 0%5D%2C %5B0 1 1 0 0 0 0 0 0 0%5D%2C %5B0 0 0 0 0 0 0 1 0 0%5D%2C %5B0 1 1 0 0 0 0 0 0 0%5D%2C %5B0 1 1 0 0 1 0 0 0 0%5D%2C %5B0 0 0 0 0 1 0 0 0 0%5D%2C %5B0 0 1 0 0 1 0 0 0 0%5D%2C %5B0 0 0 0 0 0 0 0 0 1%5D%2C %5B0 1 0 0 0 0 0 0 0 0%5D%2C %5B0 0 1 0 0 0 0 0 0 0%5D%2C %5B0 0 0 0 0 0 1 0 0 0%5D%2C %5B0 0 0 0 0 1 0 0 0 0%5D%2C %5B0 1 0 0 0 0 0 0 0 0%5D%2C %5B0 1 0 0 0 0 0 0 0 0%5D%2C %5B0 0 1 0 0 0 0 0 0 0%5D%2C %5B0 1 0 0 0 0 0 0 0 0%5D%2C %5B0 1 0 0 0 0 0 0 0 0%5D%2C %5B0 0 0 0 0 0 0 1 0 0%5D%2C %5B0 1 0 0 0 0 0 0 0 0%5D%2C %5B0 0 1 0 0 0 0 0 0 0%5D%2C %5B0 1 0 0 0 0 0 0 0 0%5D%2C %5B0 1 0 0 0 0 0 0 0 0%5D%2C %5B0 0 1 0 0 0 0 0 0 0%5D%2C %5B0 1 0 0 0 0 0 0 0 0%5D%2C %5B0 0 1 0 0 0 0 0 0 0%5D%2C %5B0 1 0 0 0 0 0 0 0 0%5D%2C %5B0 1 1 0 0 0 0 0 0 0%5D%2C %5B0 0 1 0 0 0 0 0 0 0%5D%2C %5B0 0 1 0 0 0 0 0 0 0%5D%2C %5B0 0 1 0 0 0 0 1 0 0%5D%2C %5B0 0 1 0 0 0 0 0 0 0%5D%2C %5B0 0 1 0 0 0 1 1 0 0%5D%2C %5B1 0 0 0 0..." isContainer="True" shape="(1680, 10)" />
<var name="y_eda" type="ndarray" qualifier="numpy" value="%5B%5B1 1 0 0 1 0 0 0 0 0%5D%2C %5B0 0 0 0 0 1 0 0 0 0%5D%2C %5B0 0 1 0 0 0 0 0 0 0%5D%2C %5B0 1 0 0 0 0 0 0 0 0%5D%2C %5B0 0 0 0 0 0 0 1 0 0%5D%2C %5B0 1 0 0 0 0 0 0 0 0%5D%2C %5B0 1 0 0 0 0 0 0 0 0%5D%2C %5B0 1 0 0 0 0 0 0 0 0%5D%2C %5B0 1 0 0 0 1 0 0 0 0%5D%2C %5B1 0 0 0 0 0 0 0 0 0%5D%2C %5B0 1 1 0 0 0 0 0 0 0%5D%2C %5B0 1 0 0 0 0 0 0 0 0%5D%2C %5B0 1 1 0 0 0 0 0 0 0%5D%2C %5B0 0 0 0 0 0 0 1 0 0%5D%2C %5B0 1 1 0 0 0 0 0 0 0%5D%2C %5B0 1 1 0 0 1 0 0 0 0%5D%2C %5B0 0 0 0 0 1 0 0 0 0%5D%2C %5B0 0 1 0 0 1 0 0 0 0%5D%2C %5B0 0 0 0 0 0 0 0 0 1%5D%2C %5B0 1 0 0 0 0 0 0 0 0%5D%2C %5B0 0 1 0 0 0 0 0 0 0%5D%2C %5B0 0 0 0 0 0 1 0 0 0%5D%2C %5B0 0 0 0 0 1 0 0 0 0%5D%2C %5B0 1 0 0 0 0 0 0 0 0%5D%2C %5B0 1 0 0 0 0 0 0 0 0%5D%2C %5B0 0 1 0 0 0 0 0 0 0%5D%2C %5B0 1 0 0 0 0 0 0 0 0%5D%2C %5B0 1 0 0 0 0 0 0 0 0%5D%2C %5B0 0 0 0 0 0 0 1 0 0%5D%2C %5B0 1 0 0 0 0 0 0 0 0%5D%2C %5B0 0 1 0 0 0 0 0 0 0%5D%2C %5B0 1 0 0 0 0 0 0 0 0%5D%2C %5B0 1 0 0 0 0 0 0 0 0%5D%2C %5B0 0 1 0 0 0 0 0 0 0%5D%2C %5B0 1 0 0 0 0 0 0 0 0%5D%2C %5B0 0 1 0 0 0 0 0 0 0%5D%2C %5B0 1 0 0 0 0 0 0 0 0%5D%2C %5B0 1 1 0 0 0 0 0 0 0%5D%2C %5B0 0 1 0 0 0 0 0 0 0%5D%2C %5B0 0 1 0 0 0 0 0 0 0%5D%2C %5B0 0 1 0 0 0 0 1 0 0%5D%2C %5B0 0 1 0 0 0 0 0 0 0%5D%2C %5B0 0 1 0 0 0 1 1 0 0%5D%2C %5B1 0 0 0 0..." isContainer="True" shape="(1680, 10)" />
<var name="y_eda_df" type="DataFrame" qualifier="pandas.core.frame" value="Agriculture  Economy-wide  Energy  Health  Industry  LULUCF  %5C %5B0               1             1       0       0         1       0   %5D %5B1               0             0       0       0         0       1   %5D %5B2               0             0       1       0         0       0   %5D %5B3               0             1       0       0         0       0   %5D %5B4               0             0       0       0         0       0   %5D %5B...           ...           ...     ...     ...       ...     ...   %5D %5B1675            0             0       1       1         0       0   %5D %5B1676            0             0       0       0         0       0   %5D %5B1677            0             0       1       0         0       1   %5D %5B1678            0             0       1       0         0       0   %5D %5B1679            0             0       0       0         0       0   %5D %5B%5D %5B      Residential and Commercial  Transportation  Waste  Water  %5D %5B0                              0               0      0      0  %5D %5B1                              0         ...%5D" isContainer="True" shape="(1680, 10)" />
<var name="y_test" type="Series" qualifier="pandas.core.series" value="%281497%2C %27Energy%27%29 %281517%2C %27Economy-wide%27%29 %281244%2C %27Energy%27%29 %28249%2C %27Transportation%27%29 %28698%2C %27Energy%27%29 %281002%2C %27Economy-wide%27%29 %281757%2C %27Transportation%27%29 %28765%2C %27Energy%27%29 %281958%2C %27Energy%27%29 %281738%2C %27Economy-wide%27%29 %281091%2C %27Energy%27%29 %28893%2C %27Energy%27%29 %281328%2C %27LULUCF%27%29 %281869%2C %27Energy%27%29 %281257%2C %27Economy-wide%27%29 %28398%2C %27Transportation%27%29 %281326%2C %27Energy%27%29 %281550%2C %27Transportation%27%29 %28375%2C %27LULUCF%27%29 %28666%2C %27Energy%27%29 %281201%2C %27Energy%27%29 %281010%2C %27Energy%27%29 %281570%2C %27Transportation%27%29 %281199%2C %27Energy%27%29 %28979%2C %27Energy%27%29 %28112%2C %27Energy%27%29 %281928%2C %27Economy-wide%27%29 %28697%2C %27Residential and Commercial%27%29 %281112%2C %27Energy%27%29 %28583%2C %27LULUCF%27%29 %28484%2C %27Residential and Commercial%27%29 %281059%2C %27Energy%27%29 %281908%2C %27Energy%27%29 %28708%2C %27Economy-wide%27%29 %281953%2C %27Agriculture%27%29 %281214%2C %27Energy%27%29 %28438%2C %27Transportation%27%29 %28951%2C %27Energy%27%29 %281448%2C %27Transportation%27%29 %28762%2C %27Energy%27%29 %28795%2C %27Energy%27%29 %28918%2C %27Transportation%27%29 %281914%2C %27Energy%27%29 %281544%2C %27Agriculture%27%29 %28953%2C %27Economy-wide%27%29 %2895%2C %27Agriculture%27%29 %28700%2C %27LULUCF%27%29 %281222%2C %27Energy%27%29 %28294%2C %27Agriculture%27%29 %281100%2C %27Energy%27%29 %281217%2C %27Transportation%27%29 %281526%2C %27Transportation%27%29 %281041%2C %27Transportation%27%29 %281644%2C %27Energy%27%29 %2837%2C %27LULUCF%27%29 %28554%2C %27Energy%27%29 %281065%2C %27Energy%27%29 %2888%2C %27Energy%27%29 %281109%2C %27Energy%27%29 %28590%2C %27Energy%27%29 %28574%2C %27Energy%27%29 %28252%2C %27Agriculture%27%29 %28203%2C %27Water%27%29 %28165%2C %27LULUCF%27%29 %28619%2C %27Water%27%29 %281039%2C %27Economy-wide%27%29 %281237%2C %27Economy-wide%27%29 %28823%2C %27Energy%27%29 %28199%2C %27Energy%27%29 %28839%2C %27Energy%27%29 %281915%2C %27Energy%27%29 %281123%2C %27Economy-wide%27%29 %281489%2C %27Energy%27%29 %28964%2C %27Energy%27%29 %281139%2C %27Residential and Commercial%27%29 %28827%2C %27Health%27%29 %281725%2C %27Energy%27%29 %28247%2C %27Transportation%27%29 %281820%2C %27Transportation%27%29 %28232%2C %27Residential and Commercial%27%29 %28702%2C %27LULUCF%27%29 %281221%2C %27Transportation%27%29 %28602%2C %27Transportation%27%29 %28196%2C %27Transportation%27%29 %281624%2C %27Economy-wide%27%29 %28782%2C %27Economy-wide%27%29 %28145%2C %27Residential and Commercial%27%29 %28971%2C %27Energy%27%29 %28990%2C %27Energy%27%29 %28842%2C %27Energy%27%29 %281424%2C %27Economy-wide%27%29 %28502%2C %27Water%27%29 %28769%2C %27Economy-wide%27%29 %2819%2C %27Agriculture%27%29 %28671%2C %27Transportation%27%29 %2866%2C %27Energy%27%29 %281147%2C %27LULUCF%27%29 %281950%2C %27Economy-wide%27%29 %281656%2C %27Economy-wide%27%29 %28725%2C %27Energy%27%29" isContainer="True" shape="(249,)" />
<var name="y_train" type="Series" qualifier="pandas.core.series" value="%28946%2C %27Energy%27%29 %281077%2C %27Energy%27%29 %28753%2C %27Energy%27%29 %28917%2C %27Energy%27%29 %28966%2C %27Economy-wide%27%29 %281563%2C %27Transportation%27%29 %28420%2C %27Transportation%27%29 %28470%2C %27Transportation%27%29 %28776%2C %27Energy%27%29 %28347%2C %27Transportation%27%29 %28329%2C %27LULUCF%27%29 %281004%2C %27Energy%27%29 %281151%2C %27Economy-wide%27%29 %281780%2C %27Transportation%27%29 %281745%2C %27Economy-wide%27%29 %281115%2C %27LULUCF%27%29 %2842%2C %27Water%27%29 %28130%2C %27Energy%27%29 %28125%2C %27LULUCF%27%29 %28607%2C %27Energy%27%29 %281670%2C %27Transportation%27%29 %281541%2C %27Energy%27%29 %281102%2C %27Energy%27%29 %28631%2C %27Energy%27%29 %281225%2C %27Energy%27%29 %281641%2C %27Transportation%27%29 %28630%2C %27Energy%27%29 %281308%2C %27Energy%27%29 %281319%2C %27LULUCF%27%29 %28774%2C %27Economy-wide%27%29 %281243%2C %27Energy%27%29 %281899%2C %27Energy%27%29 %2851%2C %27LULUCF%27%29 %281155%2C %27Energy%27%29 %28771%2C %27Energy%27%29 %28904%2C %27Energy%27%29 %281189%2C %27Economy-wide%27%29 %28824%2C %27Energy%27%29 %281298%2C %27Transportation%27%29 %281209%2C %27Agriculture%27%29 %281335%2C %27Transportation%27%29 %281832%2C %27Energy%27%29 %2833%2C %27Transportation%27%29 %28764%2C %27Energy%27%29 %2863%2C %27Economy-wide%27%29 %28709%2C %27Economy-wide%27%29 %281291%2C %27Transportation%27%29 %281900%2C %27Energy%27%29 %281909%2C %27Transportation%27%29 %281044%2C %27Energy%27%29 %281579%2C %27Energy%27%29 %28680%2C %27Energy%27%29 %281743%2C %27Transportation%27%29 %28350%2C %27Energy%27%29 %28962%2C %27Energy%27%29 %28882%2C %27Industry%27%29 %281145%2C %27Industry%27%29 %28807%2C %27Energy%27%29 %28644%2C %27Energy%27%29 %281542%2C %27Transportation%27%29 %28956%2C %27Agriculture%27%29 %28580%2C %27LULUCF%27%29 %28246%2C %27Water%27%29 %281253%2C %27Energy%27%29 %28798%2C %27Energy%27%29 %28215%2C %27Water%27%29 %281150%2C %27Energy%27%29 %28650%2C %27Energy%27%29 %28790%2C %27Economy-wide%27%29 %28736%2C %27Energy%27%29 %28327%2C %27Agriculture%27%29 %281615%2C %27Energy%27%29 %28483%2C %27LULUCF%27%29 %28523%2C %27Transportation%27%29 %281566%2C %27Economy-wide%27%29 %28815%2C %27Energy%27%29 %28738%2C %27Energy%27%29 %283%2C %27LULUCF%27%29 %281927%2C %27Economy-wide%27%29 %28938%2C %27Economy-wide%27%29 %281655%2C %27LULUCF%27%29 %281067%2C %27Energy%27%29 %28800%2C %27Economy-wide%27%29 %281501%2C %27Transportation%27%29 %28477%2C %27Transportation%27%29 %28719%2C %27Energy%27%29 %28989%2C %27LULUCF%27%29 %281013%2C %27Agriculture%27%29 %28794%2C %27Economy-wide%27%29 %28892%2C %27Health%27%29 %281302%2C %27Transportation%27%29 %28569%2C %27Economy-wide%27%29 %281508%2C %27Energy%27%29 %281491%2C %27LULUCF%27%29 %281729%2C %27Energy%27%29 %281393%2C %27LULUCF%27%29 %28786%2C %27Transportation%27%29 %281331%2C %27Transportation%27%29 %28859%2C %27Energy%27%29 %28863%2C %27Transportation%27%29" isContainer="True" shape="(503,)" />
</xml>
<xml><var name="AutoTokenizer" type="type" qualifier="builtins" value="%3Cclass %27transformers.models.auto.tokenization_auto.AutoTokenizer%27&gt;" isContainer="True" />
<var name="BATCH_SIZE" type="int" qualifier="builtins" value="16" />
<var name="ClassifierChain" type="type" qualifier="builtins" value="%3Cclass %27skmultilearn.problem_transform.cc.ClassifierChain%27&gt;" isContainer="True" />
<var name="CountVectorizer" type="type" qualifier="builtins" value="%3Cclass %27sklearn.feature_extraction.text.CountVectorizer%27&gt;" isContainer="True" />
<var name="DummyClassifier" type="type" qualifier="builtins" value="%3Cclass %27sklearn.dummy.DummyClassifier%27&gt;" isContainer="True" />
<var name="GradientBoostingClassifier" type="ABCMeta" qualifier="abc" value="%3Cclass %27sklearn.ensemble._gb.GradientBoostingClassifier%27&gt;" isContainer="True" />
<var name="HOLD_OUT_PERCENTAGE" type="int" qualifier="builtins" value="10" />
<var name="HUGGINGFACE_CONFIG" type="str" qualifier="builtins" value="distilbert-base-cased" />
<var name="ITERATIVE_STRAT_ORDER" type="int" qualifier="builtins" value="1" />
<var name="In" type="list" qualifier="builtins" value="%5B%27%27%2C %22import sys%5Cn%5Cn%5Cn%5Cnget_ipython%28%29.run_line_magic%28%27load_ext%27%2C %27autoreload%27%29%5Cnget_ipython%28%29.run_line_magic%28%27autoreload%27%2C %272%27%29%22%2C %27from src.sklearn_utils import iter_train_test_split%2C simple_feature_engineering%5Cnfrom sklearn.ensemble import GradientBoostingClassifier%27%2C %27import pandas as pd%5Cnimport numpy as np%5Cnimport os%5Cnimport plotly.express as px%5Cnfrom skmultilearn.model_selection import IterativeStratification%5Cnfrom sklearn.model_selection import train_test_split%5Cnfrom sklearn.preprocessing import MultiLabelBinarizer%5Cnfrom sklearn.dummy import DummyClassifier%5Cnfrom sklearn.metrics import hamming_loss%5Cnimport seaborn as sns%5Cn%5Cnfrom sklearn.feature_extraction.text import TfidfVectorizer%5Cn%5Cnfrom yellowbrick.text import TSNEVisualizer%5Cnfrom yellowbrick.datasets import load_hobbies%5Cn%23 import tensorflow_addons as tfa%5Cnfrom sklearn.metrics import hamming_loss%5Cn%5Cnfrom skmultilearn.problem_transform import ClassifierChain%5Cnfrom sklearn.metrics import hamming_loss%2C accuracy_score%2C make_scorer..." isContainer="True" shape="28" isIPythonHidden="True" />
<var name="IterativeStratification" type="ABCMeta" qualifier="abc" value="%3Cclass %27skmultilearn.model_selection.iterative_stratification.IterativeStratification%27&gt;" isContainer="True" />
<var name="KEEP_MOST_COMMON_LABELS" type="int" qualifier="builtins" value="10" />
<var name="Lasso" type="ABCMeta" qualifier="abc" value="%3Cclass %27sklearn.linear_model._coordinate_descent.Lasso%27&gt;" isContainer="True" />
<var name="MultiLabelBinarizer" type="type" qualifier="builtins" value="%3Cclass %27sklearn.preprocessing._label.MultiLabelBinarizer%27&gt;" isContainer="True" />
<var name="MultinomialNB" type="ABCMeta" qualifier="abc" value="%3Cclass %27sklearn.naive_bayes.MultinomialNB%27&gt;" isContainer="True" />
<var name="Out" type="dict" qualifier="builtins" value="%7B5%3A %27/home/stefan/PycharmProjects/multi-label-classification-climate/notebooks%27%2C 7%3A    policy_id                       policy_title  %5C%0A0      10088     Circular economy promotion law   %0A1      10087                14th Five-Year Plan   %0A2      10046             National Forest Policy   %0A3      10044   Suriname National REDD%2B Strategy   %0A4      10042  Policy Development Plan 2017-2021   %0A%0A                                             sectors  %5C%0A0                  Industry%3BAgriculture%3BEconomy-wide   %0A1  Transportation%3BRural%3BLULUCF%3BEnergy%3BEconomy-wid...   %0A2                                             LULUCF   %0A3                                             LULUCF   %0A4                                       Economy-wide   %0A%0A                                    description_text  %0A0  This law promotes the development of a circula...  %0A1  The 14th Five Year Plan lays down the strategy...  %0A2  This document aims at protecting the country%27s...  %0A3  This document aims to protect Suriname%27s fores......" isContainer="True" shape="11" isIPythonHidden="True" />
<var name="Path" type="type" qualifier="builtins" value="%3Cclass %27pathlib.Path%27&gt;" isContainer="True" />
<var name="Pipeline" type="ABCMeta" qualifier="abc" value="%3Cclass %27sklearn.pipeline.Pipeline%27&gt;" isContainer="True" />
<var name="SEED" type="int" qualifier="builtins" value="42" />
<var name="TEST_SET_FRAC" type="float" qualifier="builtins" value="0.1" />
<var name="TRAIN_FRACTION" type="float" qualifier="builtins" value="0.9" />
<var name="TSNEVisualizer" type="type" qualifier="builtins" value="%3Cclass %27yellowbrick.text.tsne.TSNEVisualizer%27&gt;" isContainer="True" />
<var name="TextFeatureEngineering" type="type" qualifier="builtins" value="%3Cclass %27src.sklearn_utils.TextFeatureEngineering%27&gt;" isContainer="True" />
<var name="TfidfVectorizer" type="type" qualifier="builtins" value="%3Cclass %27sklearn.feature_extraction.text.TfidfVectorizer%27&gt;" isContainer="True" />
<var name="Tuple" type="_TupleType" qualifier="typing" value="typing.Tuple" isContainer="True" />
<var name="X" type="DataFrame" qualifier="pandas.core.frame" value="policy_id                                       policy_title  %5C %5B0         10088                     Circular economy promotion law   %5D %5B3         10044                   Suriname National REDD%2B Strategy   %5D %5B5         10049                               Energy Strategy 2050   %5D %5B6         10051                   Long-Term Climate Strategy%2C 2021   %5D %5B9         10054  Environmentally Sustainable Transport System P...   %5D %5B...         ...                                                ...   %5D %5B1955       8835  National Climate Change Strategy and Action Pl...   %5D %5B1956       9110                 National Policy for Climate Change   %5D %5B1957       9191  Presidential Decree 7/2019 establishing the na...   %5D %5B1958       8889  Act No. 28 of 1972 concerning nuclear energy a...   %5D %5B1959       8887  Natural Hazards Compensation Act %28No. 59 of 2014%29   %5D %5B%5D %5B                                       description_text  %5C%5D %5B0     This law promotes the development of a circula...   %5D %5B3     This document aims to protect Surin...%5D" isContainer="True" shape="(1680, 14)" />
<var name="X_test" type="DataFrame" qualifier="pandas.core.frame" value="description_text  %5C %5B1497  The Enemalta %28Transfer of Assets%2C Rights%2C Liab...   %5D %5B1517  The National Climate Change Policy%2C published ...   %5D %5B1244  This document sets the remuneration framework ...   %5D %5B249   This document sets the government%27s National T...   %5D %5B698   This document sets the government%27s energy pol...   %5D %5B...                                                 ...   %5D %5B1704  The goal of this regulation is to grant financ...   %5D %5B598   This law commits Ireland%27s national treasury t...   %5D %5B1533  The Democratic Republic of Congo%27s Disaster Re...   %5D %5B1903  The Small and Medium-sized Power Plant Act was...   %5D %5B240   The Strategic Investment Framework for Environ...   %5D %5B%5D %5B                                           policy_title  %5C%5D %5B1497  ACT No. XXXIV of 2014 and associated feed-in t...   %5D %5B1517            Myanmar National Climate Change Policy    %5D %5B1244  Royal Decree 960/2020 regulating the economic ...   %5D %5B249   National Transport Plan 2018-2029 %28Meld. St. 3......%5D" isContainer="True" shape="(249, 3)" />
<var name="X_train" type="DataFrame" qualifier="pandas.core.frame" value="description_text  %5C %5B946   This Act establishes the Energy Market Authori...   %5D %5B1077  This Act creates the Energy and Climate Fund. ...   %5D %5B753   This Strategy%2C developed in partnership with U...   %5D %5B917   Energy efficiency labelling requirements are s...   %5D %5B966   The law provided a legal framework to set up a...   %5D %5B...                                                 ...   %5D %5B220   South Africa%27s Sectoral Cold Spell Management ...   %5D %5B422   The Energy Efficiency Action Plan 2011%3F2020 le...   %5D %5B789   This law states that the State shall provide t...   %5D %5B1125  The Strategy aims to develop a sustainable ene...   %5D %5B404   The main objectives of Law 1391-V are to%3A %5Cn- ...   %5D %5B%5D %5B                                           policy_title  %5C%5D %5B946   Energy Market Authority of Singapore Act %28Chap...   %5D %5B1077                 Energy and Climate Fund Act %28EKFG%29   %5D %5B753   Decentralized Rural Electrification Strategy %28...   %5D %5B917   Energy Resources Regulations %28Energy labeling ......%5D" isContainer="True" shape="(503, 3)" />
<var name="_" type="dict" qualifier="builtins" value="%7B%27classifier%27%3A RandomForestClassifier%28%29%2C %27classifier__bootstrap%27%3A True%2C %27classifier__ccp_alpha%27%3A 0.0%2C %27classifier__class_weight%27%3A None%2C %27classifier__criterion%27%3A %27gini%27%2C %27classifier__max_depth%27%3A None%2C %27classifier__max_features%27%3A %27auto%27%2C %27classifier__max_leaf_nodes%27%3A None%2C %27classifier__max_samples%27%3A None%2C %27classifier__min_impurity_decrease%27%3A 0.0%2C %27classifier__min_samples_leaf%27%3A 1%2C %27classifier__min_samples_split%27%3A 2%2C %27classifier__min_weight_fraction_leaf%27%3A 0.0%2C %27classifier__n_estimators%27%3A 100%2C %27classifier__n_jobs%27%3A None%2C %27classifier__oob_score%27%3A False%2C %27classifier__random_state%27%3A None%2C %27classifier__verbose%27%3A 0%2C %27classifier__warm_start%27%3A False%2C %27require_dense%27%3A %5BTrue%2C True%5D%2C %27order%27%3A None%7D" isContainer="True" shape="21" isIPythonHidden="True" />
<var name="_11" type="DataFrame" qualifier="pandas.core.frame" value="num_labels  cumulative_positive_labels  %5C %5BEnergy                                1143                        1143   %5D %5BTransportation                         761                        1904   %5D %5BLULUCF                                 398                        2302   %5D %5BEconomy-wide                           366                        2668   %5D %5BResidential and Commercial             351                        3019   %5D %5BAgriculture                            305                        3324   %5D %5BWater                                  297                        3621   %5D %5BIndustry                               238                        3859   %5D %5BWaste                                  177                        4036   %5D %5BHealth                                 158                        4194   %5D %5BEnvironment                            127                        4321   %5D %5BUrban                                   73                        4394   %5D %5BBuildings                             ...%5D" isContainer="True" shape="(23, 3)" isIPythonHidden="True" />
<var name="_12" type="Figure" qualifier="plotly.graph_objs._figure" value="Figure%28%7B%0A    %27data%27%3A %5B%7B%27alignmentgroup%27%3A %27True%27%2C%0A              %27hovertemplate%27%3A %27index=%25%7Bx%7D%3Cbr&gt;num_labels=%25%7By%7D%3Cextra&gt;%3C/extra&gt;%27%2C%0A              %27legendgroup%27%3A %27%27%2C%0A              %27marker%27%3A %7B%27color%27%3A %27%23636efa%27%2C %27pattern%27%3A %7B%27shape%27%3A %27%27%7D%7D%2C%0A              %27name%27%3A %27%27%2C%0A              %27offsetgroup%27%3A %27%27%2C%0A              %27orientation%27%3A %27v%27%2C%0A              %27showlegend%27%3A False%2C%0A              %27textposition%27%3A %27auto%27%2C%0A              %27type%27%3A %27bar%27%2C%0A              %27x%27%3A array%28%5B%27Energy%27%2C %27Transportation%27%2C %27LULUCF%27%2C %27Economy-wide%27%2C%0A                          %27Residential and Commercial%27%2C %27Agriculture%27%2C %27Water%27%2C %27Industry%27%2C%0A                          %27Waste%27%2C %27Health%27%2C %27Environment%27%2C %27Urban%27%2C %27Buildings%27%2C %27Tourism%27%2C%0A                          %27Social development%27%2C %27Disaster Risk Management %28Drm%29%27%2C %27Coastal zones%27%2C%0A                          %27Rural%27%2C %27Adaptation%27%2C %27Cross Cutting Area%27%2C %27Public Sector%27%2C %27Other%27%2C%0A                          %27Finance%27%5D%2C dtype=object%29%2C%0A              %27xaxis%27%3A %27x%27%2C%0A              %27y%27%3A array%28%5B1143..." isContainer="True" isIPythonHidden="True" />
<var name="_13" type="AxesSubplot" qualifier="matplotlib.axes._subplots" value="AxesSubplot%280.125%2C0.125%3B0.62x0.755%29" isContainer="True" isIPythonHidden="True" />
<var name="_14" type="Figure" qualifier="plotly.graph_objs._figure" value="Figure%28%7B%0A    %27data%27%3A %5B%7B%27alignmentgroup%27%3A %27True%27%2C%0A              %27bingroup%27%3A %27x%27%2C%0A              %27hovertemplate%27%3A %27variable=sectors_list%3Cbr&gt;value=%25%7Bx%7D%3Cbr&gt;count=%25%7By%7D%3Cextra&gt;%3C/extra&gt;%27%2C%0A              %27legendgroup%27%3A %27sectors_list%27%2C%0A              %27marker%27%3A %7B%27color%27%3A %27%23636efa%27%2C %27pattern%27%3A %7B%27shape%27%3A %27%27%7D%7D%2C%0A              %27name%27%3A %27sectors_list%27%2C%0A              %27offsetgroup%27%3A %27sectors_list%27%2C%0A              %27orientation%27%3A %27v%27%2C%0A              %27showlegend%27%3A True%2C%0A              %27type%27%3A %27histogram%27%2C%0A              %27x%27%3A array%28%5B3%2C 6%2C 1%2C ...%2C 5%2C 1%2C 1%5D%29%2C%0A              %27xaxis%27%3A %27x%27%2C%0A              %27yaxis%27%3A %27y%27%7D%5D%2C%0A    %27layout%27%3A %7B%27barmode%27%3A %27relative%27%2C%0A               %27legend%27%3A %7B%27title%27%3A %7B%27text%27%3A %27variable%27%7D%2C %27tracegroupgap%27%3A 0%7D%2C%0A               %27template%27%3A %27...%27%2C%0A               %27title%27%3A %7B%27text%27%3A %27num labels per instance%27%7D%2C%0A               %27xaxis%27%3A %7B%27anchor%27%3A %27y%27%2C %27domain%27%3A %5B0.0%2C 1.0%5D%2C %27title%27%3A %7B%27text%27%3A %27value%27%7D%7D%2C%0A               %27yaxis%27%3A %7B%27anchor%27%3A %27x%27%2C %27domain%27%3A %5B0.0%2C 1.0%5D%2C %27title%27%3A %7B%27text%27%3A %27count%27%7D%7D%7D%0A%7D%29" isContainer="True" isIPythonHidden="True" />
<var name="_15" type="Series" qualifier="pandas.core.series" value="%28%27Energy%27%2C 365%29 %28%27Economy-wide%27%2C 144%29 %28%27Transportation%3BEnergy%27%2C 117%29 %28%27Transportation%27%2C 112%29 %28%27Energy%3BResidential and Commercial%27%2C 63%29 %28%27LULUCF%27%2C 58%29 %28%27Transportation%3BEnergy%3BResidential and Commercial%27%2C 30%29 %28%27Agriculture%27%2C 26%29 %28%27Transportation%3BLULUCF%27%2C 24%29 %28%27Industry%3BEnergy%27%2C 24%29" isContainer="True" shape="(10,)" isIPythonHidden="True" />
<var name="_18" type="AxesSubplot" qualifier="matplotlib.axes._subplots" value="AxesSubplot%280.125%2C0.125%3B0.62x0.755%29" isContainer="True" isIPythonHidden="True" />
<var name="_24" type="Run" qualifier="wandb.sdk.wandb_run" value="%3Cwandb.sdk.wandb_run.Run object at 0x7fdea06a8400&gt;" isContainer="True" isIPythonHidden="True" />
<var name="_26" type="dict" qualifier="builtins" value="%7B%27memory%27%3A None%2C %27steps%27%3A %5B%28%27features%27%2C FeatureUnion%28transformer_list=%5B%28%27pipeline_text%27%2C%0A                                Pipeline%28steps=%5B%28%27select_text_col%27%2C%0A                                                 FunctionTransformer%28func=%3Cfunction select_col at 0x7fdf1be14310&gt;%29%29%2C%0A                                                %28%27tfidf%27%2C%0A                                                 TfidfVectorizer%28lowercase=False%2C%0A                                                                 max_df=0.5%2C%0A                                                                 stop_words=%27english%27%29%29%5D%29%29%2C%0A                               %28%27feature_engineering%27%2C%0A                                TextFeatureEngineering%28%29%29%5D%29%29%2C %28%27clf%27%2C ClassifierChain%28classifier=RandomForestClassifier%28%29%2C require_dense=%5BTrue%2C True%5D%29%29%5D%2C %27verbose%27%3A False%2C %27features%27%3A FeatureUnion%28transformer_list=%5B%28%27pipeline_text%27%2C%0A                                Pipeline%28steps=%5B%28%27select_text_col%27%2C%0A                                                 FunctionTran..." isContainer="True" shape="66" isIPythonHidden="True" />
<var name="_27" type="dict" qualifier="builtins" value="%7B%27classifier%27%3A RandomForestClassifier%28%29%2C %27classifier__bootstrap%27%3A True%2C %27classifier__ccp_alpha%27%3A 0.0%2C %27classifier__class_weight%27%3A None%2C %27classifier__criterion%27%3A %27gini%27%2C %27classifier__max_depth%27%3A None%2C %27classifier__max_features%27%3A %27auto%27%2C %27classifier__max_leaf_nodes%27%3A None%2C %27classifier__max_samples%27%3A None%2C %27classifier__min_impurity_decrease%27%3A 0.0%2C %27classifier__min_samples_leaf%27%3A 1%2C %27classifier__min_samples_split%27%3A 2%2C %27classifier__min_weight_fraction_leaf%27%3A 0.0%2C %27classifier__n_estimators%27%3A 100%2C %27classifier__n_jobs%27%3A None%2C %27classifier__oob_score%27%3A False%2C %27classifier__random_state%27%3A None%2C %27classifier__verbose%27%3A 0%2C %27classifier__warm_start%27%3A False%2C %27require_dense%27%3A %5BTrue%2C True%5D%2C %27order%27%3A None%7D" isContainer="True" shape="21" isIPythonHidden="True" />
<var name="_5" type="str" qualifier="builtins" value="/home/stefan/PycharmProjects/multi-label-classification-climate/notebooks" isIPythonHidden="True" />
<var name="_7" type="DataFrame" qualifier="pandas.core.frame" value="policy_id                       policy_title  %5C %5B0      10088     Circular economy promotion law   %5D %5B1      10087                14th Five-Year Plan   %5D %5B2      10046             National Forest Policy   %5D %5B3      10044   Suriname National REDD%2B Strategy   %5D %5B4      10042  Policy Development Plan 2017-2021   %5D %5B%5D %5B                                             sectors  %5C%5D %5B0                  Industry%3BAgriculture%3BEconomy-wide   %5D %5B1  Transportation%3BRural%3BLULUCF%3BEnergy%3BEconomy-wid...   %5D %5B2                                             LULUCF   %5D %5B3                                             LULUCF   %5D %5B4                                       Economy-wide   %5D %5B%5D %5B                                    description_text  %5D %5B0  This law promotes the development of a circula...  %5D %5B1  The 14th Five Year Plan lays down the strategy...  %5D %5B2  This document aims at protecting the country%27s...  %5D %5B3  This document aims to protect Suriname%27s fores...  %5D %5B4  This document lays out the country%27s developme...  %5D" isContainer="True" shape="(5, 4)" isIPythonHidden="True" />
<var name="__" type="dict" qualifier="builtins" value="%7B%27memory%27%3A None%2C %27steps%27%3A %5B%28%27features%27%2C FeatureUnion%28transformer_list=%5B%28%27pipeline_text%27%2C%0A                                Pipeline%28steps=%5B%28%27select_text_col%27%2C%0A                                                 FunctionTransformer%28func=%3Cfunction select_col at 0x7fdf1be14310&gt;%29%29%2C%0A                                                %28%27tfidf%27%2C%0A                                                 TfidfVectorizer%28lowercase=False%2C%0A                                                                 max_df=0.5%2C%0A                                                                 stop_words=%27english%27%29%29%5D%29%29%2C%0A                               %28%27feature_engineering%27%2C%0A                                TextFeatureEngineering%28%29%29%5D%29%29%2C %28%27clf%27%2C ClassifierChain%28classifier=RandomForestClassifier%28%29%2C require_dense=%5BTrue%2C True%5D%29%29%5D%2C %27verbose%27%3A False%2C %27features%27%3A FeatureUnion%28transformer_list=%5B%28%27pipeline_text%27%2C%0A                                Pipeline%28steps=%5B%28%27select_text_col%27%2C%0A                                                 FunctionTran..." isContainer="True" shape="66" isIPythonHidden="True" />
<var name="___" type="Run" qualifier="wandb.sdk.wandb_run" value="%3Cwandb.sdk.wandb_run.Run object at 0x7fdea06a8400&gt;" isContainer="True" isIPythonHidden="True" />
<var name="__builtin__" type="module" qualifier="builtins" value="%3Cmodule %27builtins%27 %28built-in%29&gt;" isContainer="True" isIPythonHidden="True" />
<var name="__builtins__" type="module" qualifier="builtins" value="%3Cmodule %27builtins%27 %28built-in%29&gt;" isContainer="True" isIPythonHidden="True" />
<var name="__doc__" type="str" qualifier="builtins" value="Automatically created module for IPython interactive environment" isIPythonHidden="True" />
<var name="__loader__" type="NoneType" qualifier="builtins" value="None" isIPythonHidden="True" />
<var name="__name__" type="str" qualifier="builtins" value="__main__" isIPythonHidden="True" />
<var name="__package__" type="NoneType" qualifier="builtins" value="None" isIPythonHidden="True" />
<var name="__spec__" type="NoneType" qualifier="builtins" value="None" isIPythonHidden="True" />
<var name="_dh" type="list" qualifier="builtins" value="%5BPosixPath%28%27/home/stefan/PycharmProjects/multi-label-classification-climate/notebooks%27%29%5D" isContainer="True" shape="1" isIPythonHidden="True" />
<var name="_i" type="str" qualifier="builtins" value="full_pipe_rf.get_params%28%29" isIPythonHidden="True" />
<var name="_i1" type="str" qualifier="builtins" value="import sys%0A%0A%0A%0A%25load_ext autoreload%0A%25autoreload 2" isIPythonHidden="True" />
<var name="_i10" type="str" qualifier="builtins" value="%23 Let%27s analyse the labels.%0Alabels_flattened=df%5B%27sectors_list%27%5D.explode%28%29%0Aunique_labels=labels_flattened.unique%28%29%0An_unique_labels=len%28unique_labels%29%0Aprint%28f%22There are %7Bn_unique_labels%7D classes with possible labels%3A %5Cn %7Bunique_labels%7D%22%29" isIPythonHidden="True" />
<var name="_i11" type="str" qualifier="builtins" value="%23 What are the cumulative totals for each label%3F%0Anum_instances_each_label=labels_flattened.value_counts%28%29%0Atotal_positive_labels=num_instances_each_label.sum%28%29%0Acumulative_sum=num_instances_each_label.cumsum%28%29%0Afraction_dataset_covered=cumulative_sum/total_positive_labels%0Adf_labels=pd.DataFrame%28%7B%27num_labels%27%3A num_instances_each_label%2C%0A                        %27cumulative_positive_labels%27%3A cumulative_sum%2C %0A                        %27cumulative_fraction_dataset_covered%27%3A fraction_dataset_covered%7D%29%0Adf_labels" isIPythonHidden="True" />
<var name="_i12" type="str" qualifier="builtins" value="px.bar%28df_labels%2C x=df_labels.index%2C y=%27num_labels%27%2C title=%27label distribution%27%29" isIPythonHidden="True" />
<var name="_i13" type="str" qualifier="builtins" value="%23 12 most under represented labels.%0Aunderrepresented_labels=df_labels%5B11%3A%5D.index%0A%0Amlb=MultiLabelBinarizer%28%29%0Ay = mlb.fit_transform%28df%5B%27sectors_list%27%5D%29%0A%23 Now let%27s look at the correlations between labels.%0Asns.heatmap%28pd.DataFrame%28y%2C columns=mlb.classes_%29.corr%28%29.loc%5Bunderrepresented_labels%5D%29" isIPythonHidden="True" />
<var name="_i14" type="str" qualifier="builtins" value="px.histogram%28df%5B%27sectors_list%27%5D.apply%28len%29%2C title=%27num labels per instance%27%29" isIPythonHidden="True" />
<var name="_i15" type="str" qualifier="builtins" value="%23 Let%27s also check if there are any labels with an especially high number of classes such that we could change this to a multi-class problem%0A%23 instead of a multi-label problem.%0Adf%5B%27sectors%27%5D.value_counts%28%29.head%2810%29" isIPythonHidden="True" />
<var name="_i16" type="str" qualifier="builtins" value="common_labels=df_labels.index%5B0%3AKEEP_MOST_COMMON_LABELS%5D%0A%0A%23 Only keep sectors in top n labels%0Adf%5B%27sectors_list%27%5D = df%5B%27sectors_list%27%5D.apply%28lambda x%3A %5Btag for tag in x if tag in common_labels%5D%29%0Adf_filtered = df.copy%28%29%5Bdf%5B%27sectors_list%27%5D.str.len%28%29&gt;0%5D%0Adf_filtered.drop%28columns=%27sectors%27%2Cinplace=True%29" isIPythonHidden="True" />
<var name="_i17" type="str" qualifier="builtins" value="y = mlb.fit_transform%28df_filtered%5B%27sectors_list%27%5D%29%0A%0A%23 Split%0Adf_eda%2C df_test%2C y_eda%2C y_test = iter_train_test_split%28%0A    df_filtered%2C y%2C train_size=1-TEST_SET_FRAC%29%0A%0A%0Ay_eda_df = pd.DataFrame%28y_eda%2C columns = mlb.classes_%29" isIPythonHidden="True" />
<var name="_i18" type="str" qualifier="builtins" value="%23 Now let%27s look at the correlations between labels.%0Asns.heatmap%28y_eda_df.corr%28%29%29" isIPythonHidden="True" />
<var name="_i19" type="str" qualifier="builtins" value="%23 Let%27s do a quick analysis of a bunch of statistics from the text columns. %0A%0Adf_eda=df_eda.copy%28%29 %23 Suppress warnings%0Adf_eda%5B%27full_text%27%5D= df_eda%5B%27policy_title%27%5D%2B%27%3A %27%2Bdf_eda%5B%27description_text%27%5D %23 Concat text columns%0A%0Atext_cols=%5B%27description_text%27%2C %27policy_title%27%2C %27full_text%27%5D%0Atext_cols_n_words = %5Bf%27%7Bx%7D_nwords%27 for x in text_cols%5D%0Afor col in text_cols%3A%0A    df_eda%5Bf%27%7Bcol%7D_nwords%27%5D=df_eda%5Bcol%5D.str.split%28%29.str.len%28%29%0A    %0Adef subplot_helper%28cols%3A list%29 -&gt; None%3A%0A    fig=make_subplots%283%2C1%2C subplot_titles=cols%29%0A    for i%2C col in enumerate%28cols%29%3A%0A        trace=go.Histogram%28x=df_eda%5Bcol%5D%29%0A        fig.append_trace%28trace%2C i%2B1%2C1%29%0A    %0A    fig.update_layout%28height=700%2C width=800%29%0A    fig.show%28%29%0A%0Asubplot_helper%28text_cols_n_words%29" isIPythonHidden="True" />
<var name="_i2" type="str" qualifier="builtins" value="from src.sklearn_utils import iter_train_test_split%2C simple_feature_engineering%0Afrom sklearn.ensemble import GradientBoostingClassifier" isIPythonHidden="True" />
<var name="_i20" type="str" qualifier="builtins" value="tokenizer = AutoTokenizer.from_pretrained%28%27distilbert-base-cased%27%29%0Afor col in text_cols%3A%0A    df_eda%5Bf%27%7Bcol%7D_tokens%27%5D=df_eda%5Bcol%5D.apply%28lambda x%3A tokenizer.tokenize%28x%29%29%0A    df_eda%5Bf%27%7Bcol%7D_ntokens%27%5D=df_eda%5Bf%27%7Bcol%7D_tokens%27%5D.str.len%28%29%0A%0Atext_cols_n_tokens = %5Bf%27%7Bx%7D_ntokens%27 for x in text_cols%5D%0Asubplot_helper%28text_cols_n_tokens%29" isIPythonHidden="True" />
<var name="_i21" type="str" qualifier="builtins" value="%23 Let%27s see what happens if we subset the dataset so that it only contains rows with a single label%0A%23 and visualise the separation between classes to get%0Adf_single_label=df_eda%5Bdf_eda%5B%27sectors_list%27%5D.apply%28len%29==1%5D%0AX%2C y = df_single_label%5B%5B%27description_text%27%2C%27policy_title%27%2C%27full_text%27%5D%5D%2C df_single_label%5B%27sectors_list%27%5D.apply%28lambda x%3A x%5B0%5D%29%0AX_train%2C X_test%2C y_train%2C y_test = train_test_split%28%0A     X%2C y%2C test_size=0.33%2C random_state=SEED%29%0A%0Adef tsne_plot%28X_train%2C X_test%2C y_train%2C y_test%2C col%3A str%29%3A%0A    %22%22%22%0A    Helper to plot tsne visualisations on train and test set for a tfidf transformed column.%0A    %22%22%22%0A    tfidf = TfidfVectorizer%28%29%0A    tfidf.fit_transform%28X_train%5Bcol%5D%29%0A    train_features = tfidf.transform%28X_train%5Bcol%5D%29%0A    test_features = tfidf.transform%28X_test%5Bcol%5D%29%0A    tsne_train = TSNEVisualizer%28decompose_by=24%2C title=f%27Train set%3A %7Bcol%7D%27%29%0A    tsne_train.fit%28train_features%2C y_train%29%0A    tsne_train.show%28%29%0A    tsne_test = TSNEVisualizer%28decompose_by=24%2C title=f%27Test set%3A %7Bcol%7D%27%29%0A    ts..." isIPythonHidden="True" />
<var name="_i22" type="str" qualifier="builtins" value="from src.sklearn_utils import TextFeatureEngineering%2C select_col%2C construct_pipeline" isIPythonHidden="True" />
<var name="_i23" type="str" qualifier="builtins" value="X%2C y = df_eda%2C mlb.fit_transform%28df_eda%5B%27sectors_list%27%5D%29" isIPythonHidden="True" />
<var name="_i24" type="str" qualifier="builtins" value="import wandb%0Awandb.init%28project=%22climate-multi-label-classification%22%2C entity=%22stefl14%22%29" isIPythonHidden="True" />
<var name="_i25" type="str" qualifier="builtins" value="def select_col%28df%2C col=%27full_text%27%29%3A %23 lambda%27s not picklable%2C hence this one liner.%0A    return df%5Bcol%5D%0A%0Afull_pipe_rf=construct_pipeline%28%29%0Afull_pipe_gb=construct_pipeline%28clf=GradientBoostingClassifier%28%29%29%0A%0A%23 cv_score=cross_val_score%28full_pipe_rf%2C X%2C y%2C scoring=make_scorer%28hamming_loss%29%2C cv=5%2C error_score=%27raise%27%29%0A%23%0A%23 %23 fit full_pipe and log the results.%0A%23 full_pipe_rf.fit%28X%2C y%29%0A%23 wandb.log%28%7B%27cv_score%27%3A cv_score.mean%28%29%2C %27cv_std%27%3A cv_score.std%28%29%7D%29" isIPythonHidden="True" />
<var name="_i26" type="str" qualifier="builtins" value="full_pipe_rf.get_params%28%29" isIPythonHidden="True" />
<var name="_i27" type="str" qualifier="builtins" value="full_pipe_rf.named_steps%5B%27clf%27%5D.get_params%28%29" isIPythonHidden="True" />
<var name="_i3" type="str" qualifier="builtins" value="import pandas as pd%0Aimport numpy as np%0Aimport os%0Aimport plotly.express as px%0Afrom skmultilearn.model_selection import IterativeStratification%0Afrom sklearn.model_selection import train_test_split%0Afrom sklearn.preprocessing import MultiLabelBinarizer%0Afrom sklearn.dummy import DummyClassifier%0Afrom sklearn.metrics import hamming_loss%0Aimport seaborn as sns%0A%0Afrom sklearn.feature_extraction.text import TfidfVectorizer%0A%0Afrom yellowbrick.text import TSNEVisualizer%0Afrom yellowbrick.datasets import load_hobbies%0A%23 import tensorflow_addons as tfa%0Afrom sklearn.metrics import hamming_loss%0A%0Afrom skmultilearn.problem_transform import ClassifierChain%0Afrom sklearn.metrics import hamming_loss%2C accuracy_score%2C make_scorer%0Afrom sklearn.feature_extraction.text import CountVectorizer%2C TfidfVectorizer%0Afrom sklearn.naive_bayes import MultinomialNB%0Afrom sklearn.pipeline import Pipeline%0Afrom sklearn.linear_model import Lasso%0Afrom sklearn.model_selection import cross_val_score%0Afrom datetime import time%0A%0Afrom trans..." isIPythonHidden="True" />
<var name="_i4" type="str" qualifier="builtins" value="def create_tokenized_ds%28%0A    X%2C y%2C text_column=%22description_text%22%2C model_name=%22bert-base-cased%22%2C batch_size=16%0A%29%3A%0A    y = np.array%28y%2C dtype=%22int32%22%29%0A    X = X%5Btext_column%5D%0A    tokens = tokenizer%28%0A        list%28X%29%2C%0A        padding=%22max_length%22%2C%0A        truncation=True%2C%0A        return_tensors=%22tf%22%2C%0A        return_token_type_ids=False%2C%0A    %29%0A    tokens_w_labels = tokens.copy%28%29%0A    tokens_w_labels%5B%22target%22%5D = y%0A    tf_dataset = tf.data.Dataset.from_tensor_slices%28%28dict%28tokens_w_labels%29%2C y%29%29%0A    tf_dataset = tf_dataset.shuffle%28len%28tf_dataset%29%29.batch%28batch_size%29%0A    return tf_dataset%0A%0A%0Aimport keras%0A%0AK = keras.backend%0A%0A%0Aclass ExponentialLearningRate%28keras.callbacks.Callback%29%3A%0A    def __init__%28self%2C factor%29%3A%0A        self.factor = factor%0A        self.rates = %5B%5D%0A        self.losses = %5B%5D%0A%0A    def on_batch_end%28self%2C batch%2C logs%29%3A%0A        self.rates.append%28K.get_value%28self.model.optimizer.learning_rate%29%29%0A        self.losses.append%28logs%5B%22loss%22%5D%29%0A        K.set_value%28%0A            self.model.optimizer.le..." isIPythonHidden="True" />
<var name="_i5" type="str" qualifier="builtins" value="os.getcwd%28%29" isIPythonHidden="True" />
<var name="_i6" type="str" qualifier="builtins" value="%23 Constants%0ASEED=42%0AHOLD_OUT_PERCENTAGE=10%0AITERATIVE_STRAT_ORDER=1%0AKEEP_MOST_COMMON_LABELS=10%0ABATCH_SIZE=16%0ATRAIN_FRACTION=0.9%0AHUGGINGFACE_CONFIG=%27distilbert-base-cased%27%0ATEST_SET_FRAC=.1" isIPythonHidden="True" />
<var name="_i7" type="str" qualifier="builtins" value="data_path = Path%28os.path.abspath%28%27%27%29%29.parent / %27data%27 / %27recruitment-task_1-full.csv%27%0A%0Adf=pd.read_csv%28%27/home/stefan/PycharmProjects/multi-label-classification-climate/data/recruitment-task_1-full.csv%27%29%0Adf.head%28%29" isIPythonHidden="True" />
<var name="_i8" type="str" qualifier="builtins" value="df.info%28%29" isIPythonHidden="True" />
<var name="_i9" type="str" qualifier="builtins" value="%23 Parse labels into a list.%0Adf%5B%27sectors_list%27%5D=df%5B%27sectors%27%5D.str.split%28%22%3B%22%29%0Adf=df%5B~df.description_text.duplicated%28%29%5D %23 Found a duplicated entry" isIPythonHidden="True" />
<var name="_ih" type="list" qualifier="builtins" value="%5B%27%27%2C %22import sys%5Cn%5Cn%5Cn%5Cnget_ipython%28%29.run_line_magic%28%27load_ext%27%2C %27autoreload%27%29%5Cnget_ipython%28%29.run_line_magic%28%27autoreload%27%2C %272%27%29%22%2C %27from src.sklearn_utils import iter_train_test_split%2C simple_feature_engineering%5Cnfrom sklearn.ensemble import GradientBoostingClassifier%27%2C %27import pandas as pd%5Cnimport numpy as np%5Cnimport os%5Cnimport plotly.express as px%5Cnfrom skmultilearn.model_selection import IterativeStratification%5Cnfrom sklearn.model_selection import train_test_split%5Cnfrom sklearn.preprocessing import MultiLabelBinarizer%5Cnfrom sklearn.dummy import DummyClassifier%5Cnfrom sklearn.metrics import hamming_loss%5Cnimport seaborn as sns%5Cn%5Cnfrom sklearn.feature_extraction.text import TfidfVectorizer%5Cn%5Cnfrom yellowbrick.text import TSNEVisualizer%5Cnfrom yellowbrick.datasets import load_hobbies%5Cn%23 import tensorflow_addons as tfa%5Cnfrom sklearn.metrics import hamming_loss%5Cn%5Cnfrom skmultilearn.problem_transform import ClassifierChain%5Cnfrom sklearn.metrics import hamming_loss%2C accuracy_score%2C make_scorer..." isContainer="True" shape="28" isIPythonHidden="True" />
<var name="_ii" type="str" qualifier="builtins" value="def select_col%28df%2C col=%27full_text%27%29%3A %23 lambda%27s not picklable%2C hence this one liner.%0A    return df%5Bcol%5D%0A%0Afull_pipe_rf=construct_pipeline%28%29%0Afull_pipe_gb=construct_pipeline%28clf=GradientBoostingClassifier%28%29%29%0A%0A%23 cv_score=cross_val_score%28full_pipe_rf%2C X%2C y%2C scoring=make_scorer%28hamming_loss%29%2C cv=5%2C error_score=%27raise%27%29%0A%23%0A%23 %23 fit full_pipe and log the results.%0A%23 full_pipe_rf.fit%28X%2C y%29%0A%23 wandb.log%28%7B%27cv_score%27%3A cv_score.mean%28%29%2C %27cv_std%27%3A cv_score.std%28%29%7D%29" isIPythonHidden="True" />
<var name="_iii" type="str" qualifier="builtins" value="import wandb%0Awandb.init%28project=%22climate-multi-label-classification%22%2C entity=%22stefl14%22%29" isIPythonHidden="True" />
<var name="_oh" type="dict" qualifier="builtins" value="%7B5%3A %27/home/stefan/PycharmProjects/multi-label-classification-climate/notebooks%27%2C 7%3A    policy_id                       policy_title  %5C%0A0      10088     Circular economy promotion law   %0A1      10087                14th Five-Year Plan   %0A2      10046             National Forest Policy   %0A3      10044   Suriname National REDD%2B Strategy   %0A4      10042  Policy Development Plan 2017-2021   %0A%0A                                             sectors  %5C%0A0                  Industry%3BAgriculture%3BEconomy-wide   %0A1  Transportation%3BRural%3BLULUCF%3BEnergy%3BEconomy-wid...   %0A2                                             LULUCF   %0A3                                             LULUCF   %0A4                                       Economy-wide   %0A%0A                                    description_text  %0A0  This law promotes the development of a circula...  %0A1  The 14th Five Year Plan lays down the strategy...  %0A2  This document aims at protecting the country%27s...  %0A3  This document aims to protect Suriname%27s fores......" isContainer="True" shape="11" isIPythonHidden="True" />
<var name="_pydevd_bundle" type="module" qualifier="builtins" value="%3Cmodule %27_pydevd_bundle%27 from %27/snap/pycharm-professional/290/plugins/python/helpers/pydev/_pydevd_bundle/__init__.py%27&gt;" isContainer="True" />
<var name="accuracy_score" type="function" qualifier="builtins" value="%3Cfunction accuracy_score at 0x7fdf48fbb8b0&gt;" isContainer="True" />
<var name="col" type="str" qualifier="builtins" value="full_text" />
<var name="common_labels" type="Index" qualifier="pandas.core.indexes.base" value="Index%28%5B%27Energy%27%2C %27Transportation%27%2C %27LULUCF%27%2C %27Economy-wide%27%2C%0A       %27Residential and Commercial%27%2C %27Agriculture%27%2C %27Water%27%2C %27Industry%27%2C%0A       %27Waste%27%2C %27Health%27%5D%2C%0A      dtype=%27object%27%29" isContainer="True" shape="(10,)" />
<var name="construct_pipeline" type="function" qualifier="builtins" value="%3Cfunction construct_pipeline at 0x7fdf1be14a60&gt;" isContainer="True" />
<var name="create_tokenized_ds" type="function" qualifier="builtins" value="%3Cfunction create_tokenized_ds at 0x7fdf196f1790&gt;" isContainer="True" />
<var name="cross_val_score" type="function" qualifier="builtins" value="%3Cfunction cross_val_score at 0x7fdf48eb9b80&gt;" isContainer="True" />
<var name="cumulative_sum" type="Series" qualifier="pandas.core.series" value="%28%27Energy%27%2C 1143%29 %28%27Transportation%27%2C 1904%29 %28%27LULUCF%27%2C 2302%29 %28%27Economy-wide%27%2C 2668%29 %28%27Residential and Commercial%27%2C 3019%29 %28%27Agriculture%27%2C 3324%29 %28%27Water%27%2C 3621%29 %28%27Industry%27%2C 3859%29 %28%27Waste%27%2C 4036%29 %28%27Health%27%2C 4194%29 %28%27Environment%27%2C 4321%29 %28%27Urban%27%2C 4394%29 %28%27Buildings%27%2C 4459%29 %28%27Tourism%27%2C 4511%29 %28%27Social development%27%2C 4556%29 %28%27Disaster Risk Management %28Drm%29%27%2C 4589%29 %28%27Coastal zones%27%2C 4617%29 %28%27Rural%27%2C 4636%29 %28%27Adaptation%27%2C 4647%29 %28%27Cross Cutting Area%27%2C 4656%29 %28%27Public Sector%27%2C 4664%29 %28%27Other%27%2C 4670%29 %28%27Finance%27%2C 4675%29" isContainer="True" shape="(23,)" />
<var name="data_path" type="PosixPath" qualifier="pathlib" value="/home/stefan/PycharmProjects/multi-label-classification-climate/data/recruitment-task_1-full.csv" isContainer="True" />
<var name="df" type="DataFrame" qualifier="pandas.core.frame" value="policy_id                                       policy_title  %5C %5B0         10088                     Circular economy promotion law   %5D %5B1         10087                                14th Five-Year Plan   %5D %5B2         10046                             National Forest Policy   %5D %5B3         10044                   Suriname National REDD%2B Strategy   %5D %5B4         10042                  Policy Development Plan 2017-2021   %5D %5B...         ...                                                ...   %5D %5B1955       8835  National Climate Change Strategy and Action Pl...   %5D %5B1956       9110                 National Policy for Climate Change   %5D %5B1957       9191  Presidential Decree 7/2019 establishing the na...   %5D %5B1958       8889  Act No. 28 of 1972 concerning nuclear energy a...   %5D %5B1959       8887  Natural Hazards Compensation Act %28No. 59 of 2014%29   %5D %5B%5D %5B                                                sectors  %5C%5D %5B0                     Industry%3BAgriculture%3BEconomy-wide   %5D %5B1     Transportation%3BRural%3BLULUCF%3BEnergy%3B...%5D" isContainer="True" shape="(1959, 5)" />
<var name="df_eda" type="DataFrame" qualifier="pandas.core.frame" value="policy_id                                       policy_title  %5C %5B0         10088                     Circular economy promotion law   %5D %5B3         10044                   Suriname National REDD%2B Strategy   %5D %5B5         10049                               Energy Strategy 2050   %5D %5B6         10051                   Long-Term Climate Strategy%2C 2021   %5D %5B9         10054  Environmentally Sustainable Transport System P...   %5D %5B...         ...                                                ...   %5D %5B1955       8835  National Climate Change Strategy and Action Pl...   %5D %5B1956       9110                 National Policy for Climate Change   %5D %5B1957       9191  Presidential Decree 7/2019 establishing the na...   %5D %5B1958       8889  Act No. 28 of 1972 concerning nuclear energy a...   %5D %5B1959       8887  Natural Hazards Compensation Act %28No. 59 of 2014%29   %5D %5B%5D %5B                                       description_text  %5C%5D %5B0     This law promotes the development of a circula...   %5D %5B3     This document aims to protect Surin...%5D" isContainer="True" shape="(1680, 14)" />
<var name="df_filtered" type="DataFrame" qualifier="pandas.core.frame" value="policy_id                                       policy_title  %5C %5B0         10088                     Circular economy promotion law   %5D %5B1         10087                                14th Five-Year Plan   %5D %5B2         10046                             National Forest Policy   %5D %5B3         10044                   Suriname National REDD%2B Strategy   %5D %5B4         10042                  Policy Development Plan 2017-2021   %5D %5B...         ...                                                ...   %5D %5B1955       8835  National Climate Change Strategy and Action Pl...   %5D %5B1956       9110                 National Policy for Climate Change   %5D %5B1957       9191  Presidential Decree 7/2019 establishing the na...   %5D %5B1958       8889  Act No. 28 of 1972 concerning nuclear energy a...   %5D %5B1959       8887  Natural Hazards Compensation Act %28No. 59 of 2014%29   %5D %5B%5D %5B                                       description_text  %5C%5D %5B0     This law promotes the development of a circula...   %5D %5B1     The 14th Five Year Plan lays down t...%5D" isContainer="True" shape="(1879, 4)" />
<var name="df_labels" type="DataFrame" qualifier="pandas.core.frame" value="num_labels  cumulative_positive_labels  %5C %5BEnergy                                1143                        1143   %5D %5BTransportation                         761                        1904   %5D %5BLULUCF                                 398                        2302   %5D %5BEconomy-wide                           366                        2668   %5D %5BResidential and Commercial             351                        3019   %5D %5BAgriculture                            305                        3324   %5D %5BWater                                  297                        3621   %5D %5BIndustry                               238                        3859   %5D %5BWaste                                  177                        4036   %5D %5BHealth                                 158                        4194   %5D %5BEnvironment                            127                        4321   %5D %5BUrban                                   73                        4394   %5D %5BBuildings                             ...%5D" isContainer="True" shape="(23, 3)" />
<var name="df_single_label" type="DataFrame" qualifier="pandas.core.frame" value="policy_id                                       policy_title  %5C %5B3         10044                   Suriname National REDD%2B Strategy   %5D %5B5         10049                               Energy Strategy 2050   %5D %5B6         10051                   Long-Term Climate Strategy%2C 2021   %5D %5B9         10054  Environmentally Sustainable Transport System P...   %5D %5B10        10061  Uganda Green Growth Development Strategy 2017/...   %5D %5B...         ...                                                ...   %5D %5B1950       8704  National Strategy for Adaptation to Climate Ch...   %5D %5B1953       8766  Priority Framework for Action%3A Climate Change ...   %5D %5B1956       9110                 National Policy for Climate Change   %5D %5B1958       8889  Act No. 28 of 1972 concerning nuclear energy a...   %5D %5B1959       8887  Natural Hazards Compensation Act %28No. 59 of 2014%29   %5D %5B%5D %5B                                       description_text      sectors_list  %5C%5D %5B3     This document aims to protect Suriname%27s fores...          %5BLULUCF%5D   %5D %5B5    ...%5D" isContainer="True" shape="(752, 14)" />
<var name="df_test" type="DataFrame" qualifier="pandas.core.frame" value="policy_id                                       policy_title  %5C %5B1        10087                                14th Five-Year Plan   %5D %5B2        10046                             National Forest Policy   %5D %5B4        10042                  Policy Development Plan 2017-2021   %5D %5B7        10052                 Switzerland%E2%80%99s climate policy%2C 2018   %5D %5B8        10053       Smart Grid Development Master Plan 2015-2036   %5D %5B..         ...                                                ...   %5D %5B549       9133                     Law No. 293-Z on energy saving   %5D %5B552       9045                  Law No. 1136-XIV on energy saving   %5D %5B588       8784  Industrial Sector Plan for mitigation and Adap...   %5D %5B616       8687                              Pollution Control Act   %5D %5B760       4313          Second National Environmental Action Plan   %5D %5B%5D %5B                                      description_text  %5C%5D %5B1    The 14th Five Year Plan lays down the strategy...   %5D %5B2    This document aims at protecting the country%27s... ...%5D" isContainer="True" shape="(199, 4)" />
<var name="exit" type="ZMQExitAutocall" qualifier="IPython.core.autocall" value="%3CIPython.core.autocall.ZMQExitAutocall object at 0x7fdf59b7a1c0&gt;" isContainer="True" isIPythonHidden="True" />
<var name="fraction_dataset_covered" type="Series" qualifier="pandas.core.series" value="%28%27Energy%27%2C 0.24449197860962568%29 %28%27Transportation%27%2C 0.4072727272727273%29 %28%27LULUCF%27%2C 0.4924064171122995%29 %28%27Economy-wide%27%2C 0.5706951871657754%29 %28%27Residential and Commercial%27%2C 0.6457754010695187%29 %28%27Agriculture%27%2C 0.7110160427807487%29 %28%27Water%27%2C 0.7745454545454545%29 %28%27Industry%27%2C 0.8254545454545454%29 %28%27Waste%27%2C 0.8633155080213903%29 %28%27Health%27%2C 0.8971122994652406%29 %28%27Environment%27%2C 0.9242780748663102%29 %28%27Urban%27%2C 0.9398930481283423%29 %28%27Buildings%27%2C 0.9537967914438503%29 %28%27Tourism%27%2C 0.9649197860962567%29 %28%27Social development%27%2C 0.9745454545454545%29 %28%27Disaster Risk Management %28Drm%29%27%2C 0.9816042780748663%29 %28%27Coastal zones%27%2C 0.9875935828877005%29 %28%27Rural%27%2C 0.9916577540106952%29 %28%27Adaptation%27%2C 0.9940106951871658%29 %28%27Cross Cutting Area%27%2C 0.9959358288770054%29 %28%27Public Sector%27%2C 0.9976470588235294%29 %28%27Other%27%2C 0.9989304812834224%29 %28%27Finance%27%2C 1.0%29" isContainer="True" shape="(23,)" />
<var name="full_pipe_gb" type="Pipeline" qualifier="sklearn.pipeline" value="Pipeline%28steps=%5B%28%27features%27%2C%0A                 FeatureUnion%28transformer_list=%5B%28%27pipeline_text%27%2C%0A                                                 Pipeline%28steps=%5B%28%27select_text_col%27%2C%0A                                                                  FunctionTransformer%28func=%3Cfunction select_col at 0x7fdf1be14310&gt;%29%29%2C%0A                                                                 %28%27tfidf%27%2C%0A                                                                  TfidfVectorizer%28lowercase=False%2C%0A                                                                                  max_df=0.5%2C%0A                                                                                  stop_words=%27english%27%29%29%5D%29%29%2C%0A                                                %28%27feature_engineering%27%2C%0A                                                 TextFeatureEngineering%28%29%29%5D%29%29%2C%0A                %28%27clf%27%2C%0A                 ClassifierChain%28classifier=GradientBoostingClassifier%28%29%2C%0A                                 require_dense=%5BTrue%2C True%5D%29..." isContainer="True" shape="2" />
<var name="full_pipe_rf" type="Pipeline" qualifier="sklearn.pipeline" value="Pipeline%28steps=%5B%28%27features%27%2C%0A                 FeatureUnion%28transformer_list=%5B%28%27pipeline_text%27%2C%0A                                                 Pipeline%28steps=%5B%28%27select_text_col%27%2C%0A                                                                  FunctionTransformer%28func=%3Cfunction select_col at 0x7fdf1be14310&gt;%29%29%2C%0A                                                                 %28%27tfidf%27%2C%0A                                                                  TfidfVectorizer%28lowercase=False%2C%0A                                                                                  max_df=0.5%2C%0A                                                                                  stop_words=%27english%27%29%29%5D%29%29%2C%0A                                                %28%27feature_engineering%27%2C%0A                                                 TextFeatureEngineering%28%29%29%5D%29%29%2C%0A                %28%27clf%27%2C%0A                 ClassifierChain%28classifier=RandomForestClassifier%28%29%2C%0A                                 require_dense=%5BTrue%2C True%5D%29%29%5D%29" isContainer="True" shape="2" />
<var name="get_ipython" type="method" qualifier="builtins" value="%3Cbound method InteractiveShell.get_ipython of %3Cipykernel.zmqshell.ZMQInteractiveShell object at 0x7fdf59b5e520&gt;&gt;" isContainer="True" isIPythonHidden="True" />
<var name="go" type="module" qualifier="builtins" value="%3Cmodule %27plotly.graph_objects%27 from %27/home/stefan/anaconda3/envs/multi-label-classification-climate/lib/python3.9/site-packages/plotly/graph_objects/__init__.py%27&gt;" isContainer="True" />
<var name="hamming_loss" type="function" qualifier="builtins" value="%3Cfunction hamming_loss at 0x7fdf48fc2280&gt;" isContainer="True" />
<var name="iter_train_test_split" type="function" qualifier="builtins" value="%3Cfunction iter_train_test_split at 0x7fdf1cce23a0&gt;" isContainer="True" />
<var name="joblib" type="module" qualifier="builtins" value="%3Cmodule %27joblib%27 from %27/home/stefan/anaconda3/envs/multi-label-classification-climate/lib/python3.9/site-packages/joblib/__init__.py%27&gt;" isContainer="True" />
<var name="labels_flattened" type="Series" qualifier="pandas.core.series" value="%280%2C %27Industry%27%29 %280%2C %27Agriculture%27%29 %280%2C %27Economy-wide%27%29 %281%2C %27Transportation%27%29 %281%2C %27Rural%27%29 %281%2C %27LULUCF%27%29 %281%2C %27Energy%27%29 %281%2C %27Economy-wide%27%29 %281%2C %27Agriculture%27%29 %282%2C %27LULUCF%27%29 %283%2C %27LULUCF%27%29 %284%2C %27Economy-wide%27%29 %285%2C %27Energy%27%29 %286%2C %27Economy-wide%27%29 %287%2C %27Economy-wide%27%29 %288%2C %27Energy%27%29 %289%2C %27Transportation%27%29 %2810%2C %27Economy-wide%27%29 %2811%2C %27Economy-wide%27%29 %2812%2C %27Economy-wide%27%29 %2813%2C %27Economy-wide%27%29 %2814%2C %27Economy-wide%27%29 %2815%2C %27Economy-wide%27%29 %2816%2C %27Social development%27%29 %2816%2C %27LULUCF%27%29 %2816%2C %27Economy-wide%27%29 %2817%2C %27Industry%27%29 %2818%2C %27Economy-wide%27%29 %2819%2C %27Agriculture%27%29 %2821%2C %27Energy%27%29 %2821%2C %27Economy-wide%27%29 %2821%2C %27Adaptation%27%29 %2822%2C %27Health%27%29 %2823%2C %27Economy-wide%27%29 %2824%2C %27Economy-wide%27%29 %2825%2C %27Transportation%27%29 %2826%2C %27LULUCF%27%29 %2827%2C %27Economy-wide%27%29 %2828%2C %27Adaptation%27%29 %2829%2C %27Buildings%27%29 %2830%2C %27Tourism%27%29 %2831%2C %27Environment%27%29 %2831%2C %27Energy%27%29 %2831%2C %27Economy-wide%27%29 %2832%2C %27Economy-wide%27%29 %2833%2C %27Transportation%27%29 %2834%2C %27Energy%27%29 %2834%2C %27Economy-wide%27%29 %2835%2C %27Economy-wide%27%29 %2835%2C %27Coastal zones%27%29 %2835%2C %27Adaptation%27%29 %2836%2C %27LULUCF%27%29 %2836%2C %27Energy%27%29 %2836%2C %27Economy-wide%27%29 %2837%2C %27LULUCF%27%29 %2838%2C %27Environment%27%29 %2839%2C %27LULUCF%27%29 %2839%2C %27Energy%27%29 %2840%2C %27Industry%27%29 %2840%2C %27Health%27%29 %2840%2C %27Economy-wide%27%29 %2840%2C %27Coastal zones%27%29 %2840%2C %27Buildings%27%29 %2841%2C %27Urban%27%29 %2841%2C %27Energy%27%29 %2842%2C %27Water%27%29 %2842%2C %27Cross Cutting Area%27%29 %2843%2C %27Economy-wide%27%29 %2844%2C %27Transportation%27%29 %2844%2C %27Public Sector%27%29 %2844%2C %27Buildings%27%29 %2845%2C %27Energy%27%29 %2846%2C %27Urban%27%29 %2846%2C %27LULUCF%27%29 %2846%2C %27Agriculture%27%29 %2847%2C %27Environment%27%29 %2848%2C %27LULUCF%27%29 %2849%2C %27Energy%27%29 %2849%2C %27Economy-wide%27%29 %2850%2C %27Residential and Commercial%27%29 %2850%2C %27Buildings%27%29 %2851%2C %27LULUCF%27%29 %2852%2C %27Economy-wide%27%29 %2853%2C %27Economy-wide%27%29 %2854%2C %27Economy-wide%27%29 %2855%2C %27Energy%27%29 %2856%2C %27Energy%27%29 %2857%2C %27Economy-wide%27%29 %2858%2C %27Economy-wide%27%29 %2859%2C %27Economy-wide%27%29 %2860%2C %27Economy-wide%27%29 %2861%2C %27Economy-wide%27%29 %2862%2C %27Transportation%27%29 %2863%2C %27Economy-wide%27%29 %2864%2C %27Economy-wide%27%29 %2865%2C %27Energy%27%29 %2866%2C %27Energy%27%29 %2867%2C %27Economy-wide%27%29 %2868%2C %27Transportation%27%29 %2869%2C %27Economy-wide%27%29" isContainer="True" shape="(4675,)" />
<var name="load_hobbies" type="function" qualifier="builtins" value="%3Cfunction load_hobbies at 0x7fdf1b790700&gt;" isContainer="True" />
<var name="logger" type="RootLogger" qualifier="logging" value="%3CRootLogger root %28CRITICAL%29&gt;" isContainer="True" />
<var name="logging" type="module" qualifier="builtins" value="%3Cmodule %27logging%27 from %27/home/stefan/anaconda3/envs/multi-label-classification-climate/lib/python3.9/logging/__init__.py%27&gt;" isContainer="True" />
<var name="make_scorer" type="function" qualifier="builtins" value="%3Cfunction make_scorer at 0x7fdf48eac670&gt;" isContainer="True" />
<var name="make_subplots" type="function" qualifier="builtins" value="%3Cfunction make_subplots at 0x7fdf1a24e790&gt;" isContainer="True" />
<var name="math" type="module" qualifier="builtins" value="%3Cmodule %27math%27 from %27/home/stefan/anaconda3/envs/multi-label-classification-climate/lib/python3.9/lib-dynload/math.cpython-39-x86_64-linux-gnu.so%27&gt;" isContainer="True" />
<var name="mlb" type="MultiLabelBinarizer" qualifier="sklearn.preprocessing._label" value="MultiLabelBinarizer%28%29" isContainer="True" />
<var name="n_unique_labels" type="int" qualifier="builtins" value="23" />
<var name="np" type="module" qualifier="builtins" value="%3Cmodule %27numpy%27 from %27/home/stefan/anaconda3/envs/multi-label-classification-climate/lib/python3.9/site-packages/numpy/__init__.py%27&gt;" isContainer="True" />
<var name="num_instances_each_label" type="Series" qualifier="pandas.core.series" value="%28%27Energy%27%2C 1143%29 %28%27Transportation%27%2C 761%29 %28%27LULUCF%27%2C 398%29 %28%27Economy-wide%27%2C 366%29 %28%27Residential and Commercial%27%2C 351%29 %28%27Agriculture%27%2C 305%29 %28%27Water%27%2C 297%29 %28%27Industry%27%2C 238%29 %28%27Waste%27%2C 177%29 %28%27Health%27%2C 158%29 %28%27Environment%27%2C 127%29 %28%27Urban%27%2C 73%29 %28%27Buildings%27%2C 65%29 %28%27Tourism%27%2C 52%29 %28%27Social development%27%2C 45%29 %28%27Disaster Risk Management %28Drm%29%27%2C 33%29 %28%27Coastal zones%27%2C 28%29 %28%27Rural%27%2C 19%29 %28%27Adaptation%27%2C 11%29 %28%27Cross Cutting Area%27%2C 9%29 %28%27Public Sector%27%2C 8%29 %28%27Other%27%2C 6%29 %28%27Finance%27%2C 5%29" isContainer="True" shape="(23,)" />
<var name="os" type="module" qualifier="builtins" value="%3Cmodule %27os%27 from %27/home/stefan/anaconda3/envs/multi-label-classification-climate/lib/python3.9/os.py%27&gt;" isContainer="True" />
<var name="pd" type="module" qualifier="builtins" value="%3Cmodule %27pandas%27 from %27/home/stefan/anaconda3/envs/multi-label-classification-climate/lib/python3.9/site-packages/pandas/__init__.py%27&gt;" isContainer="True" />
<var name="plt" type="module" qualifier="builtins" value="%3Cmodule %27matplotlib.pyplot%27 from %27/home/stefan/anaconda3/envs/multi-label-classification-climate/lib/python3.9/site-packages/matplotlib/pyplot.py%27&gt;" isContainer="True" />
<var name="px" type="module" qualifier="builtins" value="%3Cmodule %27plotly.express%27 from %27/home/stefan/anaconda3/envs/multi-label-classification-climate/lib/python3.9/site-packages/plotly/express/__init__.py%27&gt;" isContainer="True" />
<var name="pydev_jupyter_vars" type="module" qualifier="builtins" value="%3Cmodule %27pydev_jupyter_vars%27 from %27/snap/pycharm-professional/290/plugins/python/helpers-pro/jupyter_debug/pydev_jupyter_vars.py%27&gt;" isContainer="True" />
<var name="quit" type="ZMQExitAutocall" qualifier="IPython.core.autocall" value="%3CIPython.core.autocall.ZMQExitAutocall object at 0x7fdf59b7a1c0&gt;" isContainer="True" isIPythonHidden="True" />
<var name="remove_imported_pydev_package" type="function" qualifier="builtins" value="%3Cfunction remove_imported_pydev_package at 0x7fdf1cd905e0&gt;" isContainer="True" />
<var name="select_col" type="function" qualifier="builtins" value="%3Cfunction select_col at 0x7fdeab42f0d0&gt;" isContainer="True" />
<var name="simple_feature_engineering" type="function" qualifier="builtins" value="%3Cfunction simple_feature_engineering at 0x7fdf1cb21af0&gt;" isContainer="True" />
<var name="sns" type="module" qualifier="builtins" value="%3Cmodule %27seaborn%27 from %27/home/stefan/anaconda3/envs/multi-label-classification-climate/lib/python3.9/site-packages/seaborn/__init__.py%27&gt;" isContainer="True" />
<var name="subplot_helper" type="function" qualifier="builtins" value="%3Cfunction subplot_helper at 0x7fdf0eee9f70&gt;" isContainer="True" />
<var name="sys" type="module" qualifier="builtins" value="%3Cmodule %27sys%27 %28built-in%29&gt;" isContainer="True" />
<var name="text_cols" type="list" qualifier="builtins" value="%5B%27description_text%27%2C %27policy_title%27%2C %27full_text%27%5D" isContainer="True" shape="3" />
<var name="text_cols_n_tokens" type="list" qualifier="builtins" value="%5B%27description_text_ntokens%27%2C %27policy_title_ntokens%27%2C %27full_text_ntokens%27%5D" isContainer="True" shape="3" />
<var name="text_cols_n_words" type="list" qualifier="builtins" value="%5B%27description_text_nwords%27%2C %27policy_title_nwords%27%2C %27full_text_nwords%27%5D" isContainer="True" shape="3" />
<var name="time" type="type" qualifier="builtins" value="%3Cclass %27datetime.time%27&gt;" isContainer="True" />
<var name="tokenizer" type="DistilBertTokenizerFast" qualifier="transformers.models.distilbert.tokenization_distilbert_fast" value="PreTrainedTokenizerFast%28name_or_path=%27distilbert-base-cased%27%2C vocab_size=28996%2C model_max_len=512%2C is_fast=True%2C padding_side=%27right%27%2C truncation_side=%27right%27%2C special_tokens=%7B%27unk_token%27%3A %27%5BUNK%5D%27%2C %27sep_token%27%3A %27%5BSEP%5D%27%2C %27pad_token%27%3A %27%5BPAD%5D%27%2C %27cls_token%27%3A %27%5BCLS%5D%27%2C %27mask_token%27%3A %27%5BMASK%5D%27%7D%29" isContainer="True" shape="28996" />
<var name="total_positive_labels" type="int64" qualifier="numpy" value="4675" isContainer="True" shape="()" />
<var name="train_test_split" type="function" qualifier="builtins" value="%3Cfunction train_test_split at 0x7fdf1c8fb790&gt;" isContainer="True" />
<var name="tsne_plot" type="function" qualifier="builtins" value="%3Cfunction tsne_plot at 0x7fdf195f7dc0&gt;" isContainer="True" />
<var name="underrepresented_labels" type="Index" qualifier="pandas.core.indexes.base" value="Index%28%5B%27Urban%27%2C %27Buildings%27%2C %27Tourism%27%2C %27Social development%27%2C%0A       %27Disaster Risk Management %28Drm%29%27%2C %27Coastal zones%27%2C %27Rural%27%2C%0A       %27Adaptation%27%2C %27Cross Cutting Area%27%2C %27Public Sector%27%2C %27Other%27%2C%0A       %27Finance%27%5D%2C%0A      dtype=%27object%27%29" isContainer="True" shape="(12,)" />
<var name="unique_labels" type="ndarray" qualifier="numpy" value="%5B%27Industry%27 %27Agriculture%27 %27Economy-wide%27 %27Transportation%27 %27Rural%27 %27LULUCF%27%2C %27Energy%27 %27Social development%27 %27Adaptation%27 %27Health%27 %27Buildings%27 %27Tourism%27%2C %27Environment%27 %27Coastal zones%27 %27Urban%27 %27Water%27 %27Cross Cutting Area%27%2C %27Public Sector%27 %27Residential and Commercial%27 %27Finance%27 %27Waste%27 %27Other%27%2C %27Disaster Risk Management %28Drm%29%27%5D" isContainer="True" shape="(23,)" />
<var name="wandb" type="module" qualifier="builtins" value="%3Cmodule %27wandb%27 from %27/home/stefan/anaconda3/envs/multi-label-classification-climate/lib/python3.9/site-packages/wandb/__init__.py%27&gt;" isContainer="True" />
<var name="y" type="ndarray" qualifier="numpy" value="%5B%5B1 1 0 0 1 0 0 0 0 0%5D%2C %5B0 0 0 0 0 1 0 0 0 0%5D%2C %5B0 0 1 0 0 0 0 0 0 0%5D%2C %5B0 1 0 0 0 0 0 0 0 0%5D%2C %5B0 0 0 0 0 0 0 1 0 0%5D%2C %5B0 1 0 0 0 0 0 0 0 0%5D%2C %5B0 1 0 0 0 0 0 0 0 0%5D%2C %5B0 1 0 0 0 0 0 0 0 0%5D%2C %5B0 1 0 0 0 1 0 0 0 0%5D%2C %5B1 0 0 0 0 0 0 0 0 0%5D%2C %5B0 1 1 0 0 0 0 0 0 0%5D%2C %5B0 1 0 0 0 0 0 0 0 0%5D%2C %5B0 1 1 0 0 0 0 0 0 0%5D%2C %5B0 0 0 0 0 0 0 1 0 0%5D%2C %5B0 1 1 0 0 0 0 0 0 0%5D%2C %5B0 1 1 0 0 1 0 0 0 0%5D%2C %5B0 0 0 0 0 1 0 0 0 0%5D%2C %5B0 0 1 0 0 1 0 0 0 0%5D%2C %5B0 0 0 0 0 0 0 0 0 1%5D%2C %5B0 1 0 0 0 0 0 0 0 0%5D%2C %5B0 0 1 0 0 0 0 0 0 0%5D%2C %5B0 0 0 0 0 0 1 0 0 0%5D%2C %5B0 0 0 0 0 1 0 0 0 0%5D%2C %5B0 1 0 0 0 0 0 0 0 0%5D%2C %5B0 1 0 0 0 0 0 0 0 0%5D%2C %5B0 0 1 0 0 0 0 0 0 0%5D%2C %5B0 1 0 0 0 0 0 0 0 0%5D%2C %5B0 1 0 0 0 0 0 0 0 0%5D%2C %5B0 0 0 0 0 0 0 1 0 0%5D%2C %5B0 1 0 0 0 0 0 0 0 0%5D%2C %5B0 0 1 0 0 0 0 0 0 0%5D%2C %5B0 1 0 0 0 0 0 0 0 0%5D%2C %5B0 1 0 0 0 0 0 0 0 0%5D%2C %5B0 0 1 0 0 0 0 0 0 0%5D%2C %5B0 1 0 0 0 0 0 0 0 0%5D%2C %5B0 0 1 0 0 0 0 0 0 0%5D%2C %5B0 1 0 0 0 0 0 0 0 0%5D%2C %5B0 1 1 0 0 0 0 0 0 0%5D%2C %5B0 0 1 0 0 0 0 0 0 0%5D%2C %5B0 0 1 0 0 0 0 0 0 0%5D%2C %5B0 0 1 0 0 0 0 1 0 0%5D%2C %5B0 0 1 0 0 0 0 0 0 0%5D%2C %5B0 0 1 0 0 0 1 1 0 0%5D%2C %5B1 0 0 0 0..." isContainer="True" shape="(1680, 10)" />
<var name="y_eda" type="ndarray" qualifier="numpy" value="%5B%5B1 1 0 0 1 0 0 0 0 0%5D%2C %5B0 0 0 0 0 1 0 0 0 0%5D%2C %5B0 0 1 0 0 0 0 0 0 0%5D%2C %5B0 1 0 0 0 0 0 0 0 0%5D%2C %5B0 0 0 0 0 0 0 1 0 0%5D%2C %5B0 1 0 0 0 0 0 0 0 0%5D%2C %5B0 1 0 0 0 0 0 0 0 0%5D%2C %5B0 1 0 0 0 0 0 0 0 0%5D%2C %5B0 1 0 0 0 1 0 0 0 0%5D%2C %5B1 0 0 0 0 0 0 0 0 0%5D%2C %5B0 1 1 0 0 0 0 0 0 0%5D%2C %5B0 1 0 0 0 0 0 0 0 0%5D%2C %5B0 1 1 0 0 0 0 0 0 0%5D%2C %5B0 0 0 0 0 0 0 1 0 0%5D%2C %5B0 1 1 0 0 0 0 0 0 0%5D%2C %5B0 1 1 0 0 1 0 0 0 0%5D%2C %5B0 0 0 0 0 1 0 0 0 0%5D%2C %5B0 0 1 0 0 1 0 0 0 0%5D%2C %5B0 0 0 0 0 0 0 0 0 1%5D%2C %5B0 1 0 0 0 0 0 0 0 0%5D%2C %5B0 0 1 0 0 0 0 0 0 0%5D%2C %5B0 0 0 0 0 0 1 0 0 0%5D%2C %5B0 0 0 0 0 1 0 0 0 0%5D%2C %5B0 1 0 0 0 0 0 0 0 0%5D%2C %5B0 1 0 0 0 0 0 0 0 0%5D%2C %5B0 0 1 0 0 0 0 0 0 0%5D%2C %5B0 1 0 0 0 0 0 0 0 0%5D%2C %5B0 1 0 0 0 0 0 0 0 0%5D%2C %5B0 0 0 0 0 0 0 1 0 0%5D%2C %5B0 1 0 0 0 0 0 0 0 0%5D%2C %5B0 0 1 0 0 0 0 0 0 0%5D%2C %5B0 1 0 0 0 0 0 0 0 0%5D%2C %5B0 1 0 0 0 0 0 0 0 0%5D%2C %5B0 0 1 0 0 0 0 0 0 0%5D%2C %5B0 1 0 0 0 0 0 0 0 0%5D%2C %5B0 0 1 0 0 0 0 0 0 0%5D%2C %5B0 1 0 0 0 0 0 0 0 0%5D%2C %5B0 1 1 0 0 0 0 0 0 0%5D%2C %5B0 0 1 0 0 0 0 0 0 0%5D%2C %5B0 0 1 0 0 0 0 0 0 0%5D%2C %5B0 0 1 0 0 0 0 1 0 0%5D%2C %5B0 0 1 0 0 0 0 0 0 0%5D%2C %5B0 0 1 0 0 0 1 1 0 0%5D%2C %5B1 0 0 0 0..." isContainer="True" shape="(1680, 10)" />
<var name="y_eda_df" type="DataFrame" qualifier="pandas.core.frame" value="Agriculture  Economy-wide  Energy  Health  Industry  LULUCF  %5C %5B0               1             1       0       0         1       0   %5D %5B1               0             0       0       0         0       1   %5D %5B2               0             0       1       0         0       0   %5D %5B3               0             1       0       0         0       0   %5D %5B4               0             0       0       0         0       0   %5D %5B...           ...           ...     ...     ...       ...     ...   %5D %5B1675            0             0       1       1         0       0   %5D %5B1676            0             0       0       0         0       0   %5D %5B1677            0             0       1       0         0       1   %5D %5B1678            0             0       1       0         0       0   %5D %5B1679            0             0       0       0         0       0   %5D %5B%5D %5B      Residential and Commercial  Transportation  Waste  Water  %5D %5B0                              0               0      0      0  %5D %5B1                              0         ...%5D" isContainer="True" shape="(1680, 10)" />
<var name="y_test" type="Series" qualifier="pandas.core.series" value="%281497%2C %27Energy%27%29 %281517%2C %27Economy-wide%27%29 %281244%2C %27Energy%27%29 %28249%2C %27Transportation%27%29 %28698%2C %27Energy%27%29 %281002%2C %27Economy-wide%27%29 %281757%2C %27Transportation%27%29 %28765%2C %27Energy%27%29 %281958%2C %27Energy%27%29 %281738%2C %27Economy-wide%27%29 %281091%2C %27Energy%27%29 %28893%2C %27Energy%27%29 %281328%2C %27LULUCF%27%29 %281869%2C %27Energy%27%29 %281257%2C %27Economy-wide%27%29 %28398%2C %27Transportation%27%29 %281326%2C %27Energy%27%29 %281550%2C %27Transportation%27%29 %28375%2C %27LULUCF%27%29 %28666%2C %27Energy%27%29 %281201%2C %27Energy%27%29 %281010%2C %27Energy%27%29 %281570%2C %27Transportation%27%29 %281199%2C %27Energy%27%29 %28979%2C %27Energy%27%29 %28112%2C %27Energy%27%29 %281928%2C %27Economy-wide%27%29 %28697%2C %27Residential and Commercial%27%29 %281112%2C %27Energy%27%29 %28583%2C %27LULUCF%27%29 %28484%2C %27Residential and Commercial%27%29 %281059%2C %27Energy%27%29 %281908%2C %27Energy%27%29 %28708%2C %27Economy-wide%27%29 %281953%2C %27Agriculture%27%29 %281214%2C %27Energy%27%29 %28438%2C %27Transportation%27%29 %28951%2C %27Energy%27%29 %281448%2C %27Transportation%27%29 %28762%2C %27Energy%27%29 %28795%2C %27Energy%27%29 %28918%2C %27Transportation%27%29 %281914%2C %27Energy%27%29 %281544%2C %27Agriculture%27%29 %28953%2C %27Economy-wide%27%29 %2895%2C %27Agriculture%27%29 %28700%2C %27LULUCF%27%29 %281222%2C %27Energy%27%29 %28294%2C %27Agriculture%27%29 %281100%2C %27Energy%27%29 %281217%2C %27Transportation%27%29 %281526%2C %27Transportation%27%29 %281041%2C %27Transportation%27%29 %281644%2C %27Energy%27%29 %2837%2C %27LULUCF%27%29 %28554%2C %27Energy%27%29 %281065%2C %27Energy%27%29 %2888%2C %27Energy%27%29 %281109%2C %27Energy%27%29 %28590%2C %27Energy%27%29 %28574%2C %27Energy%27%29 %28252%2C %27Agriculture%27%29 %28203%2C %27Water%27%29 %28165%2C %27LULUCF%27%29 %28619%2C %27Water%27%29 %281039%2C %27Economy-wide%27%29 %281237%2C %27Economy-wide%27%29 %28823%2C %27Energy%27%29 %28199%2C %27Energy%27%29 %28839%2C %27Energy%27%29 %281915%2C %27Energy%27%29 %281123%2C %27Economy-wide%27%29 %281489%2C %27Energy%27%29 %28964%2C %27Energy%27%29 %281139%2C %27Residential and Commercial%27%29 %28827%2C %27Health%27%29 %281725%2C %27Energy%27%29 %28247%2C %27Transportation%27%29 %281820%2C %27Transportation%27%29 %28232%2C %27Residential and Commercial%27%29 %28702%2C %27LULUCF%27%29 %281221%2C %27Transportation%27%29 %28602%2C %27Transportation%27%29 %28196%2C %27Transportation%27%29 %281624%2C %27Economy-wide%27%29 %28782%2C %27Economy-wide%27%29 %28145%2C %27Residential and Commercial%27%29 %28971%2C %27Energy%27%29 %28990%2C %27Energy%27%29 %28842%2C %27Energy%27%29 %281424%2C %27Economy-wide%27%29 %28502%2C %27Water%27%29 %28769%2C %27Economy-wide%27%29 %2819%2C %27Agriculture%27%29 %28671%2C %27Transportation%27%29 %2866%2C %27Energy%27%29 %281147%2C %27LULUCF%27%29 %281950%2C %27Economy-wide%27%29 %281656%2C %27Economy-wide%27%29 %28725%2C %27Energy%27%29" isContainer="True" shape="(249,)" />
<var name="y_train" type="Series" qualifier="pandas.core.series" value="%28946%2C %27Energy%27%29 %281077%2C %27Energy%27%29 %28753%2C %27Energy%27%29 %28917%2C %27Energy%27%29 %28966%2C %27Economy-wide%27%29 %281563%2C %27Transportation%27%29 %28420%2C %27Transportation%27%29 %28470%2C %27Transportation%27%29 %28776%2C %27Energy%27%29 %28347%2C %27Transportation%27%29 %28329%2C %27LULUCF%27%29 %281004%2C %27Energy%27%29 %281151%2C %27Economy-wide%27%29 %281780%2C %27Transportation%27%29 %281745%2C %27Economy-wide%27%29 %281115%2C %27LULUCF%27%29 %2842%2C %27Water%27%29 %28130%2C %27Energy%27%29 %28125%2C %27LULUCF%27%29 %28607%2C %27Energy%27%29 %281670%2C %27Transportation%27%29 %281541%2C %27Energy%27%29 %281102%2C %27Energy%27%29 %28631%2C %27Energy%27%29 %281225%2C %27Energy%27%29 %281641%2C %27Transportation%27%29 %28630%2C %27Energy%27%29 %281308%2C %27Energy%27%29 %281319%2C %27LULUCF%27%29 %28774%2C %27Economy-wide%27%29 %281243%2C %27Energy%27%29 %281899%2C %27Energy%27%29 %2851%2C %27LULUCF%27%29 %281155%2C %27Energy%27%29 %28771%2C %27Energy%27%29 %28904%2C %27Energy%27%29 %281189%2C %27Economy-wide%27%29 %28824%2C %27Energy%27%29 %281298%2C %27Transportation%27%29 %281209%2C %27Agriculture%27%29 %281335%2C %27Transportation%27%29 %281832%2C %27Energy%27%29 %2833%2C %27Transportation%27%29 %28764%2C %27Energy%27%29 %2863%2C %27Economy-wide%27%29 %28709%2C %27Economy-wide%27%29 %281291%2C %27Transportation%27%29 %281900%2C %27Energy%27%29 %281909%2C %27Transportation%27%29 %281044%2C %27Energy%27%29 %281579%2C %27Energy%27%29 %28680%2C %27Energy%27%29 %281743%2C %27Transportation%27%29 %28350%2C %27Energy%27%29 %28962%2C %27Energy%27%29 %28882%2C %27Industry%27%29 %281145%2C %27Industry%27%29 %28807%2C %27Energy%27%29 %28644%2C %27Energy%27%29 %281542%2C %27Transportation%27%29 %28956%2C %27Agriculture%27%29 %28580%2C %27LULUCF%27%29 %28246%2C %27Water%27%29 %281253%2C %27Energy%27%29 %28798%2C %27Energy%27%29 %28215%2C %27Water%27%29 %281150%2C %27Energy%27%29 %28650%2C %27Energy%27%29 %28790%2C %27Economy-wide%27%29 %28736%2C %27Energy%27%29 %28327%2C %27Agriculture%27%29 %281615%2C %27Energy%27%29 %28483%2C %27LULUCF%27%29 %28523%2C %27Transportation%27%29 %281566%2C %27Economy-wide%27%29 %28815%2C %27Energy%27%29 %28738%2C %27Energy%27%29 %283%2C %27LULUCF%27%29 %281927%2C %27Economy-wide%27%29 %28938%2C %27Economy-wide%27%29 %281655%2C %27LULUCF%27%29 %281067%2C %27Energy%27%29 %28800%2C %27Economy-wide%27%29 %281501%2C %27Transportation%27%29 %28477%2C %27Transportation%27%29 %28719%2C %27Energy%27%29 %28989%2C %27LULUCF%27%29 %281013%2C %27Agriculture%27%29 %28794%2C %27Economy-wide%27%29 %28892%2C %27Health%27%29 %281302%2C %27Transportation%27%29 %28569%2C %27Economy-wide%27%29 %281508%2C %27Energy%27%29 %281491%2C %27LULUCF%27%29 %281729%2C %27Energy%27%29 %281393%2C %27LULUCF%27%29 %28786%2C %27Transportation%27%29 %281331%2C %27Transportation%27%29 %28859%2C %27Energy%27%29 %28863%2C %27Transportation%27%29" isContainer="True" shape="(503,)" />
</xml>
<xml><var name="AutoTokenizer" type="type" qualifier="builtins" value="%3Cclass %27transformers.models.auto.tokenization_auto.AutoTokenizer%27&gt;" isContainer="True" />
<var name="BATCH_SIZE" type="int" qualifier="builtins" value="16" />
<var name="ClassifierChain" type="type" qualifier="builtins" value="%3Cclass %27skmultilearn.problem_transform.cc.ClassifierChain%27&gt;" isContainer="True" />
<var name="CountVectorizer" type="type" qualifier="builtins" value="%3Cclass %27sklearn.feature_extraction.text.CountVectorizer%27&gt;" isContainer="True" />
<var name="DummyClassifier" type="type" qualifier="builtins" value="%3Cclass %27sklearn.dummy.DummyClassifier%27&gt;" isContainer="True" />
<var name="GradientBoostingClassifier" type="ABCMeta" qualifier="abc" value="%3Cclass %27sklearn.ensemble._gb.GradientBoostingClassifier%27&gt;" isContainer="True" />
<var name="GridSearchCV" type="ABCMeta" qualifier="abc" value="%3Cclass %27sklearn.model_selection._search.GridSearchCV%27&gt;" isContainer="True" />
<var name="HOLD_OUT_PERCENTAGE" type="int" qualifier="builtins" value="10" />
<var name="HUGGINGFACE_CONFIG" type="str" qualifier="builtins" value="distilbert-base-cased" />
<var name="ITERATIVE_STRAT_ORDER" type="int" qualifier="builtins" value="1" />
<var name="In" type="list" qualifier="builtins" value="%5B%27%27%2C %22import sys%5Cn%5Cn%5Cn%5Cnget_ipython%28%29.run_line_magic%28%27load_ext%27%2C %27autoreload%27%29%5Cnget_ipython%28%29.run_line_magic%28%27autoreload%27%2C %272%27%29%22%2C %27from src.sklearn_utils import iter_train_test_split%2C simple_feature_engineering%5Cnfrom sklearn.ensemble import GradientBoostingClassifier%27%2C %27import pandas as pd%5Cnimport numpy as np%5Cnimport os%5Cnimport plotly.express as px%5Cnfrom skmultilearn.model_selection import IterativeStratification%5Cnfrom sklearn.model_selection import train_test_split%5Cnfrom sklearn.preprocessing import MultiLabelBinarizer%5Cnfrom sklearn.dummy import DummyClassifier%5Cnfrom sklearn.metrics import hamming_loss%5Cnimport seaborn as sns%5Cn%5Cnfrom sklearn.feature_extraction.text import TfidfVectorizer%5Cn%5Cnfrom yellowbrick.text import TSNEVisualizer%5Cnfrom yellowbrick.datasets import load_hobbies%5Cn%23 import tensorflow_addons as tfa%5Cnfrom sklearn.metrics import hamming_loss%5Cn%5Cnfrom skmultilearn.problem_transform import ClassifierChain%5Cnfrom sklearn.metrics import hamming_loss%2C accuracy_score%2C make_scorer..." isContainer="True" shape="29" isIPythonHidden="True" />
<var name="IterativeStratification" type="ABCMeta" qualifier="abc" value="%3Cclass %27skmultilearn.model_selection.iterative_stratification.IterativeStratification%27&gt;" isContainer="True" />
<var name="KEEP_MOST_COMMON_LABELS" type="int" qualifier="builtins" value="10" />
<var name="Lasso" type="ABCMeta" qualifier="abc" value="%3Cclass %27sklearn.linear_model._coordinate_descent.Lasso%27&gt;" isContainer="True" />
<var name="MultiLabelBinarizer" type="type" qualifier="builtins" value="%3Cclass %27sklearn.preprocessing._label.MultiLabelBinarizer%27&gt;" isContainer="True" />
<var name="MultinomialNB" type="ABCMeta" qualifier="abc" value="%3Cclass %27sklearn.naive_bayes.MultinomialNB%27&gt;" isContainer="True" />
<var name="Out" type="dict" qualifier="builtins" value="%7B5%3A %27/home/stefan/PycharmProjects/multi-label-classification-climate/notebooks%27%2C 7%3A    policy_id                       policy_title  %5C%0A0      10088     Circular economy promotion law   %0A1      10087                14th Five-Year Plan   %0A2      10046             National Forest Policy   %0A3      10044   Suriname National REDD%2B Strategy   %0A4      10042  Policy Development Plan 2017-2021   %0A%0A                                             sectors  %5C%0A0                  Industry%3BAgriculture%3BEconomy-wide   %0A1  Transportation%3BRural%3BLULUCF%3BEnergy%3BEconomy-wid...   %0A2                                             LULUCF   %0A3                                             LULUCF   %0A4                                       Economy-wide   %0A%0A                                    description_text  %0A0  This law promotes the development of a circula...  %0A1  The 14th Five Year Plan lays down the strategy...  %0A2  This document aims at protecting the country%27s...  %0A3  This document aims to protect Suriname%27s fores......" isContainer="True" shape="11" isIPythonHidden="True" />
<var name="Path" type="type" qualifier="builtins" value="%3Cclass %27pathlib.Path%27&gt;" isContainer="True" />
<var name="Pipeline" type="ABCMeta" qualifier="abc" value="%3Cclass %27sklearn.pipeline.Pipeline%27&gt;" isContainer="True" />
<var name="SEED" type="int" qualifier="builtins" value="42" />
<var name="TEST_SET_FRAC" type="float" qualifier="builtins" value="0.1" />
<var name="TRAIN_FRACTION" type="float" qualifier="builtins" value="0.9" />
<var name="TSNEVisualizer" type="type" qualifier="builtins" value="%3Cclass %27yellowbrick.text.tsne.TSNEVisualizer%27&gt;" isContainer="True" />
<var name="TextFeatureEngineering" type="type" qualifier="builtins" value="%3Cclass %27src.sklearn_utils.TextFeatureEngineering%27&gt;" isContainer="True" />
<var name="TfidfVectorizer" type="type" qualifier="builtins" value="%3Cclass %27sklearn.feature_extraction.text.TfidfVectorizer%27&gt;" isContainer="True" />
<var name="Tuple" type="_TupleType" qualifier="typing" value="typing.Tuple" isContainer="True" />
<var name="X" type="DataFrame" qualifier="pandas.core.frame" value="policy_id                                       policy_title  %5C %5B0         10088                     Circular economy promotion law   %5D %5B3         10044                   Suriname National REDD%2B Strategy   %5D %5B5         10049                               Energy Strategy 2050   %5D %5B6         10051                   Long-Term Climate Strategy%2C 2021   %5D %5B9         10054  Environmentally Sustainable Transport System P...   %5D %5B...         ...                                                ...   %5D %5B1955       8835  National Climate Change Strategy and Action Pl...   %5D %5B1956       9110                 National Policy for Climate Change   %5D %5B1957       9191  Presidential Decree 7/2019 establishing the na...   %5D %5B1958       8889  Act No. 28 of 1972 concerning nuclear energy a...   %5D %5B1959       8887  Natural Hazards Compensation Act %28No. 59 of 2014%29   %5D %5B%5D %5B                                       description_text  %5C%5D %5B0     This law promotes the development of a circula...   %5D %5B3     This document aims to protect Surin...%5D" isContainer="True" shape="(1680, 14)" />
<var name="X_test" type="DataFrame" qualifier="pandas.core.frame" value="description_text  %5C %5B1497  The Enemalta %28Transfer of Assets%2C Rights%2C Liab...   %5D %5B1517  The National Climate Change Policy%2C published ...   %5D %5B1244  This document sets the remuneration framework ...   %5D %5B249   This document sets the government%27s National T...   %5D %5B698   This document sets the government%27s energy pol...   %5D %5B...                                                 ...   %5D %5B1704  The goal of this regulation is to grant financ...   %5D %5B598   This law commits Ireland%27s national treasury t...   %5D %5B1533  The Democratic Republic of Congo%27s Disaster Re...   %5D %5B1903  The Small and Medium-sized Power Plant Act was...   %5D %5B240   The Strategic Investment Framework for Environ...   %5D %5B%5D %5B                                           policy_title  %5C%5D %5B1497  ACT No. XXXIV of 2014 and associated feed-in t...   %5D %5B1517            Myanmar National Climate Change Policy    %5D %5B1244  Royal Decree 960/2020 regulating the economic ...   %5D %5B249   National Transport Plan 2018-2029 %28Meld. St. 3......%5D" isContainer="True" shape="(249, 3)" />
<var name="X_train" type="DataFrame" qualifier="pandas.core.frame" value="description_text  %5C %5B946   This Act establishes the Energy Market Authori...   %5D %5B1077  This Act creates the Energy and Climate Fund. ...   %5D %5B753   This Strategy%2C developed in partnership with U...   %5D %5B917   Energy efficiency labelling requirements are s...   %5D %5B966   The law provided a legal framework to set up a...   %5D %5B...                                                 ...   %5D %5B220   South Africa%27s Sectoral Cold Spell Management ...   %5D %5B422   The Energy Efficiency Action Plan 2011%3F2020 le...   %5D %5B789   This law states that the State shall provide t...   %5D %5B1125  The Strategy aims to develop a sustainable ene...   %5D %5B404   The main objectives of Law 1391-V are to%3A %5Cn- ...   %5D %5B%5D %5B                                           policy_title  %5C%5D %5B946   Energy Market Authority of Singapore Act %28Chap...   %5D %5B1077                 Energy and Climate Fund Act %28EKFG%29   %5D %5B753   Decentralized Rural Electrification Strategy %28...   %5D %5B917   Energy Resources Regulations %28Energy labeling ......%5D" isContainer="True" shape="(503, 3)" />
<var name="_" type="dict" qualifier="builtins" value="%7B%27classifier%27%3A RandomForestClassifier%28%29%2C %27classifier__bootstrap%27%3A True%2C %27classifier__ccp_alpha%27%3A 0.0%2C %27classifier__class_weight%27%3A None%2C %27classifier__criterion%27%3A %27gini%27%2C %27classifier__max_depth%27%3A None%2C %27classifier__max_features%27%3A %27auto%27%2C %27classifier__max_leaf_nodes%27%3A None%2C %27classifier__max_samples%27%3A None%2C %27classifier__min_impurity_decrease%27%3A 0.0%2C %27classifier__min_samples_leaf%27%3A 1%2C %27classifier__min_samples_split%27%3A 2%2C %27classifier__min_weight_fraction_leaf%27%3A 0.0%2C %27classifier__n_estimators%27%3A 100%2C %27classifier__n_jobs%27%3A None%2C %27classifier__oob_score%27%3A False%2C %27classifier__random_state%27%3A None%2C %27classifier__verbose%27%3A 0%2C %27classifier__warm_start%27%3A False%2C %27require_dense%27%3A %5BTrue%2C True%5D%2C %27order%27%3A None%7D" isContainer="True" shape="21" isIPythonHidden="True" />
<var name="_11" type="DataFrame" qualifier="pandas.core.frame" value="num_labels  cumulative_positive_labels  %5C %5BEnergy                                1143                        1143   %5D %5BTransportation                         761                        1904   %5D %5BLULUCF                                 398                        2302   %5D %5BEconomy-wide                           366                        2668   %5D %5BResidential and Commercial             351                        3019   %5D %5BAgriculture                            305                        3324   %5D %5BWater                                  297                        3621   %5D %5BIndustry                               238                        3859   %5D %5BWaste                                  177                        4036   %5D %5BHealth                                 158                        4194   %5D %5BEnvironment                            127                        4321   %5D %5BUrban                                   73                        4394   %5D %5BBuildings                             ...%5D" isContainer="True" shape="(23, 3)" isIPythonHidden="True" />
<var name="_12" type="Figure" qualifier="plotly.graph_objs._figure" value="Figure%28%7B%0A    %27data%27%3A %5B%7B%27alignmentgroup%27%3A %27True%27%2C%0A              %27hovertemplate%27%3A %27index=%25%7Bx%7D%3Cbr&gt;num_labels=%25%7By%7D%3Cextra&gt;%3C/extra&gt;%27%2C%0A              %27legendgroup%27%3A %27%27%2C%0A              %27marker%27%3A %7B%27color%27%3A %27%23636efa%27%2C %27pattern%27%3A %7B%27shape%27%3A %27%27%7D%7D%2C%0A              %27name%27%3A %27%27%2C%0A              %27offsetgroup%27%3A %27%27%2C%0A              %27orientation%27%3A %27v%27%2C%0A              %27showlegend%27%3A False%2C%0A              %27textposition%27%3A %27auto%27%2C%0A              %27type%27%3A %27bar%27%2C%0A              %27x%27%3A array%28%5B%27Energy%27%2C %27Transportation%27%2C %27LULUCF%27%2C %27Economy-wide%27%2C%0A                          %27Residential and Commercial%27%2C %27Agriculture%27%2C %27Water%27%2C %27Industry%27%2C%0A                          %27Waste%27%2C %27Health%27%2C %27Environment%27%2C %27Urban%27%2C %27Buildings%27%2C %27Tourism%27%2C%0A                          %27Social development%27%2C %27Disaster Risk Management %28Drm%29%27%2C %27Coastal zones%27%2C%0A                          %27Rural%27%2C %27Adaptation%27%2C %27Cross Cutting Area%27%2C %27Public Sector%27%2C %27Other%27%2C%0A                          %27Finance%27%5D%2C dtype=object%29%2C%0A              %27xaxis%27%3A %27x%27%2C%0A              %27y%27%3A array%28%5B1143..." isContainer="True" isIPythonHidden="True" />
<var name="_13" type="AxesSubplot" qualifier="matplotlib.axes._subplots" value="AxesSubplot%280.125%2C0.125%3B0.62x0.755%29" isContainer="True" isIPythonHidden="True" />
<var name="_14" type="Figure" qualifier="plotly.graph_objs._figure" value="Figure%28%7B%0A    %27data%27%3A %5B%7B%27alignmentgroup%27%3A %27True%27%2C%0A              %27bingroup%27%3A %27x%27%2C%0A              %27hovertemplate%27%3A %27variable=sectors_list%3Cbr&gt;value=%25%7Bx%7D%3Cbr&gt;count=%25%7By%7D%3Cextra&gt;%3C/extra&gt;%27%2C%0A              %27legendgroup%27%3A %27sectors_list%27%2C%0A              %27marker%27%3A %7B%27color%27%3A %27%23636efa%27%2C %27pattern%27%3A %7B%27shape%27%3A %27%27%7D%7D%2C%0A              %27name%27%3A %27sectors_list%27%2C%0A              %27offsetgroup%27%3A %27sectors_list%27%2C%0A              %27orientation%27%3A %27v%27%2C%0A              %27showlegend%27%3A True%2C%0A              %27type%27%3A %27histogram%27%2C%0A              %27x%27%3A array%28%5B3%2C 6%2C 1%2C ...%2C 5%2C 1%2C 1%5D%29%2C%0A              %27xaxis%27%3A %27x%27%2C%0A              %27yaxis%27%3A %27y%27%7D%5D%2C%0A    %27layout%27%3A %7B%27barmode%27%3A %27relative%27%2C%0A               %27legend%27%3A %7B%27title%27%3A %7B%27text%27%3A %27variable%27%7D%2C %27tracegroupgap%27%3A 0%7D%2C%0A               %27template%27%3A %27...%27%2C%0A               %27title%27%3A %7B%27text%27%3A %27num labels per instance%27%7D%2C%0A               %27xaxis%27%3A %7B%27anchor%27%3A %27y%27%2C %27domain%27%3A %5B0.0%2C 1.0%5D%2C %27title%27%3A %7B%27text%27%3A %27value%27%7D%7D%2C%0A               %27yaxis%27%3A %7B%27anchor%27%3A %27x%27%2C %27domain%27%3A %5B0.0%2C 1.0%5D%2C %27title%27%3A %7B%27text%27%3A %27count%27%7D%7D%7D%0A%7D%29" isContainer="True" isIPythonHidden="True" />
<var name="_15" type="Series" qualifier="pandas.core.series" value="%28%27Energy%27%2C 365%29 %28%27Economy-wide%27%2C 144%29 %28%27Transportation%3BEnergy%27%2C 117%29 %28%27Transportation%27%2C 112%29 %28%27Energy%3BResidential and Commercial%27%2C 63%29 %28%27LULUCF%27%2C 58%29 %28%27Transportation%3BEnergy%3BResidential and Commercial%27%2C 30%29 %28%27Agriculture%27%2C 26%29 %28%27Transportation%3BLULUCF%27%2C 24%29 %28%27Industry%3BEnergy%27%2C 24%29" isContainer="True" shape="(10,)" isIPythonHidden="True" />
<var name="_18" type="AxesSubplot" qualifier="matplotlib.axes._subplots" value="AxesSubplot%280.125%2C0.125%3B0.62x0.755%29" isContainer="True" isIPythonHidden="True" />
<var name="_24" type="Run" qualifier="wandb.sdk.wandb_run" value="%3Cwandb.sdk.wandb_run.Run object at 0x7fdea06a8400&gt;" isContainer="True" isIPythonHidden="True" />
<var name="_26" type="dict" qualifier="builtins" value="%7B%27memory%27%3A None%2C %27steps%27%3A %5B%28%27features%27%2C FeatureUnion%28transformer_list=%5B%28%27pipeline_text%27%2C%0A                                Pipeline%28steps=%5B%28%27select_text_col%27%2C%0A                                                 FunctionTransformer%28func=%3Cfunction select_col at 0x7fdf1be14310&gt;%29%29%2C%0A                                                %28%27tfidf%27%2C%0A                                                 TfidfVectorizer%28lowercase=False%2C%0A                                                                 max_df=0.5%2C%0A                                                                 stop_words=%27english%27%29%29%5D%29%29%2C%0A                               %28%27feature_engineering%27%2C%0A                                TextFeatureEngineering%28%29%29%5D%29%29%2C %28%27clf%27%2C ClassifierChain%28classifier=RandomForestClassifier%28%29%2C require_dense=%5BTrue%2C True%5D%29%29%5D%2C %27verbose%27%3A False%2C %27features%27%3A FeatureUnion%28transformer_list=%5B%28%27pipeline_text%27%2C%0A                                Pipeline%28steps=%5B%28%27select_text_col%27%2C%0A                                                 FunctionTran..." isContainer="True" shape="66" isIPythonHidden="True" />
<var name="_27" type="dict" qualifier="builtins" value="%7B%27classifier%27%3A RandomForestClassifier%28%29%2C %27classifier__bootstrap%27%3A True%2C %27classifier__ccp_alpha%27%3A 0.0%2C %27classifier__class_weight%27%3A None%2C %27classifier__criterion%27%3A %27gini%27%2C %27classifier__max_depth%27%3A None%2C %27classifier__max_features%27%3A %27auto%27%2C %27classifier__max_leaf_nodes%27%3A None%2C %27classifier__max_samples%27%3A None%2C %27classifier__min_impurity_decrease%27%3A 0.0%2C %27classifier__min_samples_leaf%27%3A 1%2C %27classifier__min_samples_split%27%3A 2%2C %27classifier__min_weight_fraction_leaf%27%3A 0.0%2C %27classifier__n_estimators%27%3A 100%2C %27classifier__n_jobs%27%3A None%2C %27classifier__oob_score%27%3A False%2C %27classifier__random_state%27%3A None%2C %27classifier__verbose%27%3A 0%2C %27classifier__warm_start%27%3A False%2C %27require_dense%27%3A %5BTrue%2C True%5D%2C %27order%27%3A None%7D" isContainer="True" shape="21" isIPythonHidden="True" />
<var name="_5" type="str" qualifier="builtins" value="/home/stefan/PycharmProjects/multi-label-classification-climate/notebooks" isIPythonHidden="True" />
<var name="_7" type="DataFrame" qualifier="pandas.core.frame" value="policy_id                       policy_title  %5C %5B0      10088     Circular economy promotion law   %5D %5B1      10087                14th Five-Year Plan   %5D %5B2      10046             National Forest Policy   %5D %5B3      10044   Suriname National REDD%2B Strategy   %5D %5B4      10042  Policy Development Plan 2017-2021   %5D %5B%5D %5B                                             sectors  %5C%5D %5B0                  Industry%3BAgriculture%3BEconomy-wide   %5D %5B1  Transportation%3BRural%3BLULUCF%3BEnergy%3BEconomy-wid...   %5D %5B2                                             LULUCF   %5D %5B3                                             LULUCF   %5D %5B4                                       Economy-wide   %5D %5B%5D %5B                                    description_text  %5D %5B0  This law promotes the development of a circula...  %5D %5B1  The 14th Five Year Plan lays down the strategy...  %5D %5B2  This document aims at protecting the country%27s...  %5D %5B3  This document aims to protect Suriname%27s fores...  %5D %5B4  This document lays out the country%27s developme...  %5D" isContainer="True" shape="(5, 4)" isIPythonHidden="True" />
<var name="__" type="dict" qualifier="builtins" value="%7B%27memory%27%3A None%2C %27steps%27%3A %5B%28%27features%27%2C FeatureUnion%28transformer_list=%5B%28%27pipeline_text%27%2C%0A                                Pipeline%28steps=%5B%28%27select_text_col%27%2C%0A                                                 FunctionTransformer%28func=%3Cfunction select_col at 0x7fdf1be14310&gt;%29%29%2C%0A                                                %28%27tfidf%27%2C%0A                                                 TfidfVectorizer%28lowercase=False%2C%0A                                                                 max_df=0.5%2C%0A                                                                 stop_words=%27english%27%29%29%5D%29%29%2C%0A                               %28%27feature_engineering%27%2C%0A                                TextFeatureEngineering%28%29%29%5D%29%29%2C %28%27clf%27%2C ClassifierChain%28classifier=RandomForestClassifier%28%29%2C require_dense=%5BTrue%2C True%5D%29%29%5D%2C %27verbose%27%3A False%2C %27features%27%3A FeatureUnion%28transformer_list=%5B%28%27pipeline_text%27%2C%0A                                Pipeline%28steps=%5B%28%27select_text_col%27%2C%0A                                                 FunctionTran..." isContainer="True" shape="66" isIPythonHidden="True" />
<var name="___" type="Run" qualifier="wandb.sdk.wandb_run" value="%3Cwandb.sdk.wandb_run.Run object at 0x7fdea06a8400&gt;" isContainer="True" isIPythonHidden="True" />
<var name="__builtin__" type="module" qualifier="builtins" value="%3Cmodule %27builtins%27 %28built-in%29&gt;" isContainer="True" isIPythonHidden="True" />
<var name="__builtins__" type="module" qualifier="builtins" value="%3Cmodule %27builtins%27 %28built-in%29&gt;" isContainer="True" isIPythonHidden="True" />
<var name="__doc__" type="str" qualifier="builtins" value="Automatically created module for IPython interactive environment" isIPythonHidden="True" />
<var name="__loader__" type="NoneType" qualifier="builtins" value="None" isIPythonHidden="True" />
<var name="__name__" type="str" qualifier="builtins" value="__main__" isIPythonHidden="True" />
<var name="__package__" type="NoneType" qualifier="builtins" value="None" isIPythonHidden="True" />
<var name="__spec__" type="NoneType" qualifier="builtins" value="None" isIPythonHidden="True" />
<var name="_dh" type="list" qualifier="builtins" value="%5BPosixPath%28%27/home/stefan/PycharmProjects/multi-label-classification-climate/notebooks%27%29%5D" isContainer="True" shape="1" isIPythonHidden="True" />
<var name="_i" type="str" qualifier="builtins" value="full_pipe_rf.named_steps%5B%27clf%27%5D.get_params%28%29" isIPythonHidden="True" />
<var name="_i1" type="str" qualifier="builtins" value="import sys%0A%0A%0A%0A%25load_ext autoreload%0A%25autoreload 2" isIPythonHidden="True" />
<var name="_i10" type="str" qualifier="builtins" value="%23 Let%27s analyse the labels.%0Alabels_flattened=df%5B%27sectors_list%27%5D.explode%28%29%0Aunique_labels=labels_flattened.unique%28%29%0An_unique_labels=len%28unique_labels%29%0Aprint%28f%22There are %7Bn_unique_labels%7D classes with possible labels%3A %5Cn %7Bunique_labels%7D%22%29" isIPythonHidden="True" />
<var name="_i11" type="str" qualifier="builtins" value="%23 What are the cumulative totals for each label%3F%0Anum_instances_each_label=labels_flattened.value_counts%28%29%0Atotal_positive_labels=num_instances_each_label.sum%28%29%0Acumulative_sum=num_instances_each_label.cumsum%28%29%0Afraction_dataset_covered=cumulative_sum/total_positive_labels%0Adf_labels=pd.DataFrame%28%7B%27num_labels%27%3A num_instances_each_label%2C%0A                        %27cumulative_positive_labels%27%3A cumulative_sum%2C %0A                        %27cumulative_fraction_dataset_covered%27%3A fraction_dataset_covered%7D%29%0Adf_labels" isIPythonHidden="True" />
<var name="_i12" type="str" qualifier="builtins" value="px.bar%28df_labels%2C x=df_labels.index%2C y=%27num_labels%27%2C title=%27label distribution%27%29" isIPythonHidden="True" />
<var name="_i13" type="str" qualifier="builtins" value="%23 12 most under represented labels.%0Aunderrepresented_labels=df_labels%5B11%3A%5D.index%0A%0Amlb=MultiLabelBinarizer%28%29%0Ay = mlb.fit_transform%28df%5B%27sectors_list%27%5D%29%0A%23 Now let%27s look at the correlations between labels.%0Asns.heatmap%28pd.DataFrame%28y%2C columns=mlb.classes_%29.corr%28%29.loc%5Bunderrepresented_labels%5D%29" isIPythonHidden="True" />
<var name="_i14" type="str" qualifier="builtins" value="px.histogram%28df%5B%27sectors_list%27%5D.apply%28len%29%2C title=%27num labels per instance%27%29" isIPythonHidden="True" />
<var name="_i15" type="str" qualifier="builtins" value="%23 Let%27s also check if there are any labels with an especially high number of classes such that we could change this to a multi-class problem%0A%23 instead of a multi-label problem.%0Adf%5B%27sectors%27%5D.value_counts%28%29.head%2810%29" isIPythonHidden="True" />
<var name="_i16" type="str" qualifier="builtins" value="common_labels=df_labels.index%5B0%3AKEEP_MOST_COMMON_LABELS%5D%0A%0A%23 Only keep sectors in top n labels%0Adf%5B%27sectors_list%27%5D = df%5B%27sectors_list%27%5D.apply%28lambda x%3A %5Btag for tag in x if tag in common_labels%5D%29%0Adf_filtered = df.copy%28%29%5Bdf%5B%27sectors_list%27%5D.str.len%28%29&gt;0%5D%0Adf_filtered.drop%28columns=%27sectors%27%2Cinplace=True%29" isIPythonHidden="True" />
<var name="_i17" type="str" qualifier="builtins" value="y = mlb.fit_transform%28df_filtered%5B%27sectors_list%27%5D%29%0A%0A%23 Split%0Adf_eda%2C df_test%2C y_eda%2C y_test = iter_train_test_split%28%0A    df_filtered%2C y%2C train_size=1-TEST_SET_FRAC%29%0A%0A%0Ay_eda_df = pd.DataFrame%28y_eda%2C columns = mlb.classes_%29" isIPythonHidden="True" />
<var name="_i18" type="str" qualifier="builtins" value="%23 Now let%27s look at the correlations between labels.%0Asns.heatmap%28y_eda_df.corr%28%29%29" isIPythonHidden="True" />
<var name="_i19" type="str" qualifier="builtins" value="%23 Let%27s do a quick analysis of a bunch of statistics from the text columns. %0A%0Adf_eda=df_eda.copy%28%29 %23 Suppress warnings%0Adf_eda%5B%27full_text%27%5D= df_eda%5B%27policy_title%27%5D%2B%27%3A %27%2Bdf_eda%5B%27description_text%27%5D %23 Concat text columns%0A%0Atext_cols=%5B%27description_text%27%2C %27policy_title%27%2C %27full_text%27%5D%0Atext_cols_n_words = %5Bf%27%7Bx%7D_nwords%27 for x in text_cols%5D%0Afor col in text_cols%3A%0A    df_eda%5Bf%27%7Bcol%7D_nwords%27%5D=df_eda%5Bcol%5D.str.split%28%29.str.len%28%29%0A    %0Adef subplot_helper%28cols%3A list%29 -&gt; None%3A%0A    fig=make_subplots%283%2C1%2C subplot_titles=cols%29%0A    for i%2C col in enumerate%28cols%29%3A%0A        trace=go.Histogram%28x=df_eda%5Bcol%5D%29%0A        fig.append_trace%28trace%2C i%2B1%2C1%29%0A    %0A    fig.update_layout%28height=700%2C width=800%29%0A    fig.show%28%29%0A%0Asubplot_helper%28text_cols_n_words%29" isIPythonHidden="True" />
<var name="_i2" type="str" qualifier="builtins" value="from src.sklearn_utils import iter_train_test_split%2C simple_feature_engineering%0Afrom sklearn.ensemble import GradientBoostingClassifier" isIPythonHidden="True" />
<var name="_i20" type="str" qualifier="builtins" value="tokenizer = AutoTokenizer.from_pretrained%28%27distilbert-base-cased%27%29%0Afor col in text_cols%3A%0A    df_eda%5Bf%27%7Bcol%7D_tokens%27%5D=df_eda%5Bcol%5D.apply%28lambda x%3A tokenizer.tokenize%28x%29%29%0A    df_eda%5Bf%27%7Bcol%7D_ntokens%27%5D=df_eda%5Bf%27%7Bcol%7D_tokens%27%5D.str.len%28%29%0A%0Atext_cols_n_tokens = %5Bf%27%7Bx%7D_ntokens%27 for x in text_cols%5D%0Asubplot_helper%28text_cols_n_tokens%29" isIPythonHidden="True" />
<var name="_i21" type="str" qualifier="builtins" value="%23 Let%27s see what happens if we subset the dataset so that it only contains rows with a single label%0A%23 and visualise the separation between classes to get%0Adf_single_label=df_eda%5Bdf_eda%5B%27sectors_list%27%5D.apply%28len%29==1%5D%0AX%2C y = df_single_label%5B%5B%27description_text%27%2C%27policy_title%27%2C%27full_text%27%5D%5D%2C df_single_label%5B%27sectors_list%27%5D.apply%28lambda x%3A x%5B0%5D%29%0AX_train%2C X_test%2C y_train%2C y_test = train_test_split%28%0A     X%2C y%2C test_size=0.33%2C random_state=SEED%29%0A%0Adef tsne_plot%28X_train%2C X_test%2C y_train%2C y_test%2C col%3A str%29%3A%0A    %22%22%22%0A    Helper to plot tsne visualisations on train and test set for a tfidf transformed column.%0A    %22%22%22%0A    tfidf = TfidfVectorizer%28%29%0A    tfidf.fit_transform%28X_train%5Bcol%5D%29%0A    train_features = tfidf.transform%28X_train%5Bcol%5D%29%0A    test_features = tfidf.transform%28X_test%5Bcol%5D%29%0A    tsne_train = TSNEVisualizer%28decompose_by=24%2C title=f%27Train set%3A %7Bcol%7D%27%29%0A    tsne_train.fit%28train_features%2C y_train%29%0A    tsne_train.show%28%29%0A    tsne_test = TSNEVisualizer%28decompose_by=24%2C title=f%27Test set%3A %7Bcol%7D%27%29%0A    ts..." isIPythonHidden="True" />
<var name="_i22" type="str" qualifier="builtins" value="from src.sklearn_utils import TextFeatureEngineering%2C select_col%2C construct_pipeline" isIPythonHidden="True" />
<var name="_i23" type="str" qualifier="builtins" value="X%2C y = df_eda%2C mlb.fit_transform%28df_eda%5B%27sectors_list%27%5D%29" isIPythonHidden="True" />
<var name="_i24" type="str" qualifier="builtins" value="import wandb%0Awandb.init%28project=%22climate-multi-label-classification%22%2C entity=%22stefl14%22%29" isIPythonHidden="True" />
<var name="_i25" type="str" qualifier="builtins" value="def select_col%28df%2C col=%27full_text%27%29%3A %23 lambda%27s not picklable%2C hence this one liner.%0A    return df%5Bcol%5D%0A%0Afull_pipe_rf=construct_pipeline%28%29%0Afull_pipe_gb=construct_pipeline%28clf=GradientBoostingClassifier%28%29%29%0A%0A%23 cv_score=cross_val_score%28full_pipe_rf%2C X%2C y%2C scoring=make_scorer%28hamming_loss%29%2C cv=5%2C error_score=%27raise%27%29%0A%23%0A%23 %23 fit full_pipe and log the results.%0A%23 full_pipe_rf.fit%28X%2C y%29%0A%23 wandb.log%28%7B%27cv_score%27%3A cv_score.mean%28%29%2C %27cv_std%27%3A cv_score.std%28%29%7D%29" isIPythonHidden="True" />
<var name="_i26" type="str" qualifier="builtins" value="full_pipe_rf.get_params%28%29" isIPythonHidden="True" />
<var name="_i27" type="str" qualifier="builtins" value="full_pipe_rf.named_steps%5B%27clf%27%5D.get_params%28%29" isIPythonHidden="True" />
<var name="_i28" type="str" qualifier="builtins" value="from sklearn.model_selection import GridSearchCV%0A%0Aparam_grid_random_forest = %7B%27clf__classifier__n_estimators%27%3A%5B100%2C 200%5D%7D%0Agrid = GridSearchCV%28full_pipe_rf%2C param_grid=param_grid_random_forest%2C scoring=make_scorer%28hamming_loss%29%2C cv=5%2C error_score=%27raise%27%29%0A%23 Do grid search and log the results.%0Agrid.fit%28X%2C y%29%0Awandb.log%28%7B%27grid_score%27%3A grid.best_score_%2C %27grid_std%27%3A grid.cv_results_%5B%27std_test_score%27%5D%5Bgrid.best_index_%5D%7D%29" isIPythonHidden="True" />
<var name="_i3" type="str" qualifier="builtins" value="import pandas as pd%0Aimport numpy as np%0Aimport os%0Aimport plotly.express as px%0Afrom skmultilearn.model_selection import IterativeStratification%0Afrom sklearn.model_selection import train_test_split%0Afrom sklearn.preprocessing import MultiLabelBinarizer%0Afrom sklearn.dummy import DummyClassifier%0Afrom sklearn.metrics import hamming_loss%0Aimport seaborn as sns%0A%0Afrom sklearn.feature_extraction.text import TfidfVectorizer%0A%0Afrom yellowbrick.text import TSNEVisualizer%0Afrom yellowbrick.datasets import load_hobbies%0A%23 import tensorflow_addons as tfa%0Afrom sklearn.metrics import hamming_loss%0A%0Afrom skmultilearn.problem_transform import ClassifierChain%0Afrom sklearn.metrics import hamming_loss%2C accuracy_score%2C make_scorer%0Afrom sklearn.feature_extraction.text import CountVectorizer%2C TfidfVectorizer%0Afrom sklearn.naive_bayes import MultinomialNB%0Afrom sklearn.pipeline import Pipeline%0Afrom sklearn.linear_model import Lasso%0Afrom sklearn.model_selection import cross_val_score%0Afrom datetime import time%0A%0Afrom trans..." isIPythonHidden="True" />
<var name="_i4" type="str" qualifier="builtins" value="def create_tokenized_ds%28%0A    X%2C y%2C text_column=%22description_text%22%2C model_name=%22bert-base-cased%22%2C batch_size=16%0A%29%3A%0A    y = np.array%28y%2C dtype=%22int32%22%29%0A    X = X%5Btext_column%5D%0A    tokens = tokenizer%28%0A        list%28X%29%2C%0A        padding=%22max_length%22%2C%0A        truncation=True%2C%0A        return_tensors=%22tf%22%2C%0A        return_token_type_ids=False%2C%0A    %29%0A    tokens_w_labels = tokens.copy%28%29%0A    tokens_w_labels%5B%22target%22%5D = y%0A    tf_dataset = tf.data.Dataset.from_tensor_slices%28%28dict%28tokens_w_labels%29%2C y%29%29%0A    tf_dataset = tf_dataset.shuffle%28len%28tf_dataset%29%29.batch%28batch_size%29%0A    return tf_dataset%0A%0A%0Aimport keras%0A%0AK = keras.backend%0A%0A%0Aclass ExponentialLearningRate%28keras.callbacks.Callback%29%3A%0A    def __init__%28self%2C factor%29%3A%0A        self.factor = factor%0A        self.rates = %5B%5D%0A        self.losses = %5B%5D%0A%0A    def on_batch_end%28self%2C batch%2C logs%29%3A%0A        self.rates.append%28K.get_value%28self.model.optimizer.learning_rate%29%29%0A        self.losses.append%28logs%5B%22loss%22%5D%29%0A        K.set_value%28%0A            self.model.optimizer.le..." isIPythonHidden="True" />
<var name="_i5" type="str" qualifier="builtins" value="os.getcwd%28%29" isIPythonHidden="True" />
<var name="_i6" type="str" qualifier="builtins" value="%23 Constants%0ASEED=42%0AHOLD_OUT_PERCENTAGE=10%0AITERATIVE_STRAT_ORDER=1%0AKEEP_MOST_COMMON_LABELS=10%0ABATCH_SIZE=16%0ATRAIN_FRACTION=0.9%0AHUGGINGFACE_CONFIG=%27distilbert-base-cased%27%0ATEST_SET_FRAC=.1" isIPythonHidden="True" />
<var name="_i7" type="str" qualifier="builtins" value="data_path = Path%28os.path.abspath%28%27%27%29%29.parent / %27data%27 / %27recruitment-task_1-full.csv%27%0A%0Adf=pd.read_csv%28%27/home/stefan/PycharmProjects/multi-label-classification-climate/data/recruitment-task_1-full.csv%27%29%0Adf.head%28%29" isIPythonHidden="True" />
<var name="_i8" type="str" qualifier="builtins" value="df.info%28%29" isIPythonHidden="True" />
<var name="_i9" type="str" qualifier="builtins" value="%23 Parse labels into a list.%0Adf%5B%27sectors_list%27%5D=df%5B%27sectors%27%5D.str.split%28%22%3B%22%29%0Adf=df%5B~df.description_text.duplicated%28%29%5D %23 Found a duplicated entry" isIPythonHidden="True" />
<var name="_ih" type="list" qualifier="builtins" value="%5B%27%27%2C %22import sys%5Cn%5Cn%5Cn%5Cnget_ipython%28%29.run_line_magic%28%27load_ext%27%2C %27autoreload%27%29%5Cnget_ipython%28%29.run_line_magic%28%27autoreload%27%2C %272%27%29%22%2C %27from src.sklearn_utils import iter_train_test_split%2C simple_feature_engineering%5Cnfrom sklearn.ensemble import GradientBoostingClassifier%27%2C %27import pandas as pd%5Cnimport numpy as np%5Cnimport os%5Cnimport plotly.express as px%5Cnfrom skmultilearn.model_selection import IterativeStratification%5Cnfrom sklearn.model_selection import train_test_split%5Cnfrom sklearn.preprocessing import MultiLabelBinarizer%5Cnfrom sklearn.dummy import DummyClassifier%5Cnfrom sklearn.metrics import hamming_loss%5Cnimport seaborn as sns%5Cn%5Cnfrom sklearn.feature_extraction.text import TfidfVectorizer%5Cn%5Cnfrom yellowbrick.text import TSNEVisualizer%5Cnfrom yellowbrick.datasets import load_hobbies%5Cn%23 import tensorflow_addons as tfa%5Cnfrom sklearn.metrics import hamming_loss%5Cn%5Cnfrom skmultilearn.problem_transform import ClassifierChain%5Cnfrom sklearn.metrics import hamming_loss%2C accuracy_score%2C make_scorer..." isContainer="True" shape="29" isIPythonHidden="True" />
<var name="_ii" type="str" qualifier="builtins" value="full_pipe_rf.get_params%28%29" isIPythonHidden="True" />
<var name="_iii" type="str" qualifier="builtins" value="def select_col%28df%2C col=%27full_text%27%29%3A %23 lambda%27s not picklable%2C hence this one liner.%0A    return df%5Bcol%5D%0A%0Afull_pipe_rf=construct_pipeline%28%29%0Afull_pipe_gb=construct_pipeline%28clf=GradientBoostingClassifier%28%29%29%0A%0A%23 cv_score=cross_val_score%28full_pipe_rf%2C X%2C y%2C scoring=make_scorer%28hamming_loss%29%2C cv=5%2C error_score=%27raise%27%29%0A%23%0A%23 %23 fit full_pipe and log the results.%0A%23 full_pipe_rf.fit%28X%2C y%29%0A%23 wandb.log%28%7B%27cv_score%27%3A cv_score.mean%28%29%2C %27cv_std%27%3A cv_score.std%28%29%7D%29" isIPythonHidden="True" />
<var name="_oh" type="dict" qualifier="builtins" value="%7B5%3A %27/home/stefan/PycharmProjects/multi-label-classification-climate/notebooks%27%2C 7%3A    policy_id                       policy_title  %5C%0A0      10088     Circular economy promotion law   %0A1      10087                14th Five-Year Plan   %0A2      10046             National Forest Policy   %0A3      10044   Suriname National REDD%2B Strategy   %0A4      10042  Policy Development Plan 2017-2021   %0A%0A                                             sectors  %5C%0A0                  Industry%3BAgriculture%3BEconomy-wide   %0A1  Transportation%3BRural%3BLULUCF%3BEnergy%3BEconomy-wid...   %0A2                                             LULUCF   %0A3                                             LULUCF   %0A4                                       Economy-wide   %0A%0A                                    description_text  %0A0  This law promotes the development of a circula...  %0A1  The 14th Five Year Plan lays down the strategy...  %0A2  This document aims at protecting the country%27s...  %0A3  This document aims to protect Suriname%27s fores......" isContainer="True" shape="11" isIPythonHidden="True" />
<var name="_pydevd_bundle" type="module" qualifier="builtins" value="%3Cmodule %27_pydevd_bundle%27 from %27/snap/pycharm-professional/290/plugins/python/helpers/pydev/_pydevd_bundle/__init__.py%27&gt;" isContainer="True" />
<var name="accuracy_score" type="function" qualifier="builtins" value="%3Cfunction accuracy_score at 0x7fdf48fbb8b0&gt;" isContainer="True" />
<var name="col" type="str" qualifier="builtins" value="full_text" />
<var name="common_labels" type="Index" qualifier="pandas.core.indexes.base" value="Index%28%5B%27Energy%27%2C %27Transportation%27%2C %27LULUCF%27%2C %27Economy-wide%27%2C%0A       %27Residential and Commercial%27%2C %27Agriculture%27%2C %27Water%27%2C %27Industry%27%2C%0A       %27Waste%27%2C %27Health%27%5D%2C%0A      dtype=%27object%27%29" isContainer="True" shape="(10,)" />
<var name="construct_pipeline" type="function" qualifier="builtins" value="%3Cfunction construct_pipeline at 0x7fdf1be14a60&gt;" isContainer="True" />
<var name="create_tokenized_ds" type="function" qualifier="builtins" value="%3Cfunction create_tokenized_ds at 0x7fdf196f1790&gt;" isContainer="True" />
<var name="cross_val_score" type="function" qualifier="builtins" value="%3Cfunction cross_val_score at 0x7fdf48eb9b80&gt;" isContainer="True" />
<var name="cumulative_sum" type="Series" qualifier="pandas.core.series" value="%28%27Energy%27%2C 1143%29 %28%27Transportation%27%2C 1904%29 %28%27LULUCF%27%2C 2302%29 %28%27Economy-wide%27%2C 2668%29 %28%27Residential and Commercial%27%2C 3019%29 %28%27Agriculture%27%2C 3324%29 %28%27Water%27%2C 3621%29 %28%27Industry%27%2C 3859%29 %28%27Waste%27%2C 4036%29 %28%27Health%27%2C 4194%29 %28%27Environment%27%2C 4321%29 %28%27Urban%27%2C 4394%29 %28%27Buildings%27%2C 4459%29 %28%27Tourism%27%2C 4511%29 %28%27Social development%27%2C 4556%29 %28%27Disaster Risk Management %28Drm%29%27%2C 4589%29 %28%27Coastal zones%27%2C 4617%29 %28%27Rural%27%2C 4636%29 %28%27Adaptation%27%2C 4647%29 %28%27Cross Cutting Area%27%2C 4656%29 %28%27Public Sector%27%2C 4664%29 %28%27Other%27%2C 4670%29 %28%27Finance%27%2C 4675%29" isContainer="True" shape="(23,)" />
<var name="data_path" type="PosixPath" qualifier="pathlib" value="/home/stefan/PycharmProjects/multi-label-classification-climate/data/recruitment-task_1-full.csv" isContainer="True" />
<var name="df" type="DataFrame" qualifier="pandas.core.frame" value="policy_id                                       policy_title  %5C %5B0         10088                     Circular economy promotion law   %5D %5B1         10087                                14th Five-Year Plan   %5D %5B2         10046                             National Forest Policy   %5D %5B3         10044                   Suriname National REDD%2B Strategy   %5D %5B4         10042                  Policy Development Plan 2017-2021   %5D %5B...         ...                                                ...   %5D %5B1955       8835  National Climate Change Strategy and Action Pl...   %5D %5B1956       9110                 National Policy for Climate Change   %5D %5B1957       9191  Presidential Decree 7/2019 establishing the na...   %5D %5B1958       8889  Act No. 28 of 1972 concerning nuclear energy a...   %5D %5B1959       8887  Natural Hazards Compensation Act %28No. 59 of 2014%29   %5D %5B%5D %5B                                                sectors  %5C%5D %5B0                     Industry%3BAgriculture%3BEconomy-wide   %5D %5B1     Transportation%3BRural%3BLULUCF%3BEnergy%3B...%5D" isContainer="True" shape="(1959, 5)" />
<var name="df_eda" type="DataFrame" qualifier="pandas.core.frame" value="policy_id                                       policy_title  %5C %5B0         10088                     Circular economy promotion law   %5D %5B3         10044                   Suriname National REDD%2B Strategy   %5D %5B5         10049                               Energy Strategy 2050   %5D %5B6         10051                   Long-Term Climate Strategy%2C 2021   %5D %5B9         10054  Environmentally Sustainable Transport System P...   %5D %5B...         ...                                                ...   %5D %5B1955       8835  National Climate Change Strategy and Action Pl...   %5D %5B1956       9110                 National Policy for Climate Change   %5D %5B1957       9191  Presidential Decree 7/2019 establishing the na...   %5D %5B1958       8889  Act No. 28 of 1972 concerning nuclear energy a...   %5D %5B1959       8887  Natural Hazards Compensation Act %28No. 59 of 2014%29   %5D %5B%5D %5B                                       description_text  %5C%5D %5B0     This law promotes the development of a circula...   %5D %5B3     This document aims to protect Surin...%5D" isContainer="True" shape="(1680, 14)" />
<var name="df_filtered" type="DataFrame" qualifier="pandas.core.frame" value="policy_id                                       policy_title  %5C %5B0         10088                     Circular economy promotion law   %5D %5B1         10087                                14th Five-Year Plan   %5D %5B2         10046                             National Forest Policy   %5D %5B3         10044                   Suriname National REDD%2B Strategy   %5D %5B4         10042                  Policy Development Plan 2017-2021   %5D %5B...         ...                                                ...   %5D %5B1955       8835  National Climate Change Strategy and Action Pl...   %5D %5B1956       9110                 National Policy for Climate Change   %5D %5B1957       9191  Presidential Decree 7/2019 establishing the na...   %5D %5B1958       8889  Act No. 28 of 1972 concerning nuclear energy a...   %5D %5B1959       8887  Natural Hazards Compensation Act %28No. 59 of 2014%29   %5D %5B%5D %5B                                       description_text  %5C%5D %5B0     This law promotes the development of a circula...   %5D %5B1     The 14th Five Year Plan lays down t...%5D" isContainer="True" shape="(1879, 4)" />
<var name="df_labels" type="DataFrame" qualifier="pandas.core.frame" value="num_labels  cumulative_positive_labels  %5C %5BEnergy                                1143                        1143   %5D %5BTransportation                         761                        1904   %5D %5BLULUCF                                 398                        2302   %5D %5BEconomy-wide                           366                        2668   %5D %5BResidential and Commercial             351                        3019   %5D %5BAgriculture                            305                        3324   %5D %5BWater                                  297                        3621   %5D %5BIndustry                               238                        3859   %5D %5BWaste                                  177                        4036   %5D %5BHealth                                 158                        4194   %5D %5BEnvironment                            127                        4321   %5D %5BUrban                                   73                        4394   %5D %5BBuildings                             ...%5D" isContainer="True" shape="(23, 3)" />
<var name="df_single_label" type="DataFrame" qualifier="pandas.core.frame" value="policy_id                                       policy_title  %5C %5B3         10044                   Suriname National REDD%2B Strategy   %5D %5B5         10049                               Energy Strategy 2050   %5D %5B6         10051                   Long-Term Climate Strategy%2C 2021   %5D %5B9         10054  Environmentally Sustainable Transport System P...   %5D %5B10        10061  Uganda Green Growth Development Strategy 2017/...   %5D %5B...         ...                                                ...   %5D %5B1950       8704  National Strategy for Adaptation to Climate Ch...   %5D %5B1953       8766  Priority Framework for Action%3A Climate Change ...   %5D %5B1956       9110                 National Policy for Climate Change   %5D %5B1958       8889  Act No. 28 of 1972 concerning nuclear energy a...   %5D %5B1959       8887  Natural Hazards Compensation Act %28No. 59 of 2014%29   %5D %5B%5D %5B                                       description_text      sectors_list  %5C%5D %5B3     This document aims to protect Suriname%27s fores...          %5BLULUCF%5D   %5D %5B5    ...%5D" isContainer="True" shape="(752, 14)" />
<var name="df_test" type="DataFrame" qualifier="pandas.core.frame" value="policy_id                                       policy_title  %5C %5B1        10087                                14th Five-Year Plan   %5D %5B2        10046                             National Forest Policy   %5D %5B4        10042                  Policy Development Plan 2017-2021   %5D %5B7        10052                 Switzerland%E2%80%99s climate policy%2C 2018   %5D %5B8        10053       Smart Grid Development Master Plan 2015-2036   %5D %5B..         ...                                                ...   %5D %5B549       9133                     Law No. 293-Z on energy saving   %5D %5B552       9045                  Law No. 1136-XIV on energy saving   %5D %5B588       8784  Industrial Sector Plan for mitigation and Adap...   %5D %5B616       8687                              Pollution Control Act   %5D %5B760       4313          Second National Environmental Action Plan   %5D %5B%5D %5B                                      description_text  %5C%5D %5B1    The 14th Five Year Plan lays down the strategy...   %5D %5B2    This document aims at protecting the country%27s... ...%5D" isContainer="True" shape="(199, 4)" />
<var name="exit" type="ZMQExitAutocall" qualifier="IPython.core.autocall" value="%3CIPython.core.autocall.ZMQExitAutocall object at 0x7fdf59b7a1c0&gt;" isContainer="True" isIPythonHidden="True" />
<var name="fraction_dataset_covered" type="Series" qualifier="pandas.core.series" value="%28%27Energy%27%2C 0.24449197860962568%29 %28%27Transportation%27%2C 0.4072727272727273%29 %28%27LULUCF%27%2C 0.4924064171122995%29 %28%27Economy-wide%27%2C 0.5706951871657754%29 %28%27Residential and Commercial%27%2C 0.6457754010695187%29 %28%27Agriculture%27%2C 0.7110160427807487%29 %28%27Water%27%2C 0.7745454545454545%29 %28%27Industry%27%2C 0.8254545454545454%29 %28%27Waste%27%2C 0.8633155080213903%29 %28%27Health%27%2C 0.8971122994652406%29 %28%27Environment%27%2C 0.9242780748663102%29 %28%27Urban%27%2C 0.9398930481283423%29 %28%27Buildings%27%2C 0.9537967914438503%29 %28%27Tourism%27%2C 0.9649197860962567%29 %28%27Social development%27%2C 0.9745454545454545%29 %28%27Disaster Risk Management %28Drm%29%27%2C 0.9816042780748663%29 %28%27Coastal zones%27%2C 0.9875935828877005%29 %28%27Rural%27%2C 0.9916577540106952%29 %28%27Adaptation%27%2C 0.9940106951871658%29 %28%27Cross Cutting Area%27%2C 0.9959358288770054%29 %28%27Public Sector%27%2C 0.9976470588235294%29 %28%27Other%27%2C 0.9989304812834224%29 %28%27Finance%27%2C 1.0%29" isContainer="True" shape="(23,)" />
<var name="full_pipe_gb" type="Pipeline" qualifier="sklearn.pipeline" value="Pipeline%28steps=%5B%28%27features%27%2C%0A                 FeatureUnion%28transformer_list=%5B%28%27pipeline_text%27%2C%0A                                                 Pipeline%28steps=%5B%28%27select_text_col%27%2C%0A                                                                  FunctionTransformer%28func=%3Cfunction select_col at 0x7fdf1be14310&gt;%29%29%2C%0A                                                                 %28%27tfidf%27%2C%0A                                                                  TfidfVectorizer%28lowercase=False%2C%0A                                                                                  max_df=0.5%2C%0A                                                                                  stop_words=%27english%27%29%29%5D%29%29%2C%0A                                                %28%27feature_engineering%27%2C%0A                                                 TextFeatureEngineering%28%29%29%5D%29%29%2C%0A                %28%27clf%27%2C%0A                 ClassifierChain%28classifier=GradientBoostingClassifier%28%29%2C%0A                                 require_dense=%5BTrue%2C True%5D%29..." isContainer="True" shape="2" />
<var name="full_pipe_rf" type="Pipeline" qualifier="sklearn.pipeline" value="Pipeline%28steps=%5B%28%27features%27%2C%0A                 FeatureUnion%28transformer_list=%5B%28%27pipeline_text%27%2C%0A                                                 Pipeline%28steps=%5B%28%27select_text_col%27%2C%0A                                                                  FunctionTransformer%28func=%3Cfunction select_col at 0x7fdf1be14310&gt;%29%29%2C%0A                                                                 %28%27tfidf%27%2C%0A                                                                  TfidfVectorizer%28lowercase=False%2C%0A                                                                                  max_df=0.5%2C%0A                                                                                  stop_words=%27english%27%29%29%5D%29%29%2C%0A                                                %28%27feature_engineering%27%2C%0A                                                 TextFeatureEngineering%28%29%29%5D%29%29%2C%0A                %28%27clf%27%2C%0A                 ClassifierChain%28classifier=RandomForestClassifier%28%29%2C%0A                                 require_dense=%5BTrue%2C True%5D%29%29%5D%29" isContainer="True" shape="2" />
<var name="get_ipython" type="method" qualifier="builtins" value="%3Cbound method InteractiveShell.get_ipython of %3Cipykernel.zmqshell.ZMQInteractiveShell object at 0x7fdf59b5e520&gt;&gt;" isContainer="True" isIPythonHidden="True" />
<var name="go" type="module" qualifier="builtins" value="%3Cmodule %27plotly.graph_objects%27 from %27/home/stefan/anaconda3/envs/multi-label-classification-climate/lib/python3.9/site-packages/plotly/graph_objects/__init__.py%27&gt;" isContainer="True" />
<var name="grid" type="GridSearchCV" qualifier="sklearn.model_selection._search" value="GridSearchCV%28cv=5%2C error_score=%27raise%27%2C%0A             estimator=Pipeline%28steps=%5B%28%27features%27%2C%0A                                        FeatureUnion%28transformer_list=%5B%28%27pipeline_text%27%2C%0A                                                                        Pipeline%28steps=%5B%28%27select_text_col%27%2C%0A                                                                                         FunctionTransformer%28func=%3Cfunction select_col at 0x7fdf1be14310&gt;%29%29%2C%0A                                                                                        %28%27tfidf%27%2C%0A                                                                                         TfidfVectorizer%28lowercase=False%2C%0A                                                                                                         max_df=0.5%2C%0A                                                                                                         stop_words=%27english%27%29%29%5D%29%29%2C%0A                                                                       %28%27feature_engi..." isContainer="True" />
<var name="hamming_loss" type="function" qualifier="builtins" value="%3Cfunction hamming_loss at 0x7fdf48fc2280&gt;" isContainer="True" />
<var name="iter_train_test_split" type="function" qualifier="builtins" value="%3Cfunction iter_train_test_split at 0x7fdf1cce23a0&gt;" isContainer="True" />
<var name="joblib" type="module" qualifier="builtins" value="%3Cmodule %27joblib%27 from %27/home/stefan/anaconda3/envs/multi-label-classification-climate/lib/python3.9/site-packages/joblib/__init__.py%27&gt;" isContainer="True" />
<var name="labels_flattened" type="Series" qualifier="pandas.core.series" value="%280%2C %27Industry%27%29 %280%2C %27Agriculture%27%29 %280%2C %27Economy-wide%27%29 %281%2C %27Transportation%27%29 %281%2C %27Rural%27%29 %281%2C %27LULUCF%27%29 %281%2C %27Energy%27%29 %281%2C %27Economy-wide%27%29 %281%2C %27Agriculture%27%29 %282%2C %27LULUCF%27%29 %283%2C %27LULUCF%27%29 %284%2C %27Economy-wide%27%29 %285%2C %27Energy%27%29 %286%2C %27Economy-wide%27%29 %287%2C %27Economy-wide%27%29 %288%2C %27Energy%27%29 %289%2C %27Transportation%27%29 %2810%2C %27Economy-wide%27%29 %2811%2C %27Economy-wide%27%29 %2812%2C %27Economy-wide%27%29 %2813%2C %27Economy-wide%27%29 %2814%2C %27Economy-wide%27%29 %2815%2C %27Economy-wide%27%29 %2816%2C %27Social development%27%29 %2816%2C %27LULUCF%27%29 %2816%2C %27Economy-wide%27%29 %2817%2C %27Industry%27%29 %2818%2C %27Economy-wide%27%29 %2819%2C %27Agriculture%27%29 %2821%2C %27Energy%27%29 %2821%2C %27Economy-wide%27%29 %2821%2C %27Adaptation%27%29 %2822%2C %27Health%27%29 %2823%2C %27Economy-wide%27%29 %2824%2C %27Economy-wide%27%29 %2825%2C %27Transportation%27%29 %2826%2C %27LULUCF%27%29 %2827%2C %27Economy-wide%27%29 %2828%2C %27Adaptation%27%29 %2829%2C %27Buildings%27%29 %2830%2C %27Tourism%27%29 %2831%2C %27Environment%27%29 %2831%2C %27Energy%27%29 %2831%2C %27Economy-wide%27%29 %2832%2C %27Economy-wide%27%29 %2833%2C %27Transportation%27%29 %2834%2C %27Energy%27%29 %2834%2C %27Economy-wide%27%29 %2835%2C %27Economy-wide%27%29 %2835%2C %27Coastal zones%27%29 %2835%2C %27Adaptation%27%29 %2836%2C %27LULUCF%27%29 %2836%2C %27Energy%27%29 %2836%2C %27Economy-wide%27%29 %2837%2C %27LULUCF%27%29 %2838%2C %27Environment%27%29 %2839%2C %27LULUCF%27%29 %2839%2C %27Energy%27%29 %2840%2C %27Industry%27%29 %2840%2C %27Health%27%29 %2840%2C %27Economy-wide%27%29 %2840%2C %27Coastal zones%27%29 %2840%2C %27Buildings%27%29 %2841%2C %27Urban%27%29 %2841%2C %27Energy%27%29 %2842%2C %27Water%27%29 %2842%2C %27Cross Cutting Area%27%29 %2843%2C %27Economy-wide%27%29 %2844%2C %27Transportation%27%29 %2844%2C %27Public Sector%27%29 %2844%2C %27Buildings%27%29 %2845%2C %27Energy%27%29 %2846%2C %27Urban%27%29 %2846%2C %27LULUCF%27%29 %2846%2C %27Agriculture%27%29 %2847%2C %27Environment%27%29 %2848%2C %27LULUCF%27%29 %2849%2C %27Energy%27%29 %2849%2C %27Economy-wide%27%29 %2850%2C %27Residential and Commercial%27%29 %2850%2C %27Buildings%27%29 %2851%2C %27LULUCF%27%29 %2852%2C %27Economy-wide%27%29 %2853%2C %27Economy-wide%27%29 %2854%2C %27Economy-wide%27%29 %2855%2C %27Energy%27%29 %2856%2C %27Energy%27%29 %2857%2C %27Economy-wide%27%29 %2858%2C %27Economy-wide%27%29 %2859%2C %27Economy-wide%27%29 %2860%2C %27Economy-wide%27%29 %2861%2C %27Economy-wide%27%29 %2862%2C %27Transportation%27%29 %2863%2C %27Economy-wide%27%29 %2864%2C %27Economy-wide%27%29 %2865%2C %27Energy%27%29 %2866%2C %27Energy%27%29 %2867%2C %27Economy-wide%27%29 %2868%2C %27Transportation%27%29 %2869%2C %27Economy-wide%27%29" isContainer="True" shape="(4675,)" />
<var name="load_hobbies" type="function" qualifier="builtins" value="%3Cfunction load_hobbies at 0x7fdf1b790700&gt;" isContainer="True" />
<var name="logger" type="RootLogger" qualifier="logging" value="%3CRootLogger root %28CRITICAL%29&gt;" isContainer="True" />
<var name="logging" type="module" qualifier="builtins" value="%3Cmodule %27logging%27 from %27/home/stefan/anaconda3/envs/multi-label-classification-climate/lib/python3.9/logging/__init__.py%27&gt;" isContainer="True" />
<var name="make_scorer" type="function" qualifier="builtins" value="%3Cfunction make_scorer at 0x7fdf48eac670&gt;" isContainer="True" />
<var name="make_subplots" type="function" qualifier="builtins" value="%3Cfunction make_subplots at 0x7fdf1a24e790&gt;" isContainer="True" />
<var name="math" type="module" qualifier="builtins" value="%3Cmodule %27math%27 from %27/home/stefan/anaconda3/envs/multi-label-classification-climate/lib/python3.9/lib-dynload/math.cpython-39-x86_64-linux-gnu.so%27&gt;" isContainer="True" />
<var name="mlb" type="MultiLabelBinarizer" qualifier="sklearn.preprocessing._label" value="MultiLabelBinarizer%28%29" isContainer="True" />
<var name="n_unique_labels" type="int" qualifier="builtins" value="23" />
<var name="np" type="module" qualifier="builtins" value="%3Cmodule %27numpy%27 from %27/home/stefan/anaconda3/envs/multi-label-classification-climate/lib/python3.9/site-packages/numpy/__init__.py%27&gt;" isContainer="True" />
<var name="num_instances_each_label" type="Series" qualifier="pandas.core.series" value="%28%27Energy%27%2C 1143%29 %28%27Transportation%27%2C 761%29 %28%27LULUCF%27%2C 398%29 %28%27Economy-wide%27%2C 366%29 %28%27Residential and Commercial%27%2C 351%29 %28%27Agriculture%27%2C 305%29 %28%27Water%27%2C 297%29 %28%27Industry%27%2C 238%29 %28%27Waste%27%2C 177%29 %28%27Health%27%2C 158%29 %28%27Environment%27%2C 127%29 %28%27Urban%27%2C 73%29 %28%27Buildings%27%2C 65%29 %28%27Tourism%27%2C 52%29 %28%27Social development%27%2C 45%29 %28%27Disaster Risk Management %28Drm%29%27%2C 33%29 %28%27Coastal zones%27%2C 28%29 %28%27Rural%27%2C 19%29 %28%27Adaptation%27%2C 11%29 %28%27Cross Cutting Area%27%2C 9%29 %28%27Public Sector%27%2C 8%29 %28%27Other%27%2C 6%29 %28%27Finance%27%2C 5%29" isContainer="True" shape="(23,)" />
<var name="os" type="module" qualifier="builtins" value="%3Cmodule %27os%27 from %27/home/stefan/anaconda3/envs/multi-label-classification-climate/lib/python3.9/os.py%27&gt;" isContainer="True" />
<var name="param_grid_random_forest" type="dict" qualifier="builtins" value="%7B%27clf__classifier__n_estimators%27%3A %5B100%2C 200%5D%7D" isContainer="True" shape="1" />
<var name="pd" type="module" qualifier="builtins" value="%3Cmodule %27pandas%27 from %27/home/stefan/anaconda3/envs/multi-label-classification-climate/lib/python3.9/site-packages/pandas/__init__.py%27&gt;" isContainer="True" />
<var name="plt" type="module" qualifier="builtins" value="%3Cmodule %27matplotlib.pyplot%27 from %27/home/stefan/anaconda3/envs/multi-label-classification-climate/lib/python3.9/site-packages/matplotlib/pyplot.py%27&gt;" isContainer="True" />
<var name="px" type="module" qualifier="builtins" value="%3Cmodule %27plotly.express%27 from %27/home/stefan/anaconda3/envs/multi-label-classification-climate/lib/python3.9/site-packages/plotly/express/__init__.py%27&gt;" isContainer="True" />
<var name="pydev_jupyter_vars" type="module" qualifier="builtins" value="%3Cmodule %27pydev_jupyter_vars%27 from %27/snap/pycharm-professional/290/plugins/python/helpers-pro/jupyter_debug/pydev_jupyter_vars.py%27&gt;" isContainer="True" />
<var name="quit" type="ZMQExitAutocall" qualifier="IPython.core.autocall" value="%3CIPython.core.autocall.ZMQExitAutocall object at 0x7fdf59b7a1c0&gt;" isContainer="True" isIPythonHidden="True" />
<var name="remove_imported_pydev_package" type="function" qualifier="builtins" value="%3Cfunction remove_imported_pydev_package at 0x7fdf1cd905e0&gt;" isContainer="True" />
<var name="select_col" type="function" qualifier="builtins" value="%3Cfunction select_col at 0x7fdeab42f0d0&gt;" isContainer="True" />
<var name="simple_feature_engineering" type="function" qualifier="builtins" value="%3Cfunction simple_feature_engineering at 0x7fdf1cb21af0&gt;" isContainer="True" />
<var name="sns" type="module" qualifier="builtins" value="%3Cmodule %27seaborn%27 from %27/home/stefan/anaconda3/envs/multi-label-classification-climate/lib/python3.9/site-packages/seaborn/__init__.py%27&gt;" isContainer="True" />
<var name="subplot_helper" type="function" qualifier="builtins" value="%3Cfunction subplot_helper at 0x7fdf0eee9f70&gt;" isContainer="True" />
<var name="sys" type="module" qualifier="builtins" value="%3Cmodule %27sys%27 %28built-in%29&gt;" isContainer="True" />
<var name="text_cols" type="list" qualifier="builtins" value="%5B%27description_text%27%2C %27policy_title%27%2C %27full_text%27%5D" isContainer="True" shape="3" />
<var name="text_cols_n_tokens" type="list" qualifier="builtins" value="%5B%27description_text_ntokens%27%2C %27policy_title_ntokens%27%2C %27full_text_ntokens%27%5D" isContainer="True" shape="3" />
<var name="text_cols_n_words" type="list" qualifier="builtins" value="%5B%27description_text_nwords%27%2C %27policy_title_nwords%27%2C %27full_text_nwords%27%5D" isContainer="True" shape="3" />
<var name="time" type="type" qualifier="builtins" value="%3Cclass %27datetime.time%27&gt;" isContainer="True" />
<var name="tokenizer" type="DistilBertTokenizerFast" qualifier="transformers.models.distilbert.tokenization_distilbert_fast" value="PreTrainedTokenizerFast%28name_or_path=%27distilbert-base-cased%27%2C vocab_size=28996%2C model_max_len=512%2C is_fast=True%2C padding_side=%27right%27%2C truncation_side=%27right%27%2C special_tokens=%7B%27unk_token%27%3A %27%5BUNK%5D%27%2C %27sep_token%27%3A %27%5BSEP%5D%27%2C %27pad_token%27%3A %27%5BPAD%5D%27%2C %27cls_token%27%3A %27%5BCLS%5D%27%2C %27mask_token%27%3A %27%5BMASK%5D%27%7D%29" isContainer="True" shape="28996" />
<var name="total_positive_labels" type="int64" qualifier="numpy" value="4675" isContainer="True" shape="()" />
<var name="train_test_split" type="function" qualifier="builtins" value="%3Cfunction train_test_split at 0x7fdf1c8fb790&gt;" isContainer="True" />
<var name="tsne_plot" type="function" qualifier="builtins" value="%3Cfunction tsne_plot at 0x7fdf195f7dc0&gt;" isContainer="True" />
<var name="underrepresented_labels" type="Index" qualifier="pandas.core.indexes.base" value="Index%28%5B%27Urban%27%2C %27Buildings%27%2C %27Tourism%27%2C %27Social development%27%2C%0A       %27Disaster Risk Management %28Drm%29%27%2C %27Coastal zones%27%2C %27Rural%27%2C%0A       %27Adaptation%27%2C %27Cross Cutting Area%27%2C %27Public Sector%27%2C %27Other%27%2C%0A       %27Finance%27%5D%2C%0A      dtype=%27object%27%29" isContainer="True" shape="(12,)" />
<var name="unique_labels" type="ndarray" qualifier="numpy" value="%5B%27Industry%27 %27Agriculture%27 %27Economy-wide%27 %27Transportation%27 %27Rural%27 %27LULUCF%27%2C %27Energy%27 %27Social development%27 %27Adaptation%27 %27Health%27 %27Buildings%27 %27Tourism%27%2C %27Environment%27 %27Coastal zones%27 %27Urban%27 %27Water%27 %27Cross Cutting Area%27%2C %27Public Sector%27 %27Residential and Commercial%27 %27Finance%27 %27Waste%27 %27Other%27%2C %27Disaster Risk Management %28Drm%29%27%5D" isContainer="True" shape="(23,)" />
<var name="wandb" type="module" qualifier="builtins" value="%3Cmodule %27wandb%27 from %27/home/stefan/anaconda3/envs/multi-label-classification-climate/lib/python3.9/site-packages/wandb/__init__.py%27&gt;" isContainer="True" />
<var name="y" type="ndarray" qualifier="numpy" value="%5B%5B1 1 0 0 1 0 0 0 0 0%5D%2C %5B0 0 0 0 0 1 0 0 0 0%5D%2C %5B0 0 1 0 0 0 0 0 0 0%5D%2C %5B0 1 0 0 0 0 0 0 0 0%5D%2C %5B0 0 0 0 0 0 0 1 0 0%5D%2C %5B0 1 0 0 0 0 0 0 0 0%5D%2C %5B0 1 0 0 0 0 0 0 0 0%5D%2C %5B0 1 0 0 0 0 0 0 0 0%5D%2C %5B0 1 0 0 0 1 0 0 0 0%5D%2C %5B1 0 0 0 0 0 0 0 0 0%5D%2C %5B0 1 1 0 0 0 0 0 0 0%5D%2C %5B0 1 0 0 0 0 0 0 0 0%5D%2C %5B0 1 1 0 0 0 0 0 0 0%5D%2C %5B0 0 0 0 0 0 0 1 0 0%5D%2C %5B0 1 1 0 0 0 0 0 0 0%5D%2C %5B0 1 1 0 0 1 0 0 0 0%5D%2C %5B0 0 0 0 0 1 0 0 0 0%5D%2C %5B0 0 1 0 0 1 0 0 0 0%5D%2C %5B0 0 0 0 0 0 0 0 0 1%5D%2C %5B0 1 0 0 0 0 0 0 0 0%5D%2C %5B0 0 1 0 0 0 0 0 0 0%5D%2C %5B0 0 0 0 0 0 1 0 0 0%5D%2C %5B0 0 0 0 0 1 0 0 0 0%5D%2C %5B0 1 0 0 0 0 0 0 0 0%5D%2C %5B0 1 0 0 0 0 0 0 0 0%5D%2C %5B0 0 1 0 0 0 0 0 0 0%5D%2C %5B0 1 0 0 0 0 0 0 0 0%5D%2C %5B0 1 0 0 0 0 0 0 0 0%5D%2C %5B0 0 0 0 0 0 0 1 0 0%5D%2C %5B0 1 0 0 0 0 0 0 0 0%5D%2C %5B0 0 1 0 0 0 0 0 0 0%5D%2C %5B0 1 0 0 0 0 0 0 0 0%5D%2C %5B0 1 0 0 0 0 0 0 0 0%5D%2C %5B0 0 1 0 0 0 0 0 0 0%5D%2C %5B0 1 0 0 0 0 0 0 0 0%5D%2C %5B0 0 1 0 0 0 0 0 0 0%5D%2C %5B0 1 0 0 0 0 0 0 0 0%5D%2C %5B0 1 1 0 0 0 0 0 0 0%5D%2C %5B0 0 1 0 0 0 0 0 0 0%5D%2C %5B0 0 1 0 0 0 0 0 0 0%5D%2C %5B0 0 1 0 0 0 0 1 0 0%5D%2C %5B0 0 1 0 0 0 0 0 0 0%5D%2C %5B0 0 1 0 0 0 1 1 0 0%5D%2C %5B1 0 0 0 0..." isContainer="True" shape="(1680, 10)" />
<var name="y_eda" type="ndarray" qualifier="numpy" value="%5B%5B1 1 0 0 1 0 0 0 0 0%5D%2C %5B0 0 0 0 0 1 0 0 0 0%5D%2C %5B0 0 1 0 0 0 0 0 0 0%5D%2C %5B0 1 0 0 0 0 0 0 0 0%5D%2C %5B0 0 0 0 0 0 0 1 0 0%5D%2C %5B0 1 0 0 0 0 0 0 0 0%5D%2C %5B0 1 0 0 0 0 0 0 0 0%5D%2C %5B0 1 0 0 0 0 0 0 0 0%5D%2C %5B0 1 0 0 0 1 0 0 0 0%5D%2C %5B1 0 0 0 0 0 0 0 0 0%5D%2C %5B0 1 1 0 0 0 0 0 0 0%5D%2C %5B0 1 0 0 0 0 0 0 0 0%5D%2C %5B0 1 1 0 0 0 0 0 0 0%5D%2C %5B0 0 0 0 0 0 0 1 0 0%5D%2C %5B0 1 1 0 0 0 0 0 0 0%5D%2C %5B0 1 1 0 0 1 0 0 0 0%5D%2C %5B0 0 0 0 0 1 0 0 0 0%5D%2C %5B0 0 1 0 0 1 0 0 0 0%5D%2C %5B0 0 0 0 0 0 0 0 0 1%5D%2C %5B0 1 0 0 0 0 0 0 0 0%5D%2C %5B0 0 1 0 0 0 0 0 0 0%5D%2C %5B0 0 0 0 0 0 1 0 0 0%5D%2C %5B0 0 0 0 0 1 0 0 0 0%5D%2C %5B0 1 0 0 0 0 0 0 0 0%5D%2C %5B0 1 0 0 0 0 0 0 0 0%5D%2C %5B0 0 1 0 0 0 0 0 0 0%5D%2C %5B0 1 0 0 0 0 0 0 0 0%5D%2C %5B0 1 0 0 0 0 0 0 0 0%5D%2C %5B0 0 0 0 0 0 0 1 0 0%5D%2C %5B0 1 0 0 0 0 0 0 0 0%5D%2C %5B0 0 1 0 0 0 0 0 0 0%5D%2C %5B0 1 0 0 0 0 0 0 0 0%5D%2C %5B0 1 0 0 0 0 0 0 0 0%5D%2C %5B0 0 1 0 0 0 0 0 0 0%5D%2C %5B0 1 0 0 0 0 0 0 0 0%5D%2C %5B0 0 1 0 0 0 0 0 0 0%5D%2C %5B0 1 0 0 0 0 0 0 0 0%5D%2C %5B0 1 1 0 0 0 0 0 0 0%5D%2C %5B0 0 1 0 0 0 0 0 0 0%5D%2C %5B0 0 1 0 0 0 0 0 0 0%5D%2C %5B0 0 1 0 0 0 0 1 0 0%5D%2C %5B0 0 1 0 0 0 0 0 0 0%5D%2C %5B0 0 1 0 0 0 1 1 0 0%5D%2C %5B1 0 0 0 0..." isContainer="True" shape="(1680, 10)" />
<var name="y_eda_df" type="DataFrame" qualifier="pandas.core.frame" value="Agriculture  Economy-wide  Energy  Health  Industry  LULUCF  %5C %5B0               1             1       0       0         1       0   %5D %5B1               0             0       0       0         0       1   %5D %5B2               0             0       1       0         0       0   %5D %5B3               0             1       0       0         0       0   %5D %5B4               0             0       0       0         0       0   %5D %5B...           ...           ...     ...     ...       ...     ...   %5D %5B1675            0             0       1       1         0       0   %5D %5B1676            0             0       0       0         0       0   %5D %5B1677            0             0       1       0         0       1   %5D %5B1678            0             0       1       0         0       0   %5D %5B1679            0             0       0       0         0       0   %5D %5B%5D %5B      Residential and Commercial  Transportation  Waste  Water  %5D %5B0                              0               0      0      0  %5D %5B1                              0         ...%5D" isContainer="True" shape="(1680, 10)" />
<var name="y_test" type="Series" qualifier="pandas.core.series" value="%281497%2C %27Energy%27%29 %281517%2C %27Economy-wide%27%29 %281244%2C %27Energy%27%29 %28249%2C %27Transportation%27%29 %28698%2C %27Energy%27%29 %281002%2C %27Economy-wide%27%29 %281757%2C %27Transportation%27%29 %28765%2C %27Energy%27%29 %281958%2C %27Energy%27%29 %281738%2C %27Economy-wide%27%29 %281091%2C %27Energy%27%29 %28893%2C %27Energy%27%29 %281328%2C %27LULUCF%27%29 %281869%2C %27Energy%27%29 %281257%2C %27Economy-wide%27%29 %28398%2C %27Transportation%27%29 %281326%2C %27Energy%27%29 %281550%2C %27Transportation%27%29 %28375%2C %27LULUCF%27%29 %28666%2C %27Energy%27%29 %281201%2C %27Energy%27%29 %281010%2C %27Energy%27%29 %281570%2C %27Transportation%27%29 %281199%2C %27Energy%27%29 %28979%2C %27Energy%27%29 %28112%2C %27Energy%27%29 %281928%2C %27Economy-wide%27%29 %28697%2C %27Residential and Commercial%27%29 %281112%2C %27Energy%27%29 %28583%2C %27LULUCF%27%29 %28484%2C %27Residential and Commercial%27%29 %281059%2C %27Energy%27%29 %281908%2C %27Energy%27%29 %28708%2C %27Economy-wide%27%29 %281953%2C %27Agriculture%27%29 %281214%2C %27Energy%27%29 %28438%2C %27Transportation%27%29 %28951%2C %27Energy%27%29 %281448%2C %27Transportation%27%29 %28762%2C %27Energy%27%29 %28795%2C %27Energy%27%29 %28918%2C %27Transportation%27%29 %281914%2C %27Energy%27%29 %281544%2C %27Agriculture%27%29 %28953%2C %27Economy-wide%27%29 %2895%2C %27Agriculture%27%29 %28700%2C %27LULUCF%27%29 %281222%2C %27Energy%27%29 %28294%2C %27Agriculture%27%29 %281100%2C %27Energy%27%29 %281217%2C %27Transportation%27%29 %281526%2C %27Transportation%27%29 %281041%2C %27Transportation%27%29 %281644%2C %27Energy%27%29 %2837%2C %27LULUCF%27%29 %28554%2C %27Energy%27%29 %281065%2C %27Energy%27%29 %2888%2C %27Energy%27%29 %281109%2C %27Energy%27%29 %28590%2C %27Energy%27%29 %28574%2C %27Energy%27%29 %28252%2C %27Agriculture%27%29 %28203%2C %27Water%27%29 %28165%2C %27LULUCF%27%29 %28619%2C %27Water%27%29 %281039%2C %27Economy-wide%27%29 %281237%2C %27Economy-wide%27%29 %28823%2C %27Energy%27%29 %28199%2C %27Energy%27%29 %28839%2C %27Energy%27%29 %281915%2C %27Energy%27%29 %281123%2C %27Economy-wide%27%29 %281489%2C %27Energy%27%29 %28964%2C %27Energy%27%29 %281139%2C %27Residential and Commercial%27%29 %28827%2C %27Health%27%29 %281725%2C %27Energy%27%29 %28247%2C %27Transportation%27%29 %281820%2C %27Transportation%27%29 %28232%2C %27Residential and Commercial%27%29 %28702%2C %27LULUCF%27%29 %281221%2C %27Transportation%27%29 %28602%2C %27Transportation%27%29 %28196%2C %27Transportation%27%29 %281624%2C %27Economy-wide%27%29 %28782%2C %27Economy-wide%27%29 %28145%2C %27Residential and Commercial%27%29 %28971%2C %27Energy%27%29 %28990%2C %27Energy%27%29 %28842%2C %27Energy%27%29 %281424%2C %27Economy-wide%27%29 %28502%2C %27Water%27%29 %28769%2C %27Economy-wide%27%29 %2819%2C %27Agriculture%27%29 %28671%2C %27Transportation%27%29 %2866%2C %27Energy%27%29 %281147%2C %27LULUCF%27%29 %281950%2C %27Economy-wide%27%29 %281656%2C %27Economy-wide%27%29 %28725%2C %27Energy%27%29" isContainer="True" shape="(249,)" />
<var name="y_train" type="Series" qualifier="pandas.core.series" value="%28946%2C %27Energy%27%29 %281077%2C %27Energy%27%29 %28753%2C %27Energy%27%29 %28917%2C %27Energy%27%29 %28966%2C %27Economy-wide%27%29 %281563%2C %27Transportation%27%29 %28420%2C %27Transportation%27%29 %28470%2C %27Transportation%27%29 %28776%2C %27Energy%27%29 %28347%2C %27Transportation%27%29 %28329%2C %27LULUCF%27%29 %281004%2C %27Energy%27%29 %281151%2C %27Economy-wide%27%29 %281780%2C %27Transportation%27%29 %281745%2C %27Economy-wide%27%29 %281115%2C %27LULUCF%27%29 %2842%2C %27Water%27%29 %28130%2C %27Energy%27%29 %28125%2C %27LULUCF%27%29 %28607%2C %27Energy%27%29 %281670%2C %27Transportation%27%29 %281541%2C %27Energy%27%29 %281102%2C %27Energy%27%29 %28631%2C %27Energy%27%29 %281225%2C %27Energy%27%29 %281641%2C %27Transportation%27%29 %28630%2C %27Energy%27%29 %281308%2C %27Energy%27%29 %281319%2C %27LULUCF%27%29 %28774%2C %27Economy-wide%27%29 %281243%2C %27Energy%27%29 %281899%2C %27Energy%27%29 %2851%2C %27LULUCF%27%29 %281155%2C %27Energy%27%29 %28771%2C %27Energy%27%29 %28904%2C %27Energy%27%29 %281189%2C %27Economy-wide%27%29 %28824%2C %27Energy%27%29 %281298%2C %27Transportation%27%29 %281209%2C %27Agriculture%27%29 %281335%2C %27Transportation%27%29 %281832%2C %27Energy%27%29 %2833%2C %27Transportation%27%29 %28764%2C %27Energy%27%29 %2863%2C %27Economy-wide%27%29 %28709%2C %27Economy-wide%27%29 %281291%2C %27Transportation%27%29 %281900%2C %27Energy%27%29 %281909%2C %27Transportation%27%29 %281044%2C %27Energy%27%29 %281579%2C %27Energy%27%29 %28680%2C %27Energy%27%29 %281743%2C %27Transportation%27%29 %28350%2C %27Energy%27%29 %28962%2C %27Energy%27%29 %28882%2C %27Industry%27%29 %281145%2C %27Industry%27%29 %28807%2C %27Energy%27%29 %28644%2C %27Energy%27%29 %281542%2C %27Transportation%27%29 %28956%2C %27Agriculture%27%29 %28580%2C %27LULUCF%27%29 %28246%2C %27Water%27%29 %281253%2C %27Energy%27%29 %28798%2C %27Energy%27%29 %28215%2C %27Water%27%29 %281150%2C %27Energy%27%29 %28650%2C %27Energy%27%29 %28790%2C %27Economy-wide%27%29 %28736%2C %27Energy%27%29 %28327%2C %27Agriculture%27%29 %281615%2C %27Energy%27%29 %28483%2C %27LULUCF%27%29 %28523%2C %27Transportation%27%29 %281566%2C %27Economy-wide%27%29 %28815%2C %27Energy%27%29 %28738%2C %27Energy%27%29 %283%2C %27LULUCF%27%29 %281927%2C %27Economy-wide%27%29 %28938%2C %27Economy-wide%27%29 %281655%2C %27LULUCF%27%29 %281067%2C %27Energy%27%29 %28800%2C %27Economy-wide%27%29 %281501%2C %27Transportation%27%29 %28477%2C %27Transportation%27%29 %28719%2C %27Energy%27%29 %28989%2C %27LULUCF%27%29 %281013%2C %27Agriculture%27%29 %28794%2C %27Economy-wide%27%29 %28892%2C %27Health%27%29 %281302%2C %27Transportation%27%29 %28569%2C %27Economy-wide%27%29 %281508%2C %27Energy%27%29 %281491%2C %27LULUCF%27%29 %281729%2C %27Energy%27%29 %281393%2C %27LULUCF%27%29 %28786%2C %27Transportation%27%29 %281331%2C %27Transportation%27%29 %28859%2C %27Energy%27%29 %28863%2C %27Transportation%27%29" isContainer="True" shape="(503,)" />
</xml>
<xml><var name="AutoTokenizer" type="type" qualifier="builtins" value="%3Cclass %27transformers.models.auto.tokenization_auto.AutoTokenizer%27&gt;" isContainer="True" />
<var name="BATCH_SIZE" type="int" qualifier="builtins" value="16" />
<var name="ClassifierChain" type="type" qualifier="builtins" value="%3Cclass %27skmultilearn.problem_transform.cc.ClassifierChain%27&gt;" isContainer="True" />
<var name="CountVectorizer" type="type" qualifier="builtins" value="%3Cclass %27sklearn.feature_extraction.text.CountVectorizer%27&gt;" isContainer="True" />
<var name="DataFrame" type="type" qualifier="builtins" value="%3Cclass %27pandas.core.frame.DataFrame%27&gt;" isContainer="True" />
<var name="DummyClassifier" type="type" qualifier="builtins" value="%3Cclass %27sklearn.dummy.DummyClassifier%27&gt;" isContainer="True" />
<var name="GradientBoostingClassifier" type="ABCMeta" qualifier="abc" value="%3Cclass %27sklearn.ensemble._gb.GradientBoostingClassifier%27&gt;" isContainer="True" />
<var name="GridSearchCV" type="ABCMeta" qualifier="abc" value="%3Cclass %27sklearn.model_selection._search.GridSearchCV%27&gt;" isContainer="True" />
<var name="HOLD_OUT_PERCENTAGE" type="int" qualifier="builtins" value="10" />
<var name="HUGGINGFACE_CONFIG" type="str" qualifier="builtins" value="distilbert-base-cased" />
<var name="ITERATIVE_STRAT_ORDER" type="int" qualifier="builtins" value="1" />
<var name="In" type="list" qualifier="builtins" value="%5B%27%27%2C %22import sys%5Cn%5Cn%5Cn%5Cnget_ipython%28%29.run_line_magic%28%27load_ext%27%2C %27autoreload%27%29%5Cnget_ipython%28%29.run_line_magic%28%27autoreload%27%2C %272%27%29%22%2C %27from src.sklearn_utils import iter_train_test_split%2C simple_feature_engineering%5Cnfrom sklearn.ensemble import GradientBoostingClassifier%27%2C %27import pandas as pd%5Cnimport numpy as np%5Cnimport os%5Cnimport plotly.express as px%5Cnfrom skmultilearn.model_selection import IterativeStratification%5Cnfrom sklearn.model_selection import train_test_split%5Cnfrom sklearn.preprocessing import MultiLabelBinarizer%5Cnfrom sklearn.dummy import DummyClassifier%5Cnfrom sklearn.metrics import hamming_loss%5Cnimport seaborn as sns%5Cn%5Cnfrom sklearn.feature_extraction.text import TfidfVectorizer%5Cn%5Cnfrom yellowbrick.text import TSNEVisualizer%5Cnfrom yellowbrick.datasets import load_hobbies%5Cn%23 import tensorflow_addons as tfa%5Cnfrom sklearn.metrics import hamming_loss%5Cn%5Cnfrom skmultilearn.problem_transform import ClassifierChain%5Cnfrom sklearn.metrics import hamming_loss%2C accuracy_score%2C make_scorer..." isContainer="True" shape="30" isIPythonHidden="True" />
<var name="IterativeStratification" type="ABCMeta" qualifier="abc" value="%3Cclass %27skmultilearn.model_selection.iterative_stratification.IterativeStratification%27&gt;" isContainer="True" />
<var name="KEEP_MOST_COMMON_LABELS" type="int" qualifier="builtins" value="10" />
<var name="Lasso" type="ABCMeta" qualifier="abc" value="%3Cclass %27sklearn.linear_model._coordinate_descent.Lasso%27&gt;" isContainer="True" />
<var name="MultiIndex" type="type" qualifier="builtins" value="%3Cclass %27pandas.core.indexes.multi.MultiIndex%27&gt;" isContainer="True" />
<var name="MultiLabelBinarizer" type="type" qualifier="builtins" value="%3Cclass %27sklearn.preprocessing._label.MultiLabelBinarizer%27&gt;" isContainer="True" />
<var name="MultinomialNB" type="ABCMeta" qualifier="abc" value="%3Cclass %27sklearn.naive_bayes.MultinomialNB%27&gt;" isContainer="True" />
<var name="Out" type="dict" qualifier="builtins" value="%7B5%3A %27/home/stefan/PycharmProjects/multi-label-classification-climate/notebooks%27%2C 7%3A    policy_id                       policy_title  %5C%0A0      10088     Circular economy promotion law   %0A1      10087                14th Five-Year Plan   %0A2      10046             National Forest Policy   %0A3      10044   Suriname National REDD%2B Strategy   %0A4      10042  Policy Development Plan 2017-2021   %0A%0A                                             sectors  %5C%0A0                  Industry%3BAgriculture%3BEconomy-wide   %0A1  Transportation%3BRural%3BLULUCF%3BEnergy%3BEconomy-wid...   %0A2                                             LULUCF   %0A3                                             LULUCF   %0A4                                       Economy-wide   %0A%0A                                    description_text  %0A0  This law promotes the development of a circula...  %0A1  The 14th Five Year Plan lays down the strategy...  %0A2  This document aims at protecting the country%27s...  %0A3  This document aims to protect Suriname%27s fores......" isContainer="True" shape="12" isIPythonHidden="True" />
<var name="Path" type="type" qualifier="builtins" value="%3Cclass %27pathlib.Path%27&gt;" isContainer="True" />
<var name="Pipeline" type="ABCMeta" qualifier="abc" value="%3Cclass %27sklearn.pipeline.Pipeline%27&gt;" isContainer="True" />
<var name="SEED" type="int" qualifier="builtins" value="42" />
<var name="TEST_SET_FRAC" type="float" qualifier="builtins" value="0.1" />
<var name="TRAIN_FRACTION" type="float" qualifier="builtins" value="0.9" />
<var name="TSNEVisualizer" type="type" qualifier="builtins" value="%3Cclass %27yellowbrick.text.tsne.TSNEVisualizer%27&gt;" isContainer="True" />
<var name="TextFeatureEngineering" type="type" qualifier="builtins" value="%3Cclass %27src.sklearn_utils.TextFeatureEngineering%27&gt;" isContainer="True" />
<var name="TfidfVectorizer" type="type" qualifier="builtins" value="%3Cclass %27sklearn.feature_extraction.text.TfidfVectorizer%27&gt;" isContainer="True" />
<var name="Tuple" type="_TupleType" qualifier="typing" value="typing.Tuple" isContainer="True" />
<var name="X" type="DataFrame" qualifier="pandas.core.frame" value="policy_id                                       policy_title  %5C %5B0         10088                     Circular economy promotion law   %5D %5B3         10044                   Suriname National REDD%2B Strategy   %5D %5B5         10049                               Energy Strategy 2050   %5D %5B6         10051                   Long-Term Climate Strategy%2C 2021   %5D %5B9         10054  Environmentally Sustainable Transport System P...   %5D %5B...         ...                                                ...   %5D %5B1955       8835  National Climate Change Strategy and Action Pl...   %5D %5B1956       9110                 National Policy for Climate Change   %5D %5B1957       9191  Presidential Decree 7/2019 establishing the na...   %5D %5B1958       8889  Act No. 28 of 1972 concerning nuclear energy a...   %5D %5B1959       8887  Natural Hazards Compensation Act %28No. 59 of 2014%29   %5D %5B%5D %5B                                       description_text  %5C%5D %5B0     This law promotes the development of a circula...   %5D %5B3     This document aims to protect Surin...%5D" isContainer="True" shape="(1680, 14)" />
<var name="X_test" type="DataFrame" qualifier="pandas.core.frame" value="description_text  %5C %5B1497  The Enemalta %28Transfer of Assets%2C Rights%2C Liab...   %5D %5B1517  The National Climate Change Policy%2C published ...   %5D %5B1244  This document sets the remuneration framework ...   %5D %5B249   This document sets the government%27s National T...   %5D %5B698   This document sets the government%27s energy pol...   %5D %5B...                                                 ...   %5D %5B1704  The goal of this regulation is to grant financ...   %5D %5B598   This law commits Ireland%27s national treasury t...   %5D %5B1533  The Democratic Republic of Congo%27s Disaster Re...   %5D %5B1903  The Small and Medium-sized Power Plant Act was...   %5D %5B240   The Strategic Investment Framework for Environ...   %5D %5B%5D %5B                                           policy_title  %5C%5D %5B1497  ACT No. XXXIV of 2014 and associated feed-in t...   %5D %5B1517            Myanmar National Climate Change Policy    %5D %5B1244  Royal Decree 960/2020 regulating the economic ...   %5D %5B249   National Transport Plan 2018-2029 %28Meld. St. 3......%5D" isContainer="True" shape="(249, 3)" />
<var name="X_train" type="DataFrame" qualifier="pandas.core.frame" value="description_text  %5C %5B946   This Act establishes the Energy Market Authori...   %5D %5B1077  This Act creates the Energy and Climate Fund. ...   %5D %5B753   This Strategy%2C developed in partnership with U...   %5D %5B917   Energy efficiency labelling requirements are s...   %5D %5B966   The law provided a legal framework to set up a...   %5D %5B...                                                 ...   %5D %5B220   South Africa%27s Sectoral Cold Spell Management ...   %5D %5B422   The Energy Efficiency Action Plan 2011%3F2020 le...   %5D %5B789   This law states that the State shall provide t...   %5D %5B1125  The Strategy aims to develop a sustainable ene...   %5D %5B404   The main objectives of Law 1391-V are to%3A %5Cn- ...   %5D %5B%5D %5B                                           policy_title  %5C%5D %5B946   Energy Market Authority of Singapore Act %28Chap...   %5D %5B1077                 Energy and Climate Fund Act %28EKFG%29   %5D %5B753   Decentralized Rural Electrification Strategy %28...   %5D %5B917   Energy Resources Regulations %28Energy labeling ......%5D" isContainer="True" shape="(503, 3)" />
<var name="_" type="float64" qualifier="numpy" value="0.1382738095238095" shape="()" isIPythonHidden="True" />
<var name="_11" type="DataFrame" qualifier="pandas.core.frame" value="num_labels  cumulative_positive_labels  %5C %5BEnergy                                1143                        1143   %5D %5BTransportation                         761                        1904   %5D %5BLULUCF                                 398                        2302   %5D %5BEconomy-wide                           366                        2668   %5D %5BResidential and Commercial             351                        3019   %5D %5BAgriculture                            305                        3324   %5D %5BWater                                  297                        3621   %5D %5BIndustry                               238                        3859   %5D %5BWaste                                  177                        4036   %5D %5BHealth                                 158                        4194   %5D %5BEnvironment                            127                        4321   %5D %5BUrban                                   73                        4394   %5D %5BBuildings                             ...%5D" isContainer="True" shape="(23, 3)" isIPythonHidden="True" />
<var name="_12" type="Figure" qualifier="plotly.graph_objs._figure" value="Figure%28%7B%0A    %27data%27%3A %5B%7B%27alignmentgroup%27%3A %27True%27%2C%0A              %27hovertemplate%27%3A %27index=%25%7Bx%7D%3Cbr&gt;num_labels=%25%7By%7D%3Cextra&gt;%3C/extra&gt;%27%2C%0A              %27legendgroup%27%3A %27%27%2C%0A              %27marker%27%3A %7B%27color%27%3A %27%23636efa%27%2C %27pattern%27%3A %7B%27shape%27%3A %27%27%7D%7D%2C%0A              %27name%27%3A %27%27%2C%0A              %27offsetgroup%27%3A %27%27%2C%0A              %27orientation%27%3A %27v%27%2C%0A              %27showlegend%27%3A False%2C%0A              %27textposition%27%3A %27auto%27%2C%0A              %27type%27%3A %27bar%27%2C%0A              %27x%27%3A array%28%5B%27Energy%27%2C %27Transportation%27%2C %27LULUCF%27%2C %27Economy-wide%27%2C%0A                          %27Residential and Commercial%27%2C %27Agriculture%27%2C %27Water%27%2C %27Industry%27%2C%0A                          %27Waste%27%2C %27Health%27%2C %27Environment%27%2C %27Urban%27%2C %27Buildings%27%2C %27Tourism%27%2C%0A                          %27Social development%27%2C %27Disaster Risk Management %28Drm%29%27%2C %27Coastal zones%27%2C%0A                          %27Rural%27%2C %27Adaptation%27%2C %27Cross Cutting Area%27%2C %27Public Sector%27%2C %27Other%27%2C%0A                          %27Finance%27%5D%2C dtype=object%29%2C%0A              %27xaxis%27%3A %27x%27%2C%0A              %27y%27%3A array%28%5B1143..." isContainer="True" isIPythonHidden="True" />
<var name="_13" type="AxesSubplot" qualifier="matplotlib.axes._subplots" value="AxesSubplot%280.125%2C0.125%3B0.62x0.755%29" isContainer="True" isIPythonHidden="True" />
<var name="_14" type="Figure" qualifier="plotly.graph_objs._figure" value="Figure%28%7B%0A    %27data%27%3A %5B%7B%27alignmentgroup%27%3A %27True%27%2C%0A              %27bingroup%27%3A %27x%27%2C%0A              %27hovertemplate%27%3A %27variable=sectors_list%3Cbr&gt;value=%25%7Bx%7D%3Cbr&gt;count=%25%7By%7D%3Cextra&gt;%3C/extra&gt;%27%2C%0A              %27legendgroup%27%3A %27sectors_list%27%2C%0A              %27marker%27%3A %7B%27color%27%3A %27%23636efa%27%2C %27pattern%27%3A %7B%27shape%27%3A %27%27%7D%7D%2C%0A              %27name%27%3A %27sectors_list%27%2C%0A              %27offsetgroup%27%3A %27sectors_list%27%2C%0A              %27orientation%27%3A %27v%27%2C%0A              %27showlegend%27%3A True%2C%0A              %27type%27%3A %27histogram%27%2C%0A              %27x%27%3A array%28%5B3%2C 6%2C 1%2C ...%2C 5%2C 1%2C 1%5D%29%2C%0A              %27xaxis%27%3A %27x%27%2C%0A              %27yaxis%27%3A %27y%27%7D%5D%2C%0A    %27layout%27%3A %7B%27barmode%27%3A %27relative%27%2C%0A               %27legend%27%3A %7B%27title%27%3A %7B%27text%27%3A %27variable%27%7D%2C %27tracegroupgap%27%3A 0%7D%2C%0A               %27template%27%3A %27...%27%2C%0A               %27title%27%3A %7B%27text%27%3A %27num labels per instance%27%7D%2C%0A               %27xaxis%27%3A %7B%27anchor%27%3A %27y%27%2C %27domain%27%3A %5B0.0%2C 1.0%5D%2C %27title%27%3A %7B%27text%27%3A %27value%27%7D%7D%2C%0A               %27yaxis%27%3A %7B%27anchor%27%3A %27x%27%2C %27domain%27%3A %5B0.0%2C 1.0%5D%2C %27title%27%3A %7B%27text%27%3A %27count%27%7D%7D%7D%0A%7D%29" isContainer="True" isIPythonHidden="True" />
<var name="_15" type="Series" qualifier="pandas.core.series" value="%28%27Energy%27%2C 365%29 %28%27Economy-wide%27%2C 144%29 %28%27Transportation%3BEnergy%27%2C 117%29 %28%27Transportation%27%2C 112%29 %28%27Energy%3BResidential and Commercial%27%2C 63%29 %28%27LULUCF%27%2C 58%29 %28%27Transportation%3BEnergy%3BResidential and Commercial%27%2C 30%29 %28%27Agriculture%27%2C 26%29 %28%27Transportation%3BLULUCF%27%2C 24%29 %28%27Industry%3BEnergy%27%2C 24%29" isContainer="True" shape="(10,)" isIPythonHidden="True" />
<var name="_18" type="AxesSubplot" qualifier="matplotlib.axes._subplots" value="AxesSubplot%280.125%2C0.125%3B0.62x0.755%29" isContainer="True" isIPythonHidden="True" />
<var name="_24" type="Run" qualifier="wandb.sdk.wandb_run" value="%3Cwandb.sdk.wandb_run.Run object at 0x7fdea06a8400&gt;" isContainer="True" isIPythonHidden="True" />
<var name="_26" type="dict" qualifier="builtins" value="%7B%27memory%27%3A None%2C %27steps%27%3A %5B%28%27features%27%2C FeatureUnion%28transformer_list=%5B%28%27pipeline_text%27%2C%0A                                Pipeline%28steps=%5B%28%27select_text_col%27%2C%0A                                                 FunctionTransformer%28func=%3Cfunction select_col at 0x7fdf1be14310&gt;%29%29%2C%0A                                                %28%27tfidf%27%2C%0A                                                 TfidfVectorizer%28lowercase=False%2C%0A                                                                 max_df=0.5%2C%0A                                                                 stop_words=%27english%27%29%29%5D%29%29%2C%0A                               %28%27feature_engineering%27%2C%0A                                TextFeatureEngineering%28%29%29%5D%29%29%2C %28%27clf%27%2C ClassifierChain%28classifier=RandomForestClassifier%28%29%2C require_dense=%5BTrue%2C True%5D%29%29%5D%2C %27verbose%27%3A False%2C %27features%27%3A FeatureUnion%28transformer_list=%5B%28%27pipeline_text%27%2C%0A                                Pipeline%28steps=%5B%28%27select_text_col%27%2C%0A                                                 FunctionTran..." isContainer="True" shape="66" isIPythonHidden="True" />
<var name="_27" type="dict" qualifier="builtins" value="%7B%27classifier%27%3A RandomForestClassifier%28%29%2C %27classifier__bootstrap%27%3A True%2C %27classifier__ccp_alpha%27%3A 0.0%2C %27classifier__class_weight%27%3A None%2C %27classifier__criterion%27%3A %27gini%27%2C %27classifier__max_depth%27%3A None%2C %27classifier__max_features%27%3A %27auto%27%2C %27classifier__max_leaf_nodes%27%3A None%2C %27classifier__max_samples%27%3A None%2C %27classifier__min_impurity_decrease%27%3A 0.0%2C %27classifier__min_samples_leaf%27%3A 1%2C %27classifier__min_samples_split%27%3A 2%2C %27classifier__min_weight_fraction_leaf%27%3A 0.0%2C %27classifier__n_estimators%27%3A 100%2C %27classifier__n_jobs%27%3A None%2C %27classifier__oob_score%27%3A False%2C %27classifier__random_state%27%3A None%2C %27classifier__verbose%27%3A 0%2C %27classifier__warm_start%27%3A False%2C %27require_dense%27%3A %5BTrue%2C True%5D%2C %27order%27%3A None%7D" isContainer="True" shape="21" isIPythonHidden="True" />
<var name="_29" type="float64" qualifier="numpy" value="0.1382738095238095" shape="()" isIPythonHidden="True" />
<var name="_5" type="str" qualifier="builtins" value="/home/stefan/PycharmProjects/multi-label-classification-climate/notebooks" isIPythonHidden="True" />
<var name="_7" type="DataFrame" qualifier="pandas.core.frame" value="policy_id                       policy_title  %5C %5B0      10088     Circular economy promotion law   %5D %5B1      10087                14th Five-Year Plan   %5D %5B2      10046             National Forest Policy   %5D %5B3      10044   Suriname National REDD%2B Strategy   %5D %5B4      10042  Policy Development Plan 2017-2021   %5D %5B%5D %5B                                             sectors  %5C%5D %5B0                  Industry%3BAgriculture%3BEconomy-wide   %5D %5B1  Transportation%3BRural%3BLULUCF%3BEnergy%3BEconomy-wid...   %5D %5B2                                             LULUCF   %5D %5B3                                             LULUCF   %5D %5B4                                       Economy-wide   %5D %5B%5D %5B                                    description_text  %5D %5B0  This law promotes the development of a circula...  %5D %5B1  The 14th Five Year Plan lays down the strategy...  %5D %5B2  This document aims at protecting the country%27s...  %5D %5B3  This document aims to protect Suriname%27s fores...  %5D %5B4  This document lays out the country%27s developme...  %5D" isContainer="True" shape="(5, 4)" isIPythonHidden="True" />
<var name="__" type="dict" qualifier="builtins" value="%7B%27classifier%27%3A RandomForestClassifier%28%29%2C %27classifier__bootstrap%27%3A True%2C %27classifier__ccp_alpha%27%3A 0.0%2C %27classifier__class_weight%27%3A None%2C %27classifier__criterion%27%3A %27gini%27%2C %27classifier__max_depth%27%3A None%2C %27classifier__max_features%27%3A %27auto%27%2C %27classifier__max_leaf_nodes%27%3A None%2C %27classifier__max_samples%27%3A None%2C %27classifier__min_impurity_decrease%27%3A 0.0%2C %27classifier__min_samples_leaf%27%3A 1%2C %27classifier__min_samples_split%27%3A 2%2C %27classifier__min_weight_fraction_leaf%27%3A 0.0%2C %27classifier__n_estimators%27%3A 100%2C %27classifier__n_jobs%27%3A None%2C %27classifier__oob_score%27%3A False%2C %27classifier__random_state%27%3A None%2C %27classifier__verbose%27%3A 0%2C %27classifier__warm_start%27%3A False%2C %27require_dense%27%3A %5BTrue%2C True%5D%2C %27order%27%3A None%7D" isContainer="True" shape="21" isIPythonHidden="True" />
<var name="___" type="dict" qualifier="builtins" value="%7B%27memory%27%3A None%2C %27steps%27%3A %5B%28%27features%27%2C FeatureUnion%28transformer_list=%5B%28%27pipeline_text%27%2C%0A                                Pipeline%28steps=%5B%28%27select_text_col%27%2C%0A                                                 FunctionTransformer%28func=%3Cfunction select_col at 0x7fdf1be14310&gt;%29%29%2C%0A                                                %28%27tfidf%27%2C%0A                                                 TfidfVectorizer%28lowercase=False%2C%0A                                                                 max_df=0.5%2C%0A                                                                 stop_words=%27english%27%29%29%5D%29%29%2C%0A                               %28%27feature_engineering%27%2C%0A                                TextFeatureEngineering%28%29%29%5D%29%29%2C %28%27clf%27%2C ClassifierChain%28classifier=RandomForestClassifier%28%29%2C require_dense=%5BTrue%2C True%5D%29%29%5D%2C %27verbose%27%3A False%2C %27features%27%3A FeatureUnion%28transformer_list=%5B%28%27pipeline_text%27%2C%0A                                Pipeline%28steps=%5B%28%27select_text_col%27%2C%0A                                                 FunctionTran..." isContainer="True" shape="66" isIPythonHidden="True" />
<var name="__builtin__" type="module" qualifier="builtins" value="%3Cmodule %27builtins%27 %28built-in%29&gt;" isContainer="True" isIPythonHidden="True" />
<var name="__builtins__" type="module" qualifier="builtins" value="%3Cmodule %27builtins%27 %28built-in%29&gt;" isContainer="True" isIPythonHidden="True" />
<var name="__doc__" type="str" qualifier="builtins" value="Automatically created module for IPython interactive environment" isIPythonHidden="True" />
<var name="__loader__" type="NoneType" qualifier="builtins" value="None" isIPythonHidden="True" />
<var name="__name__" type="str" qualifier="builtins" value="__main__" isIPythonHidden="True" />
<var name="__package__" type="NoneType" qualifier="builtins" value="None" isIPythonHidden="True" />
<var name="__spec__" type="NoneType" qualifier="builtins" value="None" isIPythonHidden="True" />
<var name="_dh" type="list" qualifier="builtins" value="%5BPosixPath%28%27/home/stefan/PycharmProjects/multi-label-classification-climate/notebooks%27%29%5D" isContainer="True" shape="1" isIPythonHidden="True" />
<var name="_i" type="str" qualifier="builtins" value="from sklearn.model_selection import GridSearchCV%0A%0Aparam_grid_random_forest = %7B%27clf__classifier__n_estimators%27%3A%5B100%2C 200%5D%7D%0Agrid = GridSearchCV%28full_pipe_rf%2C param_grid=param_grid_random_forest%2C scoring=make_scorer%28hamming_loss%29%2C cv=5%2C error_score=%27raise%27%29%0A%23 Do grid search and log the results.%0Agrid.fit%28X%2C y%29%0Awandb.log%28%7B%27grid_score%27%3A grid.best_score_%2C %27grid_std%27%3A grid.cv_results_%5B%27std_test_score%27%5D%5Bgrid.best_index_%5D%7D%29" isIPythonHidden="True" />
<var name="_i1" type="str" qualifier="builtins" value="import sys%0A%0A%0A%0A%25load_ext autoreload%0A%25autoreload 2" isIPythonHidden="True" />
<var name="_i10" type="str" qualifier="builtins" value="%23 Let%27s analyse the labels.%0Alabels_flattened=df%5B%27sectors_list%27%5D.explode%28%29%0Aunique_labels=labels_flattened.unique%28%29%0An_unique_labels=len%28unique_labels%29%0Aprint%28f%22There are %7Bn_unique_labels%7D classes with possible labels%3A %5Cn %7Bunique_labels%7D%22%29" isIPythonHidden="True" />
<var name="_i11" type="str" qualifier="builtins" value="%23 What are the cumulative totals for each label%3F%0Anum_instances_each_label=labels_flattened.value_counts%28%29%0Atotal_positive_labels=num_instances_each_label.sum%28%29%0Acumulative_sum=num_instances_each_label.cumsum%28%29%0Afraction_dataset_covered=cumulative_sum/total_positive_labels%0Adf_labels=pd.DataFrame%28%7B%27num_labels%27%3A num_instances_each_label%2C%0A                        %27cumulative_positive_labels%27%3A cumulative_sum%2C %0A                        %27cumulative_fraction_dataset_covered%27%3A fraction_dataset_covered%7D%29%0Adf_labels" isIPythonHidden="True" />
<var name="_i12" type="str" qualifier="builtins" value="px.bar%28df_labels%2C x=df_labels.index%2C y=%27num_labels%27%2C title=%27label distribution%27%29" isIPythonHidden="True" />
<var name="_i13" type="str" qualifier="builtins" value="%23 12 most under represented labels.%0Aunderrepresented_labels=df_labels%5B11%3A%5D.index%0A%0Amlb=MultiLabelBinarizer%28%29%0Ay = mlb.fit_transform%28df%5B%27sectors_list%27%5D%29%0A%23 Now let%27s look at the correlations between labels.%0Asns.heatmap%28pd.DataFrame%28y%2C columns=mlb.classes_%29.corr%28%29.loc%5Bunderrepresented_labels%5D%29" isIPythonHidden="True" />
<var name="_i14" type="str" qualifier="builtins" value="px.histogram%28df%5B%27sectors_list%27%5D.apply%28len%29%2C title=%27num labels per instance%27%29" isIPythonHidden="True" />
<var name="_i15" type="str" qualifier="builtins" value="%23 Let%27s also check if there are any labels with an especially high number of classes such that we could change this to a multi-class problem%0A%23 instead of a multi-label problem.%0Adf%5B%27sectors%27%5D.value_counts%28%29.head%2810%29" isIPythonHidden="True" />
<var name="_i16" type="str" qualifier="builtins" value="common_labels=df_labels.index%5B0%3AKEEP_MOST_COMMON_LABELS%5D%0A%0A%23 Only keep sectors in top n labels%0Adf%5B%27sectors_list%27%5D = df%5B%27sectors_list%27%5D.apply%28lambda x%3A %5Btag for tag in x if tag in common_labels%5D%29%0Adf_filtered = df.copy%28%29%5Bdf%5B%27sectors_list%27%5D.str.len%28%29&gt;0%5D%0Adf_filtered.drop%28columns=%27sectors%27%2Cinplace=True%29" isIPythonHidden="True" />
<var name="_i17" type="str" qualifier="builtins" value="y = mlb.fit_transform%28df_filtered%5B%27sectors_list%27%5D%29%0A%0A%23 Split%0Adf_eda%2C df_test%2C y_eda%2C y_test = iter_train_test_split%28%0A    df_filtered%2C y%2C train_size=1-TEST_SET_FRAC%29%0A%0A%0Ay_eda_df = pd.DataFrame%28y_eda%2C columns = mlb.classes_%29" isIPythonHidden="True" />
<var name="_i18" type="str" qualifier="builtins" value="%23 Now let%27s look at the correlations between labels.%0Asns.heatmap%28y_eda_df.corr%28%29%29" isIPythonHidden="True" />
<var name="_i19" type="str" qualifier="builtins" value="%23 Let%27s do a quick analysis of a bunch of statistics from the text columns. %0A%0Adf_eda=df_eda.copy%28%29 %23 Suppress warnings%0Adf_eda%5B%27full_text%27%5D= df_eda%5B%27policy_title%27%5D%2B%27%3A %27%2Bdf_eda%5B%27description_text%27%5D %23 Concat text columns%0A%0Atext_cols=%5B%27description_text%27%2C %27policy_title%27%2C %27full_text%27%5D%0Atext_cols_n_words = %5Bf%27%7Bx%7D_nwords%27 for x in text_cols%5D%0Afor col in text_cols%3A%0A    df_eda%5Bf%27%7Bcol%7D_nwords%27%5D=df_eda%5Bcol%5D.str.split%28%29.str.len%28%29%0A    %0Adef subplot_helper%28cols%3A list%29 -&gt; None%3A%0A    fig=make_subplots%283%2C1%2C subplot_titles=cols%29%0A    for i%2C col in enumerate%28cols%29%3A%0A        trace=go.Histogram%28x=df_eda%5Bcol%5D%29%0A        fig.append_trace%28trace%2C i%2B1%2C1%29%0A    %0A    fig.update_layout%28height=700%2C width=800%29%0A    fig.show%28%29%0A%0Asubplot_helper%28text_cols_n_words%29" isIPythonHidden="True" />
<var name="_i2" type="str" qualifier="builtins" value="from src.sklearn_utils import iter_train_test_split%2C simple_feature_engineering%0Afrom sklearn.ensemble import GradientBoostingClassifier" isIPythonHidden="True" />
<var name="_i20" type="str" qualifier="builtins" value="tokenizer = AutoTokenizer.from_pretrained%28%27distilbert-base-cased%27%29%0Afor col in text_cols%3A%0A    df_eda%5Bf%27%7Bcol%7D_tokens%27%5D=df_eda%5Bcol%5D.apply%28lambda x%3A tokenizer.tokenize%28x%29%29%0A    df_eda%5Bf%27%7Bcol%7D_ntokens%27%5D=df_eda%5Bf%27%7Bcol%7D_tokens%27%5D.str.len%28%29%0A%0Atext_cols_n_tokens = %5Bf%27%7Bx%7D_ntokens%27 for x in text_cols%5D%0Asubplot_helper%28text_cols_n_tokens%29" isIPythonHidden="True" />
<var name="_i21" type="str" qualifier="builtins" value="%23 Let%27s see what happens if we subset the dataset so that it only contains rows with a single label%0A%23 and visualise the separation between classes to get%0Adf_single_label=df_eda%5Bdf_eda%5B%27sectors_list%27%5D.apply%28len%29==1%5D%0AX%2C y = df_single_label%5B%5B%27description_text%27%2C%27policy_title%27%2C%27full_text%27%5D%5D%2C df_single_label%5B%27sectors_list%27%5D.apply%28lambda x%3A x%5B0%5D%29%0AX_train%2C X_test%2C y_train%2C y_test = train_test_split%28%0A     X%2C y%2C test_size=0.33%2C random_state=SEED%29%0A%0Adef tsne_plot%28X_train%2C X_test%2C y_train%2C y_test%2C col%3A str%29%3A%0A    %22%22%22%0A    Helper to plot tsne visualisations on train and test set for a tfidf transformed column.%0A    %22%22%22%0A    tfidf = TfidfVectorizer%28%29%0A    tfidf.fit_transform%28X_train%5Bcol%5D%29%0A    train_features = tfidf.transform%28X_train%5Bcol%5D%29%0A    test_features = tfidf.transform%28X_test%5Bcol%5D%29%0A    tsne_train = TSNEVisualizer%28decompose_by=24%2C title=f%27Train set%3A %7Bcol%7D%27%29%0A    tsne_train.fit%28train_features%2C y_train%29%0A    tsne_train.show%28%29%0A    tsne_test = TSNEVisualizer%28decompose_by=24%2C title=f%27Test set%3A %7Bcol%7D%27%29%0A    ts..." isIPythonHidden="True" />
<var name="_i22" type="str" qualifier="builtins" value="from src.sklearn_utils import TextFeatureEngineering%2C select_col%2C construct_pipeline" isIPythonHidden="True" />
<var name="_i23" type="str" qualifier="builtins" value="X%2C y = df_eda%2C mlb.fit_transform%28df_eda%5B%27sectors_list%27%5D%29" isIPythonHidden="True" />
<var name="_i24" type="str" qualifier="builtins" value="import wandb%0Awandb.init%28project=%22climate-multi-label-classification%22%2C entity=%22stefl14%22%29" isIPythonHidden="True" />
<var name="_i25" type="str" qualifier="builtins" value="def select_col%28df%2C col=%27full_text%27%29%3A %23 lambda%27s not picklable%2C hence this one liner.%0A    return df%5Bcol%5D%0A%0Afull_pipe_rf=construct_pipeline%28%29%0Afull_pipe_gb=construct_pipeline%28clf=GradientBoostingClassifier%28%29%29%0A%0A%23 cv_score=cross_val_score%28full_pipe_rf%2C X%2C y%2C scoring=make_scorer%28hamming_loss%29%2C cv=5%2C error_score=%27raise%27%29%0A%23%0A%23 %23 fit full_pipe and log the results.%0A%23 full_pipe_rf.fit%28X%2C y%29%0A%23 wandb.log%28%7B%27cv_score%27%3A cv_score.mean%28%29%2C %27cv_std%27%3A cv_score.std%28%29%7D%29" isIPythonHidden="True" />
<var name="_i26" type="str" qualifier="builtins" value="full_pipe_rf.get_params%28%29" isIPythonHidden="True" />
<var name="_i27" type="str" qualifier="builtins" value="full_pipe_rf.named_steps%5B%27clf%27%5D.get_params%28%29" isIPythonHidden="True" />
<var name="_i28" type="str" qualifier="builtins" value="from sklearn.model_selection import GridSearchCV%0A%0Aparam_grid_random_forest = %7B%27clf__classifier__n_estimators%27%3A%5B100%2C 200%5D%7D%0Agrid = GridSearchCV%28full_pipe_rf%2C param_grid=param_grid_random_forest%2C scoring=make_scorer%28hamming_loss%29%2C cv=5%2C error_score=%27raise%27%29%0A%23 Do grid search and log the results.%0Agrid.fit%28X%2C y%29%0Awandb.log%28%7B%27grid_score%27%3A grid.best_score_%2C %27grid_std%27%3A grid.cv_results_%5B%27std_test_score%27%5D%5Bgrid.best_index_%5D%7D%29" isIPythonHidden="True" />
<var name="_i29" type="str" qualifier="builtins" value="grid.best_score_" isIPythonHidden="True" />
<var name="_i3" type="str" qualifier="builtins" value="import pandas as pd%0Aimport numpy as np%0Aimport os%0Aimport plotly.express as px%0Afrom skmultilearn.model_selection import IterativeStratification%0Afrom sklearn.model_selection import train_test_split%0Afrom sklearn.preprocessing import MultiLabelBinarizer%0Afrom sklearn.dummy import DummyClassifier%0Afrom sklearn.metrics import hamming_loss%0Aimport seaborn as sns%0A%0Afrom sklearn.feature_extraction.text import TfidfVectorizer%0A%0Afrom yellowbrick.text import TSNEVisualizer%0Afrom yellowbrick.datasets import load_hobbies%0A%23 import tensorflow_addons as tfa%0Afrom sklearn.metrics import hamming_loss%0A%0Afrom skmultilearn.problem_transform import ClassifierChain%0Afrom sklearn.metrics import hamming_loss%2C accuracy_score%2C make_scorer%0Afrom sklearn.feature_extraction.text import CountVectorizer%2C TfidfVectorizer%0Afrom sklearn.naive_bayes import MultinomialNB%0Afrom sklearn.pipeline import Pipeline%0Afrom sklearn.linear_model import Lasso%0Afrom sklearn.model_selection import cross_val_score%0Afrom datetime import time%0A%0Afrom trans..." isIPythonHidden="True" />
<var name="_i4" type="str" qualifier="builtins" value="def create_tokenized_ds%28%0A    X%2C y%2C text_column=%22description_text%22%2C model_name=%22bert-base-cased%22%2C batch_size=16%0A%29%3A%0A    y = np.array%28y%2C dtype=%22int32%22%29%0A    X = X%5Btext_column%5D%0A    tokens = tokenizer%28%0A        list%28X%29%2C%0A        padding=%22max_length%22%2C%0A        truncation=True%2C%0A        return_tensors=%22tf%22%2C%0A        return_token_type_ids=False%2C%0A    %29%0A    tokens_w_labels = tokens.copy%28%29%0A    tokens_w_labels%5B%22target%22%5D = y%0A    tf_dataset = tf.data.Dataset.from_tensor_slices%28%28dict%28tokens_w_labels%29%2C y%29%29%0A    tf_dataset = tf_dataset.shuffle%28len%28tf_dataset%29%29.batch%28batch_size%29%0A    return tf_dataset%0A%0A%0Aimport keras%0A%0AK = keras.backend%0A%0A%0Aclass ExponentialLearningRate%28keras.callbacks.Callback%29%3A%0A    def __init__%28self%2C factor%29%3A%0A        self.factor = factor%0A        self.rates = %5B%5D%0A        self.losses = %5B%5D%0A%0A    def on_batch_end%28self%2C batch%2C logs%29%3A%0A        self.rates.append%28K.get_value%28self.model.optimizer.learning_rate%29%29%0A        self.losses.append%28logs%5B%22loss%22%5D%29%0A        K.set_value%28%0A            self.model.optimizer.le..." isIPythonHidden="True" />
<var name="_i5" type="str" qualifier="builtins" value="os.getcwd%28%29" isIPythonHidden="True" />
<var name="_i6" type="str" qualifier="builtins" value="%23 Constants%0ASEED=42%0AHOLD_OUT_PERCENTAGE=10%0AITERATIVE_STRAT_ORDER=1%0AKEEP_MOST_COMMON_LABELS=10%0ABATCH_SIZE=16%0ATRAIN_FRACTION=0.9%0AHUGGINGFACE_CONFIG=%27distilbert-base-cased%27%0ATEST_SET_FRAC=.1" isIPythonHidden="True" />
<var name="_i7" type="str" qualifier="builtins" value="data_path = Path%28os.path.abspath%28%27%27%29%29.parent / %27data%27 / %27recruitment-task_1-full.csv%27%0A%0Adf=pd.read_csv%28%27/home/stefan/PycharmProjects/multi-label-classification-climate/data/recruitment-task_1-full.csv%27%29%0Adf.head%28%29" isIPythonHidden="True" />
<var name="_i8" type="str" qualifier="builtins" value="df.info%28%29" isIPythonHidden="True" />
<var name="_i9" type="str" qualifier="builtins" value="%23 Parse labels into a list.%0Adf%5B%27sectors_list%27%5D=df%5B%27sectors%27%5D.str.split%28%22%3B%22%29%0Adf=df%5B~df.description_text.duplicated%28%29%5D %23 Found a duplicated entry" isIPythonHidden="True" />
<var name="_ih" type="list" qualifier="builtins" value="%5B%27%27%2C %22import sys%5Cn%5Cn%5Cn%5Cnget_ipython%28%29.run_line_magic%28%27load_ext%27%2C %27autoreload%27%29%5Cnget_ipython%28%29.run_line_magic%28%27autoreload%27%2C %272%27%29%22%2C %27from src.sklearn_utils import iter_train_test_split%2C simple_feature_engineering%5Cnfrom sklearn.ensemble import GradientBoostingClassifier%27%2C %27import pandas as pd%5Cnimport numpy as np%5Cnimport os%5Cnimport plotly.express as px%5Cnfrom skmultilearn.model_selection import IterativeStratification%5Cnfrom sklearn.model_selection import train_test_split%5Cnfrom sklearn.preprocessing import MultiLabelBinarizer%5Cnfrom sklearn.dummy import DummyClassifier%5Cnfrom sklearn.metrics import hamming_loss%5Cnimport seaborn as sns%5Cn%5Cnfrom sklearn.feature_extraction.text import TfidfVectorizer%5Cn%5Cnfrom yellowbrick.text import TSNEVisualizer%5Cnfrom yellowbrick.datasets import load_hobbies%5Cn%23 import tensorflow_addons as tfa%5Cnfrom sklearn.metrics import hamming_loss%5Cn%5Cnfrom skmultilearn.problem_transform import ClassifierChain%5Cnfrom sklearn.metrics import hamming_loss%2C accuracy_score%2C make_scorer..." isContainer="True" shape="30" isIPythonHidden="True" />
<var name="_ii" type="str" qualifier="builtins" value="full_pipe_rf.named_steps%5B%27clf%27%5D.get_params%28%29" isIPythonHidden="True" />
<var name="_iii" type="str" qualifier="builtins" value="full_pipe_rf.get_params%28%29" isIPythonHidden="True" />
<var name="_oh" type="dict" qualifier="builtins" value="%7B5%3A %27/home/stefan/PycharmProjects/multi-label-classification-climate/notebooks%27%2C 7%3A    policy_id                       policy_title  %5C%0A0      10088     Circular economy promotion law   %0A1      10087                14th Five-Year Plan   %0A2      10046             National Forest Policy   %0A3      10044   Suriname National REDD%2B Strategy   %0A4      10042  Policy Development Plan 2017-2021   %0A%0A                                             sectors  %5C%0A0                  Industry%3BAgriculture%3BEconomy-wide   %0A1  Transportation%3BRural%3BLULUCF%3BEnergy%3BEconomy-wid...   %0A2                                             LULUCF   %0A3                                             LULUCF   %0A4                                       Economy-wide   %0A%0A                                    description_text  %0A0  This law promotes the development of a circula...  %0A1  The 14th Five Year Plan lays down the strategy...  %0A2  This document aims at protecting the country%27s...  %0A3  This document aims to protect Suriname%27s fores......" isContainer="True" shape="12" isIPythonHidden="True" />
<var name="_pydevd_bundle" type="module" qualifier="builtins" value="%3Cmodule %27_pydevd_bundle%27 from %27/snap/pycharm-professional/290/plugins/python/helpers/pydev/_pydevd_bundle/__init__.py%27&gt;" isContainer="True" />
<var name="accuracy_score" type="function" qualifier="builtins" value="%3Cfunction accuracy_score at 0x7fdf48fbb8b0&gt;" isContainer="True" />
<var name="col" type="str" qualifier="builtins" value="full_text" />
<var name="common_labels" type="Index" qualifier="pandas.core.indexes.base" value="Index%28%5B%27Energy%27%2C %27Transportation%27%2C %27LULUCF%27%2C %27Economy-wide%27%2C%0A       %27Residential and Commercial%27%2C %27Agriculture%27%2C %27Water%27%2C %27Industry%27%2C%0A       %27Waste%27%2C %27Health%27%5D%2C%0A      dtype=%27object%27%29" isContainer="True" shape="(10,)" />
<var name="construct_pipeline" type="function" qualifier="builtins" value="%3Cfunction construct_pipeline at 0x7fdf1be14a60&gt;" isContainer="True" />
<var name="create_tokenized_ds" type="function" qualifier="builtins" value="%3Cfunction create_tokenized_ds at 0x7fdf196f1790&gt;" isContainer="True" />
<var name="cross_val_score" type="function" qualifier="builtins" value="%3Cfunction cross_val_score at 0x7fdf48eb9b80&gt;" isContainer="True" />
<var name="cumulative_sum" type="Series" qualifier="pandas.core.series" value="%28%27Energy%27%2C 1143%29 %28%27Transportation%27%2C 1904%29 %28%27LULUCF%27%2C 2302%29 %28%27Economy-wide%27%2C 2668%29 %28%27Residential and Commercial%27%2C 3019%29 %28%27Agriculture%27%2C 3324%29 %28%27Water%27%2C 3621%29 %28%27Industry%27%2C 3859%29 %28%27Waste%27%2C 4036%29 %28%27Health%27%2C 4194%29 %28%27Environment%27%2C 4321%29 %28%27Urban%27%2C 4394%29 %28%27Buildings%27%2C 4459%29 %28%27Tourism%27%2C 4511%29 %28%27Social development%27%2C 4556%29 %28%27Disaster Risk Management %28Drm%29%27%2C 4589%29 %28%27Coastal zones%27%2C 4617%29 %28%27Rural%27%2C 4636%29 %28%27Adaptation%27%2C 4647%29 %28%27Cross Cutting Area%27%2C 4656%29 %28%27Public Sector%27%2C 4664%29 %28%27Other%27%2C 4670%29 %28%27Finance%27%2C 4675%29" isContainer="True" shape="(23,)" />
<var name="data_path" type="PosixPath" qualifier="pathlib" value="/home/stefan/PycharmProjects/multi-label-classification-climate/data/recruitment-task_1-full.csv" isContainer="True" />
<var name="df" type="DataFrame" qualifier="pandas.core.frame" value="policy_id                                       policy_title  %5C %5B0         10088                     Circular economy promotion law   %5D %5B1         10087                                14th Five-Year Plan   %5D %5B2         10046                             National Forest Policy   %5D %5B3         10044                   Suriname National REDD%2B Strategy   %5D %5B4         10042                  Policy Development Plan 2017-2021   %5D %5B...         ...                                                ...   %5D %5B1955       8835  National Climate Change Strategy and Action Pl...   %5D %5B1956       9110                 National Policy for Climate Change   %5D %5B1957       9191  Presidential Decree 7/2019 establishing the na...   %5D %5B1958       8889  Act No. 28 of 1972 concerning nuclear energy a...   %5D %5B1959       8887  Natural Hazards Compensation Act %28No. 59 of 2014%29   %5D %5B%5D %5B                                                sectors  %5C%5D %5B0                     Industry%3BAgriculture%3BEconomy-wide   %5D %5B1     Transportation%3BRural%3BLULUCF%3BEnergy%3B...%5D" isContainer="True" shape="(1959, 5)" />
<var name="df_eda" type="DataFrame" qualifier="pandas.core.frame" value="policy_id                                       policy_title  %5C %5B0         10088                     Circular economy promotion law   %5D %5B3         10044                   Suriname National REDD%2B Strategy   %5D %5B5         10049                               Energy Strategy 2050   %5D %5B6         10051                   Long-Term Climate Strategy%2C 2021   %5D %5B9         10054  Environmentally Sustainable Transport System P...   %5D %5B...         ...                                                ...   %5D %5B1955       8835  National Climate Change Strategy and Action Pl...   %5D %5B1956       9110                 National Policy for Climate Change   %5D %5B1957       9191  Presidential Decree 7/2019 establishing the na...   %5D %5B1958       8889  Act No. 28 of 1972 concerning nuclear energy a...   %5D %5B1959       8887  Natural Hazards Compensation Act %28No. 59 of 2014%29   %5D %5B%5D %5B                                       description_text  %5C%5D %5B0     This law promotes the development of a circula...   %5D %5B3     This document aims to protect Surin...%5D" isContainer="True" shape="(1680, 14)" />
<var name="df_filtered" type="DataFrame" qualifier="pandas.core.frame" value="policy_id                                       policy_title  %5C %5B0         10088                     Circular economy promotion law   %5D %5B1         10087                                14th Five-Year Plan   %5D %5B2         10046                             National Forest Policy   %5D %5B3         10044                   Suriname National REDD%2B Strategy   %5D %5B4         10042                  Policy Development Plan 2017-2021   %5D %5B...         ...                                                ...   %5D %5B1955       8835  National Climate Change Strategy and Action Pl...   %5D %5B1956       9110                 National Policy for Climate Change   %5D %5B1957       9191  Presidential Decree 7/2019 establishing the na...   %5D %5B1958       8889  Act No. 28 of 1972 concerning nuclear energy a...   %5D %5B1959       8887  Natural Hazards Compensation Act %28No. 59 of 2014%29   %5D %5B%5D %5B                                       description_text  %5C%5D %5B0     This law promotes the development of a circula...   %5D %5B1     The 14th Five Year Plan lays down t...%5D" isContainer="True" shape="(1879, 4)" />
<var name="df_labels" type="DataFrame" qualifier="pandas.core.frame" value="num_labels  cumulative_positive_labels  %5C %5BEnergy                                1143                        1143   %5D %5BTransportation                         761                        1904   %5D %5BLULUCF                                 398                        2302   %5D %5BEconomy-wide                           366                        2668   %5D %5BResidential and Commercial             351                        3019   %5D %5BAgriculture                            305                        3324   %5D %5BWater                                  297                        3621   %5D %5BIndustry                               238                        3859   %5D %5BWaste                                  177                        4036   %5D %5BHealth                                 158                        4194   %5D %5BEnvironment                            127                        4321   %5D %5BUrban                                   73                        4394   %5D %5BBuildings                             ...%5D" isContainer="True" shape="(23, 3)" />
<var name="df_single_label" type="DataFrame" qualifier="pandas.core.frame" value="policy_id                                       policy_title  %5C %5B3         10044                   Suriname National REDD%2B Strategy   %5D %5B5         10049                               Energy Strategy 2050   %5D %5B6         10051                   Long-Term Climate Strategy%2C 2021   %5D %5B9         10054  Environmentally Sustainable Transport System P...   %5D %5B10        10061  Uganda Green Growth Development Strategy 2017/...   %5D %5B...         ...                                                ...   %5D %5B1950       8704  National Strategy for Adaptation to Climate Ch...   %5D %5B1953       8766  Priority Framework for Action%3A Climate Change ...   %5D %5B1956       9110                 National Policy for Climate Change   %5D %5B1958       8889  Act No. 28 of 1972 concerning nuclear energy a...   %5D %5B1959       8887  Natural Hazards Compensation Act %28No. 59 of 2014%29   %5D %5B%5D %5B                                       description_text      sectors_list  %5C%5D %5B3     This document aims to protect Suriname%27s fores...          %5BLULUCF%5D   %5D %5B5    ...%5D" isContainer="True" shape="(752, 14)" />
<var name="df_test" type="DataFrame" qualifier="pandas.core.frame" value="policy_id                                       policy_title  %5C %5B1        10087                                14th Five-Year Plan   %5D %5B2        10046                             National Forest Policy   %5D %5B4        10042                  Policy Development Plan 2017-2021   %5D %5B7        10052                 Switzerland%E2%80%99s climate policy%2C 2018   %5D %5B8        10053       Smart Grid Development Master Plan 2015-2036   %5D %5B..         ...                                                ...   %5D %5B549       9133                     Law No. 293-Z on energy saving   %5D %5B552       9045                  Law No. 1136-XIV on energy saving   %5D %5B588       8784  Industrial Sector Plan for mitigation and Adap...   %5D %5B616       8687                              Pollution Control Act   %5D %5B760       4313          Second National Environmental Action Plan   %5D %5B%5D %5B                                      description_text  %5C%5D %5B1    The 14th Five Year Plan lays down the strategy...   %5D %5B2    This document aims at protecting the country%27s... ...%5D" isContainer="True" shape="(199, 4)" />
<var name="exit" type="ZMQExitAutocall" qualifier="IPython.core.autocall" value="%3CIPython.core.autocall.ZMQExitAutocall object at 0x7fdf59b7a1c0&gt;" isContainer="True" isIPythonHidden="True" />
<var name="fraction_dataset_covered" type="Series" qualifier="pandas.core.series" value="%28%27Energy%27%2C 0.24449197860962568%29 %28%27Transportation%27%2C 0.4072727272727273%29 %28%27LULUCF%27%2C 0.4924064171122995%29 %28%27Economy-wide%27%2C 0.5706951871657754%29 %28%27Residential and Commercial%27%2C 0.6457754010695187%29 %28%27Agriculture%27%2C 0.7110160427807487%29 %28%27Water%27%2C 0.7745454545454545%29 %28%27Industry%27%2C 0.8254545454545454%29 %28%27Waste%27%2C 0.8633155080213903%29 %28%27Health%27%2C 0.8971122994652406%29 %28%27Environment%27%2C 0.9242780748663102%29 %28%27Urban%27%2C 0.9398930481283423%29 %28%27Buildings%27%2C 0.9537967914438503%29 %28%27Tourism%27%2C 0.9649197860962567%29 %28%27Social development%27%2C 0.9745454545454545%29 %28%27Disaster Risk Management %28Drm%29%27%2C 0.9816042780748663%29 %28%27Coastal zones%27%2C 0.9875935828877005%29 %28%27Rural%27%2C 0.9916577540106952%29 %28%27Adaptation%27%2C 0.9940106951871658%29 %28%27Cross Cutting Area%27%2C 0.9959358288770054%29 %28%27Public Sector%27%2C 0.9976470588235294%29 %28%27Other%27%2C 0.9989304812834224%29 %28%27Finance%27%2C 1.0%29" isContainer="True" shape="(23,)" />
<var name="full_pipe_gb" type="Pipeline" qualifier="sklearn.pipeline" value="Pipeline%28steps=%5B%28%27features%27%2C%0A                 FeatureUnion%28transformer_list=%5B%28%27pipeline_text%27%2C%0A                                                 Pipeline%28steps=%5B%28%27select_text_col%27%2C%0A                                                                  FunctionTransformer%28func=%3Cfunction select_col at 0x7fdf1be14310&gt;%29%29%2C%0A                                                                 %28%27tfidf%27%2C%0A                                                                  TfidfVectorizer%28lowercase=False%2C%0A                                                                                  max_df=0.5%2C%0A                                                                                  stop_words=%27english%27%29%29%5D%29%29%2C%0A                                                %28%27feature_engineering%27%2C%0A                                                 TextFeatureEngineering%28%29%29%5D%29%29%2C%0A                %28%27clf%27%2C%0A                 ClassifierChain%28classifier=GradientBoostingClassifier%28%29%2C%0A                                 require_dense=%5BTrue%2C True%5D%29..." isContainer="True" shape="2" />
<var name="full_pipe_rf" type="Pipeline" qualifier="sklearn.pipeline" value="Pipeline%28steps=%5B%28%27features%27%2C%0A                 FeatureUnion%28transformer_list=%5B%28%27pipeline_text%27%2C%0A                                                 Pipeline%28steps=%5B%28%27select_text_col%27%2C%0A                                                                  FunctionTransformer%28func=%3Cfunction select_col at 0x7fdf1be14310&gt;%29%29%2C%0A                                                                 %28%27tfidf%27%2C%0A                                                                  TfidfVectorizer%28lowercase=False%2C%0A                                                                                  max_df=0.5%2C%0A                                                                                  stop_words=%27english%27%29%29%5D%29%29%2C%0A                                                %28%27feature_engineering%27%2C%0A                                                 TextFeatureEngineering%28%29%29%5D%29%29%2C%0A                %28%27clf%27%2C%0A                 ClassifierChain%28classifier=RandomForestClassifier%28%29%2C%0A                                 require_dense=%5BTrue%2C True%5D%29%29%5D%29" isContainer="True" shape="2" />
<var name="get_ipython" type="method" qualifier="builtins" value="%3Cbound method InteractiveShell.get_ipython of %3Cipykernel.zmqshell.ZMQInteractiveShell object at 0x7fdf59b5e520&gt;&gt;" isContainer="True" isIPythonHidden="True" />
<var name="go" type="module" qualifier="builtins" value="%3Cmodule %27plotly.graph_objects%27 from %27/home/stefan/anaconda3/envs/multi-label-classification-climate/lib/python3.9/site-packages/plotly/graph_objects/__init__.py%27&gt;" isContainer="True" />
<var name="grid" type="GridSearchCV" qualifier="sklearn.model_selection._search" value="GridSearchCV%28cv=5%2C error_score=%27raise%27%2C%0A             estimator=Pipeline%28steps=%5B%28%27features%27%2C%0A                                        FeatureUnion%28transformer_list=%5B%28%27pipeline_text%27%2C%0A                                                                        Pipeline%28steps=%5B%28%27select_text_col%27%2C%0A                                                                                         FunctionTransformer%28func=%3Cfunction select_col at 0x7fdf1be14310&gt;%29%29%2C%0A                                                                                        %28%27tfidf%27%2C%0A                                                                                         TfidfVectorizer%28lowercase=False%2C%0A                                                                                                         max_df=0.5%2C%0A                                                                                                         stop_words=%27english%27%29%29%5D%29%29%2C%0A                                                                       %28%27feature_engi..." isContainer="True" />
<var name="hamming_loss" type="function" qualifier="builtins" value="%3Cfunction hamming_loss at 0x7fdf48fc2280&gt;" isContainer="True" />
<var name="iter_train_test_split" type="function" qualifier="builtins" value="%3Cfunction iter_train_test_split at 0x7fdf1cce23a0&gt;" isContainer="True" />
<var name="joblib" type="module" qualifier="builtins" value="%3Cmodule %27joblib%27 from %27/home/stefan/anaconda3/envs/multi-label-classification-climate/lib/python3.9/site-packages/joblib/__init__.py%27&gt;" isContainer="True" />
<var name="labels_flattened" type="Series" qualifier="pandas.core.series" value="%280%2C %27Industry%27%29 %280%2C %27Agriculture%27%29 %280%2C %27Economy-wide%27%29 %281%2C %27Transportation%27%29 %281%2C %27Rural%27%29 %281%2C %27LULUCF%27%29 %281%2C %27Energy%27%29 %281%2C %27Economy-wide%27%29 %281%2C %27Agriculture%27%29 %282%2C %27LULUCF%27%29 %283%2C %27LULUCF%27%29 %284%2C %27Economy-wide%27%29 %285%2C %27Energy%27%29 %286%2C %27Economy-wide%27%29 %287%2C %27Economy-wide%27%29 %288%2C %27Energy%27%29 %289%2C %27Transportation%27%29 %2810%2C %27Economy-wide%27%29 %2811%2C %27Economy-wide%27%29 %2812%2C %27Economy-wide%27%29 %2813%2C %27Economy-wide%27%29 %2814%2C %27Economy-wide%27%29 %2815%2C %27Economy-wide%27%29 %2816%2C %27Social development%27%29 %2816%2C %27LULUCF%27%29 %2816%2C %27Economy-wide%27%29 %2817%2C %27Industry%27%29 %2818%2C %27Economy-wide%27%29 %2819%2C %27Agriculture%27%29 %2821%2C %27Energy%27%29 %2821%2C %27Economy-wide%27%29 %2821%2C %27Adaptation%27%29 %2822%2C %27Health%27%29 %2823%2C %27Economy-wide%27%29 %2824%2C %27Economy-wide%27%29 %2825%2C %27Transportation%27%29 %2826%2C %27LULUCF%27%29 %2827%2C %27Economy-wide%27%29 %2828%2C %27Adaptation%27%29 %2829%2C %27Buildings%27%29 %2830%2C %27Tourism%27%29 %2831%2C %27Environment%27%29 %2831%2C %27Energy%27%29 %2831%2C %27Economy-wide%27%29 %2832%2C %27Economy-wide%27%29 %2833%2C %27Transportation%27%29 %2834%2C %27Energy%27%29 %2834%2C %27Economy-wide%27%29 %2835%2C %27Economy-wide%27%29 %2835%2C %27Coastal zones%27%29 %2835%2C %27Adaptation%27%29 %2836%2C %27LULUCF%27%29 %2836%2C %27Energy%27%29 %2836%2C %27Economy-wide%27%29 %2837%2C %27LULUCF%27%29 %2838%2C %27Environment%27%29 %2839%2C %27LULUCF%27%29 %2839%2C %27Energy%27%29 %2840%2C %27Industry%27%29 %2840%2C %27Health%27%29 %2840%2C %27Economy-wide%27%29 %2840%2C %27Coastal zones%27%29 %2840%2C %27Buildings%27%29 %2841%2C %27Urban%27%29 %2841%2C %27Energy%27%29 %2842%2C %27Water%27%29 %2842%2C %27Cross Cutting Area%27%29 %2843%2C %27Economy-wide%27%29 %2844%2C %27Transportation%27%29 %2844%2C %27Public Sector%27%29 %2844%2C %27Buildings%27%29 %2845%2C %27Energy%27%29 %2846%2C %27Urban%27%29 %2846%2C %27LULUCF%27%29 %2846%2C %27Agriculture%27%29 %2847%2C %27Environment%27%29 %2848%2C %27LULUCF%27%29 %2849%2C %27Energy%27%29 %2849%2C %27Economy-wide%27%29 %2850%2C %27Residential and Commercial%27%29 %2850%2C %27Buildings%27%29 %2851%2C %27LULUCF%27%29 %2852%2C %27Economy-wide%27%29 %2853%2C %27Economy-wide%27%29 %2854%2C %27Economy-wide%27%29 %2855%2C %27Energy%27%29 %2856%2C %27Energy%27%29 %2857%2C %27Economy-wide%27%29 %2858%2C %27Economy-wide%27%29 %2859%2C %27Economy-wide%27%29 %2860%2C %27Economy-wide%27%29 %2861%2C %27Economy-wide%27%29 %2862%2C %27Transportation%27%29 %2863%2C %27Economy-wide%27%29 %2864%2C %27Economy-wide%27%29 %2865%2C %27Energy%27%29 %2866%2C %27Energy%27%29 %2867%2C %27Economy-wide%27%29 %2868%2C %27Transportation%27%29 %2869%2C %27Economy-wide%27%29" isContainer="True" shape="(4675,)" />
<var name="load_hobbies" type="function" qualifier="builtins" value="%3Cfunction load_hobbies at 0x7fdf1b790700&gt;" isContainer="True" />
<var name="logger" type="RootLogger" qualifier="logging" value="%3CRootLogger root %28CRITICAL%29&gt;" isContainer="True" />
<var name="logging" type="module" qualifier="builtins" value="%3Cmodule %27logging%27 from %27/home/stefan/anaconda3/envs/multi-label-classification-climate/lib/python3.9/logging/__init__.py%27&gt;" isContainer="True" />
<var name="make_scorer" type="function" qualifier="builtins" value="%3Cfunction make_scorer at 0x7fdf48eac670&gt;" isContainer="True" />
<var name="make_subplots" type="function" qualifier="builtins" value="%3Cfunction make_subplots at 0x7fdf1a24e790&gt;" isContainer="True" />
<var name="math" type="module" qualifier="builtins" value="%3Cmodule %27math%27 from %27/home/stefan/anaconda3/envs/multi-label-classification-climate/lib/python3.9/lib-dynload/math.cpython-39-x86_64-linux-gnu.so%27&gt;" isContainer="True" />
<var name="mlb" type="MultiLabelBinarizer" qualifier="sklearn.preprocessing._label" value="MultiLabelBinarizer%28%29" isContainer="True" />
<var name="n_unique_labels" type="int" qualifier="builtins" value="23" />
<var name="np" type="module" qualifier="builtins" value="%3Cmodule %27numpy%27 from %27/home/stefan/anaconda3/envs/multi-label-classification-climate/lib/python3.9/site-packages/numpy/__init__.py%27&gt;" isContainer="True" />
<var name="num_instances_each_label" type="Series" qualifier="pandas.core.series" value="%28%27Energy%27%2C 1143%29 %28%27Transportation%27%2C 761%29 %28%27LULUCF%27%2C 398%29 %28%27Economy-wide%27%2C 366%29 %28%27Residential and Commercial%27%2C 351%29 %28%27Agriculture%27%2C 305%29 %28%27Water%27%2C 297%29 %28%27Industry%27%2C 238%29 %28%27Waste%27%2C 177%29 %28%27Health%27%2C 158%29 %28%27Environment%27%2C 127%29 %28%27Urban%27%2C 73%29 %28%27Buildings%27%2C 65%29 %28%27Tourism%27%2C 52%29 %28%27Social development%27%2C 45%29 %28%27Disaster Risk Management %28Drm%29%27%2C 33%29 %28%27Coastal zones%27%2C 28%29 %28%27Rural%27%2C 19%29 %28%27Adaptation%27%2C 11%29 %28%27Cross Cutting Area%27%2C 9%29 %28%27Public Sector%27%2C 8%29 %28%27Other%27%2C 6%29 %28%27Finance%27%2C 5%29" isContainer="True" shape="(23,)" />
<var name="os" type="module" qualifier="builtins" value="%3Cmodule %27os%27 from %27/home/stefan/anaconda3/envs/multi-label-classification-climate/lib/python3.9/os.py%27&gt;" isContainer="True" />
<var name="param_grid_random_forest" type="dict" qualifier="builtins" value="%7B%27clf__classifier__n_estimators%27%3A %5B100%2C 200%5D%7D" isContainer="True" shape="1" />
<var name="pd" type="module" qualifier="builtins" value="%3Cmodule %27pandas%27 from %27/home/stefan/anaconda3/envs/multi-label-classification-climate/lib/python3.9/site-packages/pandas/__init__.py%27&gt;" isContainer="True" />
<var name="plt" type="module" qualifier="builtins" value="%3Cmodule %27matplotlib.pyplot%27 from %27/home/stefan/anaconda3/envs/multi-label-classification-climate/lib/python3.9/site-packages/matplotlib/pyplot.py%27&gt;" isContainer="True" />
<var name="print_columns" type="function" qualifier="builtins" value="%3Cfunction print_columns at 0x7fde80473550&gt;" isContainer="True" />
<var name="px" type="module" qualifier="builtins" value="%3Cmodule %27plotly.express%27 from %27/home/stefan/anaconda3/envs/multi-label-classification-climate/lib/python3.9/site-packages/plotly/express/__init__.py%27&gt;" isContainer="True" />
<var name="pydev_jupyter_vars" type="module" qualifier="builtins" value="%3Cmodule %27pydev_jupyter_vars%27 from %27/snap/pycharm-professional/290/plugins/python/helpers-pro/jupyter_debug/pydev_jupyter_vars.py%27&gt;" isContainer="True" />
<var name="quit" type="ZMQExitAutocall" qualifier="IPython.core.autocall" value="%3CIPython.core.autocall.ZMQExitAutocall object at 0x7fdf59b7a1c0&gt;" isContainer="True" isIPythonHidden="True" />
<var name="remove_imported_pydev_package" type="function" qualifier="builtins" value="%3Cfunction remove_imported_pydev_package at 0x7fdf1cd905e0&gt;" isContainer="True" />
<var name="select_col" type="function" qualifier="builtins" value="%3Cfunction select_col at 0x7fdeab42f0d0&gt;" isContainer="True" />
<var name="simple_feature_engineering" type="function" qualifier="builtins" value="%3Cfunction simple_feature_engineering at 0x7fdf1cb21af0&gt;" isContainer="True" />
<var name="sns" type="module" qualifier="builtins" value="%3Cmodule %27seaborn%27 from %27/home/stefan/anaconda3/envs/multi-label-classification-climate/lib/python3.9/site-packages/seaborn/__init__.py%27&gt;" isContainer="True" />
<var name="subplot_helper" type="function" qualifier="builtins" value="%3Cfunction subplot_helper at 0x7fdf0eee9f70&gt;" isContainer="True" />
<var name="sys" type="module" qualifier="builtins" value="%3Cmodule %27sys%27 %28built-in%29&gt;" isContainer="True" />
<var name="text_cols" type="list" qualifier="builtins" value="%5B%27description_text%27%2C %27policy_title%27%2C %27full_text%27%5D" isContainer="True" shape="3" />
<var name="text_cols_n_tokens" type="list" qualifier="builtins" value="%5B%27description_text_ntokens%27%2C %27policy_title_ntokens%27%2C %27full_text_ntokens%27%5D" isContainer="True" shape="3" />
<var name="text_cols_n_words" type="list" qualifier="builtins" value="%5B%27description_text_nwords%27%2C %27policy_title_nwords%27%2C %27full_text_nwords%27%5D" isContainer="True" shape="3" />
<var name="time" type="type" qualifier="builtins" value="%3Cclass %27datetime.time%27&gt;" isContainer="True" />
<var name="tokenizer" type="DistilBertTokenizerFast" qualifier="transformers.models.distilbert.tokenization_distilbert_fast" value="PreTrainedTokenizerFast%28name_or_path=%27distilbert-base-cased%27%2C vocab_size=28996%2C model_max_len=512%2C is_fast=True%2C padding_side=%27right%27%2C truncation_side=%27right%27%2C special_tokens=%7B%27unk_token%27%3A %27%5BUNK%5D%27%2C %27sep_token%27%3A %27%5BSEP%5D%27%2C %27pad_token%27%3A %27%5BPAD%5D%27%2C %27cls_token%27%3A %27%5BCLS%5D%27%2C %27mask_token%27%3A %27%5BMASK%5D%27%7D%29" isContainer="True" shape="28996" />
<var name="total_positive_labels" type="int64" qualifier="numpy" value="4675" isContainer="True" shape="()" />
<var name="train_test_split" type="function" qualifier="builtins" value="%3Cfunction train_test_split at 0x7fdf1c8fb790&gt;" isContainer="True" />
<var name="tsne_plot" type="function" qualifier="builtins" value="%3Cfunction tsne_plot at 0x7fdf195f7dc0&gt;" isContainer="True" />
<var name="underrepresented_labels" type="Index" qualifier="pandas.core.indexes.base" value="Index%28%5B%27Urban%27%2C %27Buildings%27%2C %27Tourism%27%2C %27Social development%27%2C%0A       %27Disaster Risk Management %28Drm%29%27%2C %27Coastal zones%27%2C %27Rural%27%2C%0A       %27Adaptation%27%2C %27Cross Cutting Area%27%2C %27Public Sector%27%2C %27Other%27%2C%0A       %27Finance%27%5D%2C%0A      dtype=%27object%27%29" isContainer="True" shape="(12,)" />
<var name="unique_labels" type="ndarray" qualifier="numpy" value="%5B%27Industry%27 %27Agriculture%27 %27Economy-wide%27 %27Transportation%27 %27Rural%27 %27LULUCF%27%2C %27Energy%27 %27Social development%27 %27Adaptation%27 %27Health%27 %27Buildings%27 %27Tourism%27%2C %27Environment%27 %27Coastal zones%27 %27Urban%27 %27Water%27 %27Cross Cutting Area%27%2C %27Public Sector%27 %27Residential and Commercial%27 %27Finance%27 %27Waste%27 %27Other%27%2C %27Disaster Risk Management %28Drm%29%27%5D" isContainer="True" shape="(23,)" />
<var name="wandb" type="module" qualifier="builtins" value="%3Cmodule %27wandb%27 from %27/home/stefan/anaconda3/envs/multi-label-classification-climate/lib/python3.9/site-packages/wandb/__init__.py%27&gt;" isContainer="True" />
<var name="y" type="ndarray" qualifier="numpy" value="%5B%5B1 1 0 0 1 0 0 0 0 0%5D%2C %5B0 0 0 0 0 1 0 0 0 0%5D%2C %5B0 0 1 0 0 0 0 0 0 0%5D%2C %5B0 1 0 0 0 0 0 0 0 0%5D%2C %5B0 0 0 0 0 0 0 1 0 0%5D%2C %5B0 1 0 0 0 0 0 0 0 0%5D%2C %5B0 1 0 0 0 0 0 0 0 0%5D%2C %5B0 1 0 0 0 0 0 0 0 0%5D%2C %5B0 1 0 0 0 1 0 0 0 0%5D%2C %5B1 0 0 0 0 0 0 0 0 0%5D%2C %5B0 1 1 0 0 0 0 0 0 0%5D%2C %5B0 1 0 0 0 0 0 0 0 0%5D%2C %5B0 1 1 0 0 0 0 0 0 0%5D%2C %5B0 0 0 0 0 0 0 1 0 0%5D%2C %5B0 1 1 0 0 0 0 0 0 0%5D%2C %5B0 1 1 0 0 1 0 0 0 0%5D%2C %5B0 0 0 0 0 1 0 0 0 0%5D%2C %5B0 0 1 0 0 1 0 0 0 0%5D%2C %5B0 0 0 0 0 0 0 0 0 1%5D%2C %5B0 1 0 0 0 0 0 0 0 0%5D%2C %5B0 0 1 0 0 0 0 0 0 0%5D%2C %5B0 0 0 0 0 0 1 0 0 0%5D%2C %5B0 0 0 0 0 1 0 0 0 0%5D%2C %5B0 1 0 0 0 0 0 0 0 0%5D%2C %5B0 1 0 0 0 0 0 0 0 0%5D%2C %5B0 0 1 0 0 0 0 0 0 0%5D%2C %5B0 1 0 0 0 0 0 0 0 0%5D%2C %5B0 1 0 0 0 0 0 0 0 0%5D%2C %5B0 0 0 0 0 0 0 1 0 0%5D%2C %5B0 1 0 0 0 0 0 0 0 0%5D%2C %5B0 0 1 0 0 0 0 0 0 0%5D%2C %5B0 1 0 0 0 0 0 0 0 0%5D%2C %5B0 1 0 0 0 0 0 0 0 0%5D%2C %5B0 0 1 0 0 0 0 0 0 0%5D%2C %5B0 1 0 0 0 0 0 0 0 0%5D%2C %5B0 0 1 0 0 0 0 0 0 0%5D%2C %5B0 1 0 0 0 0 0 0 0 0%5D%2C %5B0 1 1 0 0 0 0 0 0 0%5D%2C %5B0 0 1 0 0 0 0 0 0 0%5D%2C %5B0 0 1 0 0 0 0 0 0 0%5D%2C %5B0 0 1 0 0 0 0 1 0 0%5D%2C %5B0 0 1 0 0 0 0 0 0 0%5D%2C %5B0 0 1 0 0 0 1 1 0 0%5D%2C %5B1 0 0 0 0..." isContainer="True" shape="(1680, 10)" />
<var name="y_eda" type="ndarray" qualifier="numpy" value="%5B%5B1 1 0 0 1 0 0 0 0 0%5D%2C %5B0 0 0 0 0 1 0 0 0 0%5D%2C %5B0 0 1 0 0 0 0 0 0 0%5D%2C %5B0 1 0 0 0 0 0 0 0 0%5D%2C %5B0 0 0 0 0 0 0 1 0 0%5D%2C %5B0 1 0 0 0 0 0 0 0 0%5D%2C %5B0 1 0 0 0 0 0 0 0 0%5D%2C %5B0 1 0 0 0 0 0 0 0 0%5D%2C %5B0 1 0 0 0 1 0 0 0 0%5D%2C %5B1 0 0 0 0 0 0 0 0 0%5D%2C %5B0 1 1 0 0 0 0 0 0 0%5D%2C %5B0 1 0 0 0 0 0 0 0 0%5D%2C %5B0 1 1 0 0 0 0 0 0 0%5D%2C %5B0 0 0 0 0 0 0 1 0 0%5D%2C %5B0 1 1 0 0 0 0 0 0 0%5D%2C %5B0 1 1 0 0 1 0 0 0 0%5D%2C %5B0 0 0 0 0 1 0 0 0 0%5D%2C %5B0 0 1 0 0 1 0 0 0 0%5D%2C %5B0 0 0 0 0 0 0 0 0 1%5D%2C %5B0 1 0 0 0 0 0 0 0 0%5D%2C %5B0 0 1 0 0 0 0 0 0 0%5D%2C %5B0 0 0 0 0 0 1 0 0 0%5D%2C %5B0 0 0 0 0 1 0 0 0 0%5D%2C %5B0 1 0 0 0 0 0 0 0 0%5D%2C %5B0 1 0 0 0 0 0 0 0 0%5D%2C %5B0 0 1 0 0 0 0 0 0 0%5D%2C %5B0 1 0 0 0 0 0 0 0 0%5D%2C %5B0 1 0 0 0 0 0 0 0 0%5D%2C %5B0 0 0 0 0 0 0 1 0 0%5D%2C %5B0 1 0 0 0 0 0 0 0 0%5D%2C %5B0 0 1 0 0 0 0 0 0 0%5D%2C %5B0 1 0 0 0 0 0 0 0 0%5D%2C %5B0 1 0 0 0 0 0 0 0 0%5D%2C %5B0 0 1 0 0 0 0 0 0 0%5D%2C %5B0 1 0 0 0 0 0 0 0 0%5D%2C %5B0 0 1 0 0 0 0 0 0 0%5D%2C %5B0 1 0 0 0 0 0 0 0 0%5D%2C %5B0 1 1 0 0 0 0 0 0 0%5D%2C %5B0 0 1 0 0 0 0 0 0 0%5D%2C %5B0 0 1 0 0 0 0 0 0 0%5D%2C %5B0 0 1 0 0 0 0 1 0 0%5D%2C %5B0 0 1 0 0 0 0 0 0 0%5D%2C %5B0 0 1 0 0 0 1 1 0 0%5D%2C %5B1 0 0 0 0..." isContainer="True" shape="(1680, 10)" />
<var name="y_eda_df" type="DataFrame" qualifier="pandas.core.frame" value="Agriculture  Economy-wide  Energy  Health  Industry  LULUCF  %5C %5B0               1             1       0       0         1       0   %5D %5B1               0             0       0       0         0       1   %5D %5B2               0             0       1       0         0       0   %5D %5B3               0             1       0       0         0       0   %5D %5B4               0             0       0       0         0       0   %5D %5B...           ...           ...     ...     ...       ...     ...   %5D %5B1675            0             0       1       1         0       0   %5D %5B1676            0             0       0       0         0       0   %5D %5B1677            0             0       1       0         0       1   %5D %5B1678            0             0       1       0         0       0   %5D %5B1679            0             0       0       0         0       0   %5D %5B%5D %5B      Residential and Commercial  Transportation  Waste  Water  %5D %5B0                              0               0      0      0  %5D %5B1                              0         ...%5D" isContainer="True" shape="(1680, 10)" />
<var name="y_test" type="Series" qualifier="pandas.core.series" value="%281497%2C %27Energy%27%29 %281517%2C %27Economy-wide%27%29 %281244%2C %27Energy%27%29 %28249%2C %27Transportation%27%29 %28698%2C %27Energy%27%29 %281002%2C %27Economy-wide%27%29 %281757%2C %27Transportation%27%29 %28765%2C %27Energy%27%29 %281958%2C %27Energy%27%29 %281738%2C %27Economy-wide%27%29 %281091%2C %27Energy%27%29 %28893%2C %27Energy%27%29 %281328%2C %27LULUCF%27%29 %281869%2C %27Energy%27%29 %281257%2C %27Economy-wide%27%29 %28398%2C %27Transportation%27%29 %281326%2C %27Energy%27%29 %281550%2C %27Transportation%27%29 %28375%2C %27LULUCF%27%29 %28666%2C %27Energy%27%29 %281201%2C %27Energy%27%29 %281010%2C %27Energy%27%29 %281570%2C %27Transportation%27%29 %281199%2C %27Energy%27%29 %28979%2C %27Energy%27%29 %28112%2C %27Energy%27%29 %281928%2C %27Economy-wide%27%29 %28697%2C %27Residential and Commercial%27%29 %281112%2C %27Energy%27%29 %28583%2C %27LULUCF%27%29 %28484%2C %27Residential and Commercial%27%29 %281059%2C %27Energy%27%29 %281908%2C %27Energy%27%29 %28708%2C %27Economy-wide%27%29 %281953%2C %27Agriculture%27%29 %281214%2C %27Energy%27%29 %28438%2C %27Transportation%27%29 %28951%2C %27Energy%27%29 %281448%2C %27Transportation%27%29 %28762%2C %27Energy%27%29 %28795%2C %27Energy%27%29 %28918%2C %27Transportation%27%29 %281914%2C %27Energy%27%29 %281544%2C %27Agriculture%27%29 %28953%2C %27Economy-wide%27%29 %2895%2C %27Agriculture%27%29 %28700%2C %27LULUCF%27%29 %281222%2C %27Energy%27%29 %28294%2C %27Agriculture%27%29 %281100%2C %27Energy%27%29 %281217%2C %27Transportation%27%29 %281526%2C %27Transportation%27%29 %281041%2C %27Transportation%27%29 %281644%2C %27Energy%27%29 %2837%2C %27LULUCF%27%29 %28554%2C %27Energy%27%29 %281065%2C %27Energy%27%29 %2888%2C %27Energy%27%29 %281109%2C %27Energy%27%29 %28590%2C %27Energy%27%29 %28574%2C %27Energy%27%29 %28252%2C %27Agriculture%27%29 %28203%2C %27Water%27%29 %28165%2C %27LULUCF%27%29 %28619%2C %27Water%27%29 %281039%2C %27Economy-wide%27%29 %281237%2C %27Economy-wide%27%29 %28823%2C %27Energy%27%29 %28199%2C %27Energy%27%29 %28839%2C %27Energy%27%29 %281915%2C %27Energy%27%29 %281123%2C %27Economy-wide%27%29 %281489%2C %27Energy%27%29 %28964%2C %27Energy%27%29 %281139%2C %27Residential and Commercial%27%29 %28827%2C %27Health%27%29 %281725%2C %27Energy%27%29 %28247%2C %27Transportation%27%29 %281820%2C %27Transportation%27%29 %28232%2C %27Residential and Commercial%27%29 %28702%2C %27LULUCF%27%29 %281221%2C %27Transportation%27%29 %28602%2C %27Transportation%27%29 %28196%2C %27Transportation%27%29 %281624%2C %27Economy-wide%27%29 %28782%2C %27Economy-wide%27%29 %28145%2C %27Residential and Commercial%27%29 %28971%2C %27Energy%27%29 %28990%2C %27Energy%27%29 %28842%2C %27Energy%27%29 %281424%2C %27Economy-wide%27%29 %28502%2C %27Water%27%29 %28769%2C %27Economy-wide%27%29 %2819%2C %27Agriculture%27%29 %28671%2C %27Transportation%27%29 %2866%2C %27Energy%27%29 %281147%2C %27LULUCF%27%29 %281950%2C %27Economy-wide%27%29 %281656%2C %27Economy-wide%27%29 %28725%2C %27Energy%27%29" isContainer="True" shape="(249,)" />
<var name="y_train" type="Series" qualifier="pandas.core.series" value="%28946%2C %27Energy%27%29 %281077%2C %27Energy%27%29 %28753%2C %27Energy%27%29 %28917%2C %27Energy%27%29 %28966%2C %27Economy-wide%27%29 %281563%2C %27Transportation%27%29 %28420%2C %27Transportation%27%29 %28470%2C %27Transportation%27%29 %28776%2C %27Energy%27%29 %28347%2C %27Transportation%27%29 %28329%2C %27LULUCF%27%29 %281004%2C %27Energy%27%29 %281151%2C %27Economy-wide%27%29 %281780%2C %27Transportation%27%29 %281745%2C %27Economy-wide%27%29 %281115%2C %27LULUCF%27%29 %2842%2C %27Water%27%29 %28130%2C %27Energy%27%29 %28125%2C %27LULUCF%27%29 %28607%2C %27Energy%27%29 %281670%2C %27Transportation%27%29 %281541%2C %27Energy%27%29 %281102%2C %27Energy%27%29 %28631%2C %27Energy%27%29 %281225%2C %27Energy%27%29 %281641%2C %27Transportation%27%29 %28630%2C %27Energy%27%29 %281308%2C %27Energy%27%29 %281319%2C %27LULUCF%27%29 %28774%2C %27Economy-wide%27%29 %281243%2C %27Energy%27%29 %281899%2C %27Energy%27%29 %2851%2C %27LULUCF%27%29 %281155%2C %27Energy%27%29 %28771%2C %27Energy%27%29 %28904%2C %27Energy%27%29 %281189%2C %27Economy-wide%27%29 %28824%2C %27Energy%27%29 %281298%2C %27Transportation%27%29 %281209%2C %27Agriculture%27%29 %281335%2C %27Transportation%27%29 %281832%2C %27Energy%27%29 %2833%2C %27Transportation%27%29 %28764%2C %27Energy%27%29 %2863%2C %27Economy-wide%27%29 %28709%2C %27Economy-wide%27%29 %281291%2C %27Transportation%27%29 %281900%2C %27Energy%27%29 %281909%2C %27Transportation%27%29 %281044%2C %27Energy%27%29 %281579%2C %27Energy%27%29 %28680%2C %27Energy%27%29 %281743%2C %27Transportation%27%29 %28350%2C %27Energy%27%29 %28962%2C %27Energy%27%29 %28882%2C %27Industry%27%29 %281145%2C %27Industry%27%29 %28807%2C %27Energy%27%29 %28644%2C %27Energy%27%29 %281542%2C %27Transportation%27%29 %28956%2C %27Agriculture%27%29 %28580%2C %27LULUCF%27%29 %28246%2C %27Water%27%29 %281253%2C %27Energy%27%29 %28798%2C %27Energy%27%29 %28215%2C %27Water%27%29 %281150%2C %27Energy%27%29 %28650%2C %27Energy%27%29 %28790%2C %27Economy-wide%27%29 %28736%2C %27Energy%27%29 %28327%2C %27Agriculture%27%29 %281615%2C %27Energy%27%29 %28483%2C %27LULUCF%27%29 %28523%2C %27Transportation%27%29 %281566%2C %27Economy-wide%27%29 %28815%2C %27Energy%27%29 %28738%2C %27Energy%27%29 %283%2C %27LULUCF%27%29 %281927%2C %27Economy-wide%27%29 %28938%2C %27Economy-wide%27%29 %281655%2C %27LULUCF%27%29 %281067%2C %27Energy%27%29 %28800%2C %27Economy-wide%27%29 %281501%2C %27Transportation%27%29 %28477%2C %27Transportation%27%29 %28719%2C %27Energy%27%29 %28989%2C %27LULUCF%27%29 %281013%2C %27Agriculture%27%29 %28794%2C %27Economy-wide%27%29 %28892%2C %27Health%27%29 %281302%2C %27Transportation%27%29 %28569%2C %27Economy-wide%27%29 %281508%2C %27Energy%27%29 %281491%2C %27LULUCF%27%29 %281729%2C %27Energy%27%29 %281393%2C %27LULUCF%27%29 %28786%2C %27Transportation%27%29 %281331%2C %27Transportation%27%29 %28859%2C %27Energy%27%29 %28863%2C %27Transportation%27%29" isContainer="True" shape="(503,)" />
</xml>
<xml><var name="AutoTokenizer" type="type" qualifier="builtins" value="%3Cclass %27transformers.models.auto.tokenization_auto.AutoTokenizer%27&gt;" isContainer="True" />
<var name="BATCH_SIZE" type="int" qualifier="builtins" value="16" />
<var name="ClassifierChain" type="type" qualifier="builtins" value="%3Cclass %27skmultilearn.problem_transform.cc.ClassifierChain%27&gt;" isContainer="True" />
<var name="CountVectorizer" type="type" qualifier="builtins" value="%3Cclass %27sklearn.feature_extraction.text.CountVectorizer%27&gt;" isContainer="True" />
<var name="DataFrame" type="type" qualifier="builtins" value="%3Cclass %27pandas.core.frame.DataFrame%27&gt;" isContainer="True" />
<var name="DummyClassifier" type="type" qualifier="builtins" value="%3Cclass %27sklearn.dummy.DummyClassifier%27&gt;" isContainer="True" />
<var name="GradientBoostingClassifier" type="ABCMeta" qualifier="abc" value="%3Cclass %27sklearn.ensemble._gb.GradientBoostingClassifier%27&gt;" isContainer="True" />
<var name="GridSearchCV" type="ABCMeta" qualifier="abc" value="%3Cclass %27sklearn.model_selection._search.GridSearchCV%27&gt;" isContainer="True" />
<var name="HOLD_OUT_PERCENTAGE" type="int" qualifier="builtins" value="10" />
<var name="HUGGINGFACE_CONFIG" type="str" qualifier="builtins" value="distilbert-base-cased" />
<var name="ITERATIVE_STRAT_ORDER" type="int" qualifier="builtins" value="1" />
<var name="In" type="list" qualifier="builtins" value="%5B%27%27%2C %22import sys%5Cn%5Cn%5Cn%5Cnget_ipython%28%29.run_line_magic%28%27load_ext%27%2C %27autoreload%27%29%5Cnget_ipython%28%29.run_line_magic%28%27autoreload%27%2C %272%27%29%22%2C %27from src.sklearn_utils import iter_train_test_split%2C simple_feature_engineering%5Cnfrom sklearn.ensemble import GradientBoostingClassifier%27%2C %27import pandas as pd%5Cnimport numpy as np%5Cnimport os%5Cnimport plotly.express as px%5Cnfrom skmultilearn.model_selection import IterativeStratification%5Cnfrom sklearn.model_selection import train_test_split%5Cnfrom sklearn.preprocessing import MultiLabelBinarizer%5Cnfrom sklearn.dummy import DummyClassifier%5Cnfrom sklearn.metrics import hamming_loss%5Cnimport seaborn as sns%5Cn%5Cnfrom sklearn.feature_extraction.text import TfidfVectorizer%5Cn%5Cnfrom yellowbrick.text import TSNEVisualizer%5Cnfrom yellowbrick.datasets import load_hobbies%5Cn%23 import tensorflow_addons as tfa%5Cnfrom sklearn.metrics import hamming_loss%5Cn%5Cnfrom skmultilearn.problem_transform import ClassifierChain%5Cnfrom sklearn.metrics import hamming_loss%2C accuracy_score%2C make_scorer..." isContainer="True" shape="31" isIPythonHidden="True" />
<var name="IterativeStratification" type="ABCMeta" qualifier="abc" value="%3Cclass %27skmultilearn.model_selection.iterative_stratification.IterativeStratification%27&gt;" isContainer="True" />
<var name="KEEP_MOST_COMMON_LABELS" type="int" qualifier="builtins" value="10" />
<var name="Lasso" type="ABCMeta" qualifier="abc" value="%3Cclass %27sklearn.linear_model._coordinate_descent.Lasso%27&gt;" isContainer="True" />
<var name="MultiIndex" type="type" qualifier="builtins" value="%3Cclass %27pandas.core.indexes.multi.MultiIndex%27&gt;" isContainer="True" />
<var name="MultiLabelBinarizer" type="type" qualifier="builtins" value="%3Cclass %27sklearn.preprocessing._label.MultiLabelBinarizer%27&gt;" isContainer="True" />
<var name="MultinomialNB" type="ABCMeta" qualifier="abc" value="%3Cclass %27sklearn.naive_bayes.MultinomialNB%27&gt;" isContainer="True" />
<var name="Out" type="dict" qualifier="builtins" value="%7B5%3A %27/home/stefan/PycharmProjects/multi-label-classification-climate/notebooks%27%2C 7%3A    policy_id                       policy_title  %5C%0A0      10088     Circular economy promotion law   %0A1      10087                14th Five-Year Plan   %0A2      10046             National Forest Policy   %0A3      10044   Suriname National REDD%2B Strategy   %0A4      10042  Policy Development Plan 2017-2021   %0A%0A                                             sectors  %5C%0A0                  Industry%3BAgriculture%3BEconomy-wide   %0A1  Transportation%3BRural%3BLULUCF%3BEnergy%3BEconomy-wid...   %0A2                                             LULUCF   %0A3                                             LULUCF   %0A4                                       Economy-wide   %0A%0A                                    description_text  %0A0  This law promotes the development of a circula...  %0A1  The 14th Five Year Plan lays down the strategy...  %0A2  This document aims at protecting the country%27s...  %0A3  This document aims to protect Suriname%27s fores......" isContainer="True" shape="12" isIPythonHidden="True" />
<var name="Path" type="type" qualifier="builtins" value="%3Cclass %27pathlib.Path%27&gt;" isContainer="True" />
<var name="Pipeline" type="ABCMeta" qualifier="abc" value="%3Cclass %27sklearn.pipeline.Pipeline%27&gt;" isContainer="True" />
<var name="SEED" type="int" qualifier="builtins" value="42" />
<var name="TEST_SET_FRAC" type="float" qualifier="builtins" value="0.1" />
<var name="TRAIN_FRACTION" type="float" qualifier="builtins" value="0.9" />
<var name="TSNEVisualizer" type="type" qualifier="builtins" value="%3Cclass %27yellowbrick.text.tsne.TSNEVisualizer%27&gt;" isContainer="True" />
<var name="TextFeatureEngineering" type="type" qualifier="builtins" value="%3Cclass %27src.sklearn_utils.TextFeatureEngineering%27&gt;" isContainer="True" />
<var name="TfidfVectorizer" type="type" qualifier="builtins" value="%3Cclass %27sklearn.feature_extraction.text.TfidfVectorizer%27&gt;" isContainer="True" />
<var name="Tuple" type="_TupleType" qualifier="typing" value="typing.Tuple" isContainer="True" />
<var name="X" type="DataFrame" qualifier="pandas.core.frame" value="policy_id                                       policy_title  %5C %5B0         10088                     Circular economy promotion law   %5D %5B3         10044                   Suriname National REDD%2B Strategy   %5D %5B5         10049                               Energy Strategy 2050   %5D %5B6         10051                   Long-Term Climate Strategy%2C 2021   %5D %5B9         10054  Environmentally Sustainable Transport System P...   %5D %5B...         ...                                                ...   %5D %5B1955       8835  National Climate Change Strategy and Action Pl...   %5D %5B1956       9110                 National Policy for Climate Change   %5D %5B1957       9191  Presidential Decree 7/2019 establishing the na...   %5D %5B1958       8889  Act No. 28 of 1972 concerning nuclear energy a...   %5D %5B1959       8887  Natural Hazards Compensation Act %28No. 59 of 2014%29   %5D %5B%5D %5B                                       description_text  %5C%5D %5B0     This law promotes the development of a circula...   %5D %5B3     This document aims to protect Surin...%5D" isContainer="True" shape="(1680, 14)" />
<var name="X_test" type="DataFrame" qualifier="pandas.core.frame" value="description_text  %5C %5B1497  The Enemalta %28Transfer of Assets%2C Rights%2C Liab...   %5D %5B1517  The National Climate Change Policy%2C published ...   %5D %5B1244  This document sets the remuneration framework ...   %5D %5B249   This document sets the government%27s National T...   %5D %5B698   This document sets the government%27s energy pol...   %5D %5B...                                                 ...   %5D %5B1704  The goal of this regulation is to grant financ...   %5D %5B598   This law commits Ireland%27s national treasury t...   %5D %5B1533  The Democratic Republic of Congo%27s Disaster Re...   %5D %5B1903  The Small and Medium-sized Power Plant Act was...   %5D %5B240   The Strategic Investment Framework for Environ...   %5D %5B%5D %5B                                           policy_title  %5C%5D %5B1497  ACT No. XXXIV of 2014 and associated feed-in t...   %5D %5B1517            Myanmar National Climate Change Policy    %5D %5B1244  Royal Decree 960/2020 regulating the economic ...   %5D %5B249   National Transport Plan 2018-2029 %28Meld. St. 3......%5D" isContainer="True" shape="(249, 3)" />
<var name="X_train" type="DataFrame" qualifier="pandas.core.frame" value="description_text  %5C %5B946   This Act establishes the Energy Market Authori...   %5D %5B1077  This Act creates the Energy and Climate Fund. ...   %5D %5B753   This Strategy%2C developed in partnership with U...   %5D %5B917   Energy efficiency labelling requirements are s...   %5D %5B966   The law provided a legal framework to set up a...   %5D %5B...                                                 ...   %5D %5B220   South Africa%27s Sectoral Cold Spell Management ...   %5D %5B422   The Energy Efficiency Action Plan 2011%3F2020 le...   %5D %5B789   This law states that the State shall provide t...   %5D %5B1125  The Strategy aims to develop a sustainable ene...   %5D %5B404   The main objectives of Law 1391-V are to%3A %5Cn- ...   %5D %5B%5D %5B                                           policy_title  %5C%5D %5B946   Energy Market Authority of Singapore Act %28Chap...   %5D %5B1077                 Energy and Climate Fund Act %28EKFG%29   %5D %5B753   Decentralized Rural Electrification Strategy %28...   %5D %5B917   Energy Resources Regulations %28Energy labeling ......%5D" isContainer="True" shape="(503, 3)" />
<var name="_" type="float64" qualifier="numpy" value="0.1382738095238095" shape="()" isIPythonHidden="True" />
<var name="_11" type="DataFrame" qualifier="pandas.core.frame" value="num_labels  cumulative_positive_labels  %5C %5BEnergy                                1143                        1143   %5D %5BTransportation                         761                        1904   %5D %5BLULUCF                                 398                        2302   %5D %5BEconomy-wide                           366                        2668   %5D %5BResidential and Commercial             351                        3019   %5D %5BAgriculture                            305                        3324   %5D %5BWater                                  297                        3621   %5D %5BIndustry                               238                        3859   %5D %5BWaste                                  177                        4036   %5D %5BHealth                                 158                        4194   %5D %5BEnvironment                            127                        4321   %5D %5BUrban                                   73                        4394   %5D %5BBuildings                             ...%5D" isContainer="True" shape="(23, 3)" isIPythonHidden="True" />
<var name="_12" type="Figure" qualifier="plotly.graph_objs._figure" value="Figure%28%7B%0A    %27data%27%3A %5B%7B%27alignmentgroup%27%3A %27True%27%2C%0A              %27hovertemplate%27%3A %27index=%25%7Bx%7D%3Cbr&gt;num_labels=%25%7By%7D%3Cextra&gt;%3C/extra&gt;%27%2C%0A              %27legendgroup%27%3A %27%27%2C%0A              %27marker%27%3A %7B%27color%27%3A %27%23636efa%27%2C %27pattern%27%3A %7B%27shape%27%3A %27%27%7D%7D%2C%0A              %27name%27%3A %27%27%2C%0A              %27offsetgroup%27%3A %27%27%2C%0A              %27orientation%27%3A %27v%27%2C%0A              %27showlegend%27%3A False%2C%0A              %27textposition%27%3A %27auto%27%2C%0A              %27type%27%3A %27bar%27%2C%0A              %27x%27%3A array%28%5B%27Energy%27%2C %27Transportation%27%2C %27LULUCF%27%2C %27Economy-wide%27%2C%0A                          %27Residential and Commercial%27%2C %27Agriculture%27%2C %27Water%27%2C %27Industry%27%2C%0A                          %27Waste%27%2C %27Health%27%2C %27Environment%27%2C %27Urban%27%2C %27Buildings%27%2C %27Tourism%27%2C%0A                          %27Social development%27%2C %27Disaster Risk Management %28Drm%29%27%2C %27Coastal zones%27%2C%0A                          %27Rural%27%2C %27Adaptation%27%2C %27Cross Cutting Area%27%2C %27Public Sector%27%2C %27Other%27%2C%0A                          %27Finance%27%5D%2C dtype=object%29%2C%0A              %27xaxis%27%3A %27x%27%2C%0A              %27y%27%3A array%28%5B1143..." isContainer="True" isIPythonHidden="True" />
<var name="_13" type="AxesSubplot" qualifier="matplotlib.axes._subplots" value="AxesSubplot%280.125%2C0.125%3B0.62x0.755%29" isContainer="True" isIPythonHidden="True" />
<var name="_14" type="Figure" qualifier="plotly.graph_objs._figure" value="Figure%28%7B%0A    %27data%27%3A %5B%7B%27alignmentgroup%27%3A %27True%27%2C%0A              %27bingroup%27%3A %27x%27%2C%0A              %27hovertemplate%27%3A %27variable=sectors_list%3Cbr&gt;value=%25%7Bx%7D%3Cbr&gt;count=%25%7By%7D%3Cextra&gt;%3C/extra&gt;%27%2C%0A              %27legendgroup%27%3A %27sectors_list%27%2C%0A              %27marker%27%3A %7B%27color%27%3A %27%23636efa%27%2C %27pattern%27%3A %7B%27shape%27%3A %27%27%7D%7D%2C%0A              %27name%27%3A %27sectors_list%27%2C%0A              %27offsetgroup%27%3A %27sectors_list%27%2C%0A              %27orientation%27%3A %27v%27%2C%0A              %27showlegend%27%3A True%2C%0A              %27type%27%3A %27histogram%27%2C%0A              %27x%27%3A array%28%5B3%2C 6%2C 1%2C ...%2C 5%2C 1%2C 1%5D%29%2C%0A              %27xaxis%27%3A %27x%27%2C%0A              %27yaxis%27%3A %27y%27%7D%5D%2C%0A    %27layout%27%3A %7B%27barmode%27%3A %27relative%27%2C%0A               %27legend%27%3A %7B%27title%27%3A %7B%27text%27%3A %27variable%27%7D%2C %27tracegroupgap%27%3A 0%7D%2C%0A               %27template%27%3A %27...%27%2C%0A               %27title%27%3A %7B%27text%27%3A %27num labels per instance%27%7D%2C%0A               %27xaxis%27%3A %7B%27anchor%27%3A %27y%27%2C %27domain%27%3A %5B0.0%2C 1.0%5D%2C %27title%27%3A %7B%27text%27%3A %27value%27%7D%7D%2C%0A               %27yaxis%27%3A %7B%27anchor%27%3A %27x%27%2C %27domain%27%3A %5B0.0%2C 1.0%5D%2C %27title%27%3A %7B%27text%27%3A %27count%27%7D%7D%7D%0A%7D%29" isContainer="True" isIPythonHidden="True" />
<var name="_15" type="Series" qualifier="pandas.core.series" value="%28%27Energy%27%2C 365%29 %28%27Economy-wide%27%2C 144%29 %28%27Transportation%3BEnergy%27%2C 117%29 %28%27Transportation%27%2C 112%29 %28%27Energy%3BResidential and Commercial%27%2C 63%29 %28%27LULUCF%27%2C 58%29 %28%27Transportation%3BEnergy%3BResidential and Commercial%27%2C 30%29 %28%27Agriculture%27%2C 26%29 %28%27Transportation%3BLULUCF%27%2C 24%29 %28%27Industry%3BEnergy%27%2C 24%29" isContainer="True" shape="(10,)" isIPythonHidden="True" />
<var name="_18" type="AxesSubplot" qualifier="matplotlib.axes._subplots" value="AxesSubplot%280.125%2C0.125%3B0.62x0.755%29" isContainer="True" isIPythonHidden="True" />
<var name="_24" type="Run" qualifier="wandb.sdk.wandb_run" value="%3Cwandb.sdk.wandb_run.Run object at 0x7fdea06a8400&gt;" isContainer="True" isIPythonHidden="True" />
<var name="_26" type="dict" qualifier="builtins" value="%7B%27memory%27%3A None%2C %27steps%27%3A %5B%28%27features%27%2C FeatureUnion%28transformer_list=%5B%28%27pipeline_text%27%2C%0A                                Pipeline%28steps=%5B%28%27select_text_col%27%2C%0A                                                 FunctionTransformer%28func=%3Cfunction select_col at 0x7fdf1be14310&gt;%29%29%2C%0A                                                %28%27tfidf%27%2C%0A                                                 TfidfVectorizer%28lowercase=False%2C%0A                                                                 max_df=0.5%2C%0A                                                                 stop_words=%27english%27%29%29%5D%29%29%2C%0A                               %28%27feature_engineering%27%2C%0A                                TextFeatureEngineering%28%29%29%5D%29%29%2C %28%27clf%27%2C ClassifierChain%28classifier=RandomForestClassifier%28%29%2C require_dense=%5BTrue%2C True%5D%29%29%5D%2C %27verbose%27%3A False%2C %27features%27%3A FeatureUnion%28transformer_list=%5B%28%27pipeline_text%27%2C%0A                                Pipeline%28steps=%5B%28%27select_text_col%27%2C%0A                                                 FunctionTran..." isContainer="True" shape="66" isIPythonHidden="True" />
<var name="_27" type="dict" qualifier="builtins" value="%7B%27classifier%27%3A RandomForestClassifier%28%29%2C %27classifier__bootstrap%27%3A True%2C %27classifier__ccp_alpha%27%3A 0.0%2C %27classifier__class_weight%27%3A None%2C %27classifier__criterion%27%3A %27gini%27%2C %27classifier__max_depth%27%3A None%2C %27classifier__max_features%27%3A %27auto%27%2C %27classifier__max_leaf_nodes%27%3A None%2C %27classifier__max_samples%27%3A None%2C %27classifier__min_impurity_decrease%27%3A 0.0%2C %27classifier__min_samples_leaf%27%3A 1%2C %27classifier__min_samples_split%27%3A 2%2C %27classifier__min_weight_fraction_leaf%27%3A 0.0%2C %27classifier__n_estimators%27%3A 100%2C %27classifier__n_jobs%27%3A None%2C %27classifier__oob_score%27%3A False%2C %27classifier__random_state%27%3A None%2C %27classifier__verbose%27%3A 0%2C %27classifier__warm_start%27%3A False%2C %27require_dense%27%3A %5BTrue%2C True%5D%2C %27order%27%3A None%7D" isContainer="True" shape="21" isIPythonHidden="True" />
<var name="_29" type="float64" qualifier="numpy" value="0.1382738095238095" shape="()" isIPythonHidden="True" />
<var name="_5" type="str" qualifier="builtins" value="/home/stefan/PycharmProjects/multi-label-classification-climate/notebooks" isIPythonHidden="True" />
<var name="_7" type="DataFrame" qualifier="pandas.core.frame" value="policy_id                       policy_title  %5C %5B0      10088     Circular economy promotion law   %5D %5B1      10087                14th Five-Year Plan   %5D %5B2      10046             National Forest Policy   %5D %5B3      10044   Suriname National REDD%2B Strategy   %5D %5B4      10042  Policy Development Plan 2017-2021   %5D %5B%5D %5B                                             sectors  %5C%5D %5B0                  Industry%3BAgriculture%3BEconomy-wide   %5D %5B1  Transportation%3BRural%3BLULUCF%3BEnergy%3BEconomy-wid...   %5D %5B2                                             LULUCF   %5D %5B3                                             LULUCF   %5D %5B4                                       Economy-wide   %5D %5B%5D %5B                                    description_text  %5D %5B0  This law promotes the development of a circula...  %5D %5B1  The 14th Five Year Plan lays down the strategy...  %5D %5B2  This document aims at protecting the country%27s...  %5D %5B3  This document aims to protect Suriname%27s fores...  %5D %5B4  This document lays out the country%27s developme...  %5D" isContainer="True" shape="(5, 4)" isIPythonHidden="True" />
<var name="__" type="dict" qualifier="builtins" value="%7B%27classifier%27%3A RandomForestClassifier%28%29%2C %27classifier__bootstrap%27%3A True%2C %27classifier__ccp_alpha%27%3A 0.0%2C %27classifier__class_weight%27%3A None%2C %27classifier__criterion%27%3A %27gini%27%2C %27classifier__max_depth%27%3A None%2C %27classifier__max_features%27%3A %27auto%27%2C %27classifier__max_leaf_nodes%27%3A None%2C %27classifier__max_samples%27%3A None%2C %27classifier__min_impurity_decrease%27%3A 0.0%2C %27classifier__min_samples_leaf%27%3A 1%2C %27classifier__min_samples_split%27%3A 2%2C %27classifier__min_weight_fraction_leaf%27%3A 0.0%2C %27classifier__n_estimators%27%3A 100%2C %27classifier__n_jobs%27%3A None%2C %27classifier__oob_score%27%3A False%2C %27classifier__random_state%27%3A None%2C %27classifier__verbose%27%3A 0%2C %27classifier__warm_start%27%3A False%2C %27require_dense%27%3A %5BTrue%2C True%5D%2C %27order%27%3A None%7D" isContainer="True" shape="21" isIPythonHidden="True" />
<var name="___" type="dict" qualifier="builtins" value="%7B%27memory%27%3A None%2C %27steps%27%3A %5B%28%27features%27%2C FeatureUnion%28transformer_list=%5B%28%27pipeline_text%27%2C%0A                                Pipeline%28steps=%5B%28%27select_text_col%27%2C%0A                                                 FunctionTransformer%28func=%3Cfunction select_col at 0x7fdf1be14310&gt;%29%29%2C%0A                                                %28%27tfidf%27%2C%0A                                                 TfidfVectorizer%28lowercase=False%2C%0A                                                                 max_df=0.5%2C%0A                                                                 stop_words=%27english%27%29%29%5D%29%29%2C%0A                               %28%27feature_engineering%27%2C%0A                                TextFeatureEngineering%28%29%29%5D%29%29%2C %28%27clf%27%2C ClassifierChain%28classifier=RandomForestClassifier%28%29%2C require_dense=%5BTrue%2C True%5D%29%29%5D%2C %27verbose%27%3A False%2C %27features%27%3A FeatureUnion%28transformer_list=%5B%28%27pipeline_text%27%2C%0A                                Pipeline%28steps=%5B%28%27select_text_col%27%2C%0A                                                 FunctionTran..." isContainer="True" shape="66" isIPythonHidden="True" />
<var name="__builtin__" type="module" qualifier="builtins" value="%3Cmodule %27builtins%27 %28built-in%29&gt;" isContainer="True" isIPythonHidden="True" />
<var name="__builtins__" type="module" qualifier="builtins" value="%3Cmodule %27builtins%27 %28built-in%29&gt;" isContainer="True" isIPythonHidden="True" />
<var name="__doc__" type="str" qualifier="builtins" value="Automatically created module for IPython interactive environment" isIPythonHidden="True" />
<var name="__loader__" type="NoneType" qualifier="builtins" value="None" isIPythonHidden="True" />
<var name="__name__" type="str" qualifier="builtins" value="__main__" isIPythonHidden="True" />
<var name="__package__" type="NoneType" qualifier="builtins" value="None" isIPythonHidden="True" />
<var name="__spec__" type="NoneType" qualifier="builtins" value="None" isIPythonHidden="True" />
<var name="_dh" type="list" qualifier="builtins" value="%5BPosixPath%28%27/home/stefan/PycharmProjects/multi-label-classification-climate/notebooks%27%29%5D" isContainer="True" shape="1" isIPythonHidden="True" />
<var name="_i" type="str" qualifier="builtins" value="grid.best_score_" isIPythonHidden="True" />
<var name="_i1" type="str" qualifier="builtins" value="import sys%0A%0A%0A%0A%25load_ext autoreload%0A%25autoreload 2" isIPythonHidden="True" />
<var name="_i10" type="str" qualifier="builtins" value="%23 Let%27s analyse the labels.%0Alabels_flattened=df%5B%27sectors_list%27%5D.explode%28%29%0Aunique_labels=labels_flattened.unique%28%29%0An_unique_labels=len%28unique_labels%29%0Aprint%28f%22There are %7Bn_unique_labels%7D classes with possible labels%3A %5Cn %7Bunique_labels%7D%22%29" isIPythonHidden="True" />
<var name="_i11" type="str" qualifier="builtins" value="%23 What are the cumulative totals for each label%3F%0Anum_instances_each_label=labels_flattened.value_counts%28%29%0Atotal_positive_labels=num_instances_each_label.sum%28%29%0Acumulative_sum=num_instances_each_label.cumsum%28%29%0Afraction_dataset_covered=cumulative_sum/total_positive_labels%0Adf_labels=pd.DataFrame%28%7B%27num_labels%27%3A num_instances_each_label%2C%0A                        %27cumulative_positive_labels%27%3A cumulative_sum%2C %0A                        %27cumulative_fraction_dataset_covered%27%3A fraction_dataset_covered%7D%29%0Adf_labels" isIPythonHidden="True" />
<var name="_i12" type="str" qualifier="builtins" value="px.bar%28df_labels%2C x=df_labels.index%2C y=%27num_labels%27%2C title=%27label distribution%27%29" isIPythonHidden="True" />
<var name="_i13" type="str" qualifier="builtins" value="%23 12 most under represented labels.%0Aunderrepresented_labels=df_labels%5B11%3A%5D.index%0A%0Amlb=MultiLabelBinarizer%28%29%0Ay = mlb.fit_transform%28df%5B%27sectors_list%27%5D%29%0A%23 Now let%27s look at the correlations between labels.%0Asns.heatmap%28pd.DataFrame%28y%2C columns=mlb.classes_%29.corr%28%29.loc%5Bunderrepresented_labels%5D%29" isIPythonHidden="True" />
<var name="_i14" type="str" qualifier="builtins" value="px.histogram%28df%5B%27sectors_list%27%5D.apply%28len%29%2C title=%27num labels per instance%27%29" isIPythonHidden="True" />
<var name="_i15" type="str" qualifier="builtins" value="%23 Let%27s also check if there are any labels with an especially high number of classes such that we could change this to a multi-class problem%0A%23 instead of a multi-label problem.%0Adf%5B%27sectors%27%5D.value_counts%28%29.head%2810%29" isIPythonHidden="True" />
<var name="_i16" type="str" qualifier="builtins" value="common_labels=df_labels.index%5B0%3AKEEP_MOST_COMMON_LABELS%5D%0A%0A%23 Only keep sectors in top n labels%0Adf%5B%27sectors_list%27%5D = df%5B%27sectors_list%27%5D.apply%28lambda x%3A %5Btag for tag in x if tag in common_labels%5D%29%0Adf_filtered = df.copy%28%29%5Bdf%5B%27sectors_list%27%5D.str.len%28%29&gt;0%5D%0Adf_filtered.drop%28columns=%27sectors%27%2Cinplace=True%29" isIPythonHidden="True" />
<var name="_i17" type="str" qualifier="builtins" value="y = mlb.fit_transform%28df_filtered%5B%27sectors_list%27%5D%29%0A%0A%23 Split%0Adf_eda%2C df_test%2C y_eda%2C y_test = iter_train_test_split%28%0A    df_filtered%2C y%2C train_size=1-TEST_SET_FRAC%29%0A%0A%0Ay_eda_df = pd.DataFrame%28y_eda%2C columns = mlb.classes_%29" isIPythonHidden="True" />
<var name="_i18" type="str" qualifier="builtins" value="%23 Now let%27s look at the correlations between labels.%0Asns.heatmap%28y_eda_df.corr%28%29%29" isIPythonHidden="True" />
<var name="_i19" type="str" qualifier="builtins" value="%23 Let%27s do a quick analysis of a bunch of statistics from the text columns. %0A%0Adf_eda=df_eda.copy%28%29 %23 Suppress warnings%0Adf_eda%5B%27full_text%27%5D= df_eda%5B%27policy_title%27%5D%2B%27%3A %27%2Bdf_eda%5B%27description_text%27%5D %23 Concat text columns%0A%0Atext_cols=%5B%27description_text%27%2C %27policy_title%27%2C %27full_text%27%5D%0Atext_cols_n_words = %5Bf%27%7Bx%7D_nwords%27 for x in text_cols%5D%0Afor col in text_cols%3A%0A    df_eda%5Bf%27%7Bcol%7D_nwords%27%5D=df_eda%5Bcol%5D.str.split%28%29.str.len%28%29%0A    %0Adef subplot_helper%28cols%3A list%29 -&gt; None%3A%0A    fig=make_subplots%283%2C1%2C subplot_titles=cols%29%0A    for i%2C col in enumerate%28cols%29%3A%0A        trace=go.Histogram%28x=df_eda%5Bcol%5D%29%0A        fig.append_trace%28trace%2C i%2B1%2C1%29%0A    %0A    fig.update_layout%28height=700%2C width=800%29%0A    fig.show%28%29%0A%0Asubplot_helper%28text_cols_n_words%29" isIPythonHidden="True" />
<var name="_i2" type="str" qualifier="builtins" value="from src.sklearn_utils import iter_train_test_split%2C simple_feature_engineering%0Afrom sklearn.ensemble import GradientBoostingClassifier" isIPythonHidden="True" />
<var name="_i20" type="str" qualifier="builtins" value="tokenizer = AutoTokenizer.from_pretrained%28%27distilbert-base-cased%27%29%0Afor col in text_cols%3A%0A    df_eda%5Bf%27%7Bcol%7D_tokens%27%5D=df_eda%5Bcol%5D.apply%28lambda x%3A tokenizer.tokenize%28x%29%29%0A    df_eda%5Bf%27%7Bcol%7D_ntokens%27%5D=df_eda%5Bf%27%7Bcol%7D_tokens%27%5D.str.len%28%29%0A%0Atext_cols_n_tokens = %5Bf%27%7Bx%7D_ntokens%27 for x in text_cols%5D%0Asubplot_helper%28text_cols_n_tokens%29" isIPythonHidden="True" />
<var name="_i21" type="str" qualifier="builtins" value="%23 Let%27s see what happens if we subset the dataset so that it only contains rows with a single label%0A%23 and visualise the separation between classes to get%0Adf_single_label=df_eda%5Bdf_eda%5B%27sectors_list%27%5D.apply%28len%29==1%5D%0AX%2C y = df_single_label%5B%5B%27description_text%27%2C%27policy_title%27%2C%27full_text%27%5D%5D%2C df_single_label%5B%27sectors_list%27%5D.apply%28lambda x%3A x%5B0%5D%29%0AX_train%2C X_test%2C y_train%2C y_test = train_test_split%28%0A     X%2C y%2C test_size=0.33%2C random_state=SEED%29%0A%0Adef tsne_plot%28X_train%2C X_test%2C y_train%2C y_test%2C col%3A str%29%3A%0A    %22%22%22%0A    Helper to plot tsne visualisations on train and test set for a tfidf transformed column.%0A    %22%22%22%0A    tfidf = TfidfVectorizer%28%29%0A    tfidf.fit_transform%28X_train%5Bcol%5D%29%0A    train_features = tfidf.transform%28X_train%5Bcol%5D%29%0A    test_features = tfidf.transform%28X_test%5Bcol%5D%29%0A    tsne_train = TSNEVisualizer%28decompose_by=24%2C title=f%27Train set%3A %7Bcol%7D%27%29%0A    tsne_train.fit%28train_features%2C y_train%29%0A    tsne_train.show%28%29%0A    tsne_test = TSNEVisualizer%28decompose_by=24%2C title=f%27Test set%3A %7Bcol%7D%27%29%0A    ts..." isIPythonHidden="True" />
<var name="_i22" type="str" qualifier="builtins" value="from src.sklearn_utils import TextFeatureEngineering%2C select_col%2C construct_pipeline" isIPythonHidden="True" />
<var name="_i23" type="str" qualifier="builtins" value="X%2C y = df_eda%2C mlb.fit_transform%28df_eda%5B%27sectors_list%27%5D%29" isIPythonHidden="True" />
<var name="_i24" type="str" qualifier="builtins" value="import wandb%0Awandb.init%28project=%22climate-multi-label-classification%22%2C entity=%22stefl14%22%29" isIPythonHidden="True" />
<var name="_i25" type="str" qualifier="builtins" value="def select_col%28df%2C col=%27full_text%27%29%3A %23 lambda%27s not picklable%2C hence this one liner.%0A    return df%5Bcol%5D%0A%0Afull_pipe_rf=construct_pipeline%28%29%0Afull_pipe_gb=construct_pipeline%28clf=GradientBoostingClassifier%28%29%29%0A%0A%23 cv_score=cross_val_score%28full_pipe_rf%2C X%2C y%2C scoring=make_scorer%28hamming_loss%29%2C cv=5%2C error_score=%27raise%27%29%0A%23%0A%23 %23 fit full_pipe and log the results.%0A%23 full_pipe_rf.fit%28X%2C y%29%0A%23 wandb.log%28%7B%27cv_score%27%3A cv_score.mean%28%29%2C %27cv_std%27%3A cv_score.std%28%29%7D%29" isIPythonHidden="True" />
<var name="_i26" type="str" qualifier="builtins" value="full_pipe_rf.get_params%28%29" isIPythonHidden="True" />
<var name="_i27" type="str" qualifier="builtins" value="full_pipe_rf.named_steps%5B%27clf%27%5D.get_params%28%29" isIPythonHidden="True" />
<var name="_i28" type="str" qualifier="builtins" value="from sklearn.model_selection import GridSearchCV%0A%0Aparam_grid_random_forest = %7B%27clf__classifier__n_estimators%27%3A%5B100%2C 200%5D%7D%0Agrid = GridSearchCV%28full_pipe_rf%2C param_grid=param_grid_random_forest%2C scoring=make_scorer%28hamming_loss%29%2C cv=5%2C error_score=%27raise%27%29%0A%23 Do grid search and log the results.%0Agrid.fit%28X%2C y%29%0Awandb.log%28%7B%27grid_score%27%3A grid.best_score_%2C %27grid_std%27%3A grid.cv_results_%5B%27std_test_score%27%5D%5Bgrid.best_index_%5D%7D%29" isIPythonHidden="True" />
<var name="_i29" type="str" qualifier="builtins" value="grid.best_score_" isIPythonHidden="True" />
<var name="_i3" type="str" qualifier="builtins" value="import pandas as pd%0Aimport numpy as np%0Aimport os%0Aimport plotly.express as px%0Afrom skmultilearn.model_selection import IterativeStratification%0Afrom sklearn.model_selection import train_test_split%0Afrom sklearn.preprocessing import MultiLabelBinarizer%0Afrom sklearn.dummy import DummyClassifier%0Afrom sklearn.metrics import hamming_loss%0Aimport seaborn as sns%0A%0Afrom sklearn.feature_extraction.text import TfidfVectorizer%0A%0Afrom yellowbrick.text import TSNEVisualizer%0Afrom yellowbrick.datasets import load_hobbies%0A%23 import tensorflow_addons as tfa%0Afrom sklearn.metrics import hamming_loss%0A%0Afrom skmultilearn.problem_transform import ClassifierChain%0Afrom sklearn.metrics import hamming_loss%2C accuracy_score%2C make_scorer%0Afrom sklearn.feature_extraction.text import CountVectorizer%2C TfidfVectorizer%0Afrom sklearn.naive_bayes import MultinomialNB%0Afrom sklearn.pipeline import Pipeline%0Afrom sklearn.linear_model import Lasso%0Afrom sklearn.model_selection import cross_val_score%0Afrom datetime import time%0A%0Afrom trans..." isIPythonHidden="True" />
<var name="_i30" type="str" qualifier="builtins" value="from sklearn.model_selection import GridSearchCV%0A%0Aparam_grid_random_forest = %7B%27clf__classifier__n_estimators%27%3A%5B100%2C 200%5D%7D%0Agrid = GridSearchCV%28full_pipe_rf%2C param_grid=param_grid_random_forest%2C scoring=make_scorer%28hamming_loss%29%2C cv=5%2C error_score=%27raise%27%29%0A%23 Do grid search and log the results.%0Agrid.fit%28X%2C y%29%0Awandb.log%28%7B%27grid_score%27%3A grid.best_score_%2C %27grid_std%27%3A grid.cv_results_%5B%27std_test_score%27%5D%5Bgrid.best_index_%5D%2C %27grid_params%27%3A grid.best_params_%7D%29" isIPythonHidden="True" />
<var name="_i4" type="str" qualifier="builtins" value="def create_tokenized_ds%28%0A    X%2C y%2C text_column=%22description_text%22%2C model_name=%22bert-base-cased%22%2C batch_size=16%0A%29%3A%0A    y = np.array%28y%2C dtype=%22int32%22%29%0A    X = X%5Btext_column%5D%0A    tokens = tokenizer%28%0A        list%28X%29%2C%0A        padding=%22max_length%22%2C%0A        truncation=True%2C%0A        return_tensors=%22tf%22%2C%0A        return_token_type_ids=False%2C%0A    %29%0A    tokens_w_labels = tokens.copy%28%29%0A    tokens_w_labels%5B%22target%22%5D = y%0A    tf_dataset = tf.data.Dataset.from_tensor_slices%28%28dict%28tokens_w_labels%29%2C y%29%29%0A    tf_dataset = tf_dataset.shuffle%28len%28tf_dataset%29%29.batch%28batch_size%29%0A    return tf_dataset%0A%0A%0Aimport keras%0A%0AK = keras.backend%0A%0A%0Aclass ExponentialLearningRate%28keras.callbacks.Callback%29%3A%0A    def __init__%28self%2C factor%29%3A%0A        self.factor = factor%0A        self.rates = %5B%5D%0A        self.losses = %5B%5D%0A%0A    def on_batch_end%28self%2C batch%2C logs%29%3A%0A        self.rates.append%28K.get_value%28self.model.optimizer.learning_rate%29%29%0A        self.losses.append%28logs%5B%22loss%22%5D%29%0A        K.set_value%28%0A            self.model.optimizer.le..." isIPythonHidden="True" />
<var name="_i5" type="str" qualifier="builtins" value="os.getcwd%28%29" isIPythonHidden="True" />
<var name="_i6" type="str" qualifier="builtins" value="%23 Constants%0ASEED=42%0AHOLD_OUT_PERCENTAGE=10%0AITERATIVE_STRAT_ORDER=1%0AKEEP_MOST_COMMON_LABELS=10%0ABATCH_SIZE=16%0ATRAIN_FRACTION=0.9%0AHUGGINGFACE_CONFIG=%27distilbert-base-cased%27%0ATEST_SET_FRAC=.1" isIPythonHidden="True" />
<var name="_i7" type="str" qualifier="builtins" value="data_path = Path%28os.path.abspath%28%27%27%29%29.parent / %27data%27 / %27recruitment-task_1-full.csv%27%0A%0Adf=pd.read_csv%28%27/home/stefan/PycharmProjects/multi-label-classification-climate/data/recruitment-task_1-full.csv%27%29%0Adf.head%28%29" isIPythonHidden="True" />
<var name="_i8" type="str" qualifier="builtins" value="df.info%28%29" isIPythonHidden="True" />
<var name="_i9" type="str" qualifier="builtins" value="%23 Parse labels into a list.%0Adf%5B%27sectors_list%27%5D=df%5B%27sectors%27%5D.str.split%28%22%3B%22%29%0Adf=df%5B~df.description_text.duplicated%28%29%5D %23 Found a duplicated entry" isIPythonHidden="True" />
<var name="_ih" type="list" qualifier="builtins" value="%5B%27%27%2C %22import sys%5Cn%5Cn%5Cn%5Cnget_ipython%28%29.run_line_magic%28%27load_ext%27%2C %27autoreload%27%29%5Cnget_ipython%28%29.run_line_magic%28%27autoreload%27%2C %272%27%29%22%2C %27from src.sklearn_utils import iter_train_test_split%2C simple_feature_engineering%5Cnfrom sklearn.ensemble import GradientBoostingClassifier%27%2C %27import pandas as pd%5Cnimport numpy as np%5Cnimport os%5Cnimport plotly.express as px%5Cnfrom skmultilearn.model_selection import IterativeStratification%5Cnfrom sklearn.model_selection import train_test_split%5Cnfrom sklearn.preprocessing import MultiLabelBinarizer%5Cnfrom sklearn.dummy import DummyClassifier%5Cnfrom sklearn.metrics import hamming_loss%5Cnimport seaborn as sns%5Cn%5Cnfrom sklearn.feature_extraction.text import TfidfVectorizer%5Cn%5Cnfrom yellowbrick.text import TSNEVisualizer%5Cnfrom yellowbrick.datasets import load_hobbies%5Cn%23 import tensorflow_addons as tfa%5Cnfrom sklearn.metrics import hamming_loss%5Cn%5Cnfrom skmultilearn.problem_transform import ClassifierChain%5Cnfrom sklearn.metrics import hamming_loss%2C accuracy_score%2C make_scorer..." isContainer="True" shape="31" isIPythonHidden="True" />
<var name="_ii" type="str" qualifier="builtins" value="from sklearn.model_selection import GridSearchCV%0A%0Aparam_grid_random_forest = %7B%27clf__classifier__n_estimators%27%3A%5B100%2C 200%5D%7D%0Agrid = GridSearchCV%28full_pipe_rf%2C param_grid=param_grid_random_forest%2C scoring=make_scorer%28hamming_loss%29%2C cv=5%2C error_score=%27raise%27%29%0A%23 Do grid search and log the results.%0Agrid.fit%28X%2C y%29%0Awandb.log%28%7B%27grid_score%27%3A grid.best_score_%2C %27grid_std%27%3A grid.cv_results_%5B%27std_test_score%27%5D%5Bgrid.best_index_%5D%7D%29" isIPythonHidden="True" />
<var name="_iii" type="str" qualifier="builtins" value="full_pipe_rf.named_steps%5B%27clf%27%5D.get_params%28%29" isIPythonHidden="True" />
<var name="_oh" type="dict" qualifier="builtins" value="%7B5%3A %27/home/stefan/PycharmProjects/multi-label-classification-climate/notebooks%27%2C 7%3A    policy_id                       policy_title  %5C%0A0      10088     Circular economy promotion law   %0A1      10087                14th Five-Year Plan   %0A2      10046             National Forest Policy   %0A3      10044   Suriname National REDD%2B Strategy   %0A4      10042  Policy Development Plan 2017-2021   %0A%0A                                             sectors  %5C%0A0                  Industry%3BAgriculture%3BEconomy-wide   %0A1  Transportation%3BRural%3BLULUCF%3BEnergy%3BEconomy-wid...   %0A2                                             LULUCF   %0A3                                             LULUCF   %0A4                                       Economy-wide   %0A%0A                                    description_text  %0A0  This law promotes the development of a circula...  %0A1  The 14th Five Year Plan lays down the strategy...  %0A2  This document aims at protecting the country%27s...  %0A3  This document aims to protect Suriname%27s fores......" isContainer="True" shape="12" isIPythonHidden="True" />
<var name="_pydevd_bundle" type="module" qualifier="builtins" value="%3Cmodule %27_pydevd_bundle%27 from %27/snap/pycharm-professional/290/plugins/python/helpers/pydev/_pydevd_bundle/__init__.py%27&gt;" isContainer="True" />
<var name="accuracy_score" type="function" qualifier="builtins" value="%3Cfunction accuracy_score at 0x7fdf48fbb8b0&gt;" isContainer="True" />
<var name="col" type="str" qualifier="builtins" value="full_text" />
<var name="common_labels" type="Index" qualifier="pandas.core.indexes.base" value="Index%28%5B%27Energy%27%2C %27Transportation%27%2C %27LULUCF%27%2C %27Economy-wide%27%2C%0A       %27Residential and Commercial%27%2C %27Agriculture%27%2C %27Water%27%2C %27Industry%27%2C%0A       %27Waste%27%2C %27Health%27%5D%2C%0A      dtype=%27object%27%29" isContainer="True" shape="(10,)" />
<var name="construct_pipeline" type="function" qualifier="builtins" value="%3Cfunction construct_pipeline at 0x7fdf1be14a60&gt;" isContainer="True" />
<var name="create_tokenized_ds" type="function" qualifier="builtins" value="%3Cfunction create_tokenized_ds at 0x7fdf196f1790&gt;" isContainer="True" />
<var name="cross_val_score" type="function" qualifier="builtins" value="%3Cfunction cross_val_score at 0x7fdf48eb9b80&gt;" isContainer="True" />
<var name="cumulative_sum" type="Series" qualifier="pandas.core.series" value="%28%27Energy%27%2C 1143%29 %28%27Transportation%27%2C 1904%29 %28%27LULUCF%27%2C 2302%29 %28%27Economy-wide%27%2C 2668%29 %28%27Residential and Commercial%27%2C 3019%29 %28%27Agriculture%27%2C 3324%29 %28%27Water%27%2C 3621%29 %28%27Industry%27%2C 3859%29 %28%27Waste%27%2C 4036%29 %28%27Health%27%2C 4194%29 %28%27Environment%27%2C 4321%29 %28%27Urban%27%2C 4394%29 %28%27Buildings%27%2C 4459%29 %28%27Tourism%27%2C 4511%29 %28%27Social development%27%2C 4556%29 %28%27Disaster Risk Management %28Drm%29%27%2C 4589%29 %28%27Coastal zones%27%2C 4617%29 %28%27Rural%27%2C 4636%29 %28%27Adaptation%27%2C 4647%29 %28%27Cross Cutting Area%27%2C 4656%29 %28%27Public Sector%27%2C 4664%29 %28%27Other%27%2C 4670%29 %28%27Finance%27%2C 4675%29" isContainer="True" shape="(23,)" />
<var name="data_path" type="PosixPath" qualifier="pathlib" value="/home/stefan/PycharmProjects/multi-label-classification-climate/data/recruitment-task_1-full.csv" isContainer="True" />
<var name="df" type="DataFrame" qualifier="pandas.core.frame" value="policy_id                                       policy_title  %5C %5B0         10088                     Circular economy promotion law   %5D %5B1         10087                                14th Five-Year Plan   %5D %5B2         10046                             National Forest Policy   %5D %5B3         10044                   Suriname National REDD%2B Strategy   %5D %5B4         10042                  Policy Development Plan 2017-2021   %5D %5B...         ...                                                ...   %5D %5B1955       8835  National Climate Change Strategy and Action Pl...   %5D %5B1956       9110                 National Policy for Climate Change   %5D %5B1957       9191  Presidential Decree 7/2019 establishing the na...   %5D %5B1958       8889  Act No. 28 of 1972 concerning nuclear energy a...   %5D %5B1959       8887  Natural Hazards Compensation Act %28No. 59 of 2014%29   %5D %5B%5D %5B                                                sectors  %5C%5D %5B0                     Industry%3BAgriculture%3BEconomy-wide   %5D %5B1     Transportation%3BRural%3BLULUCF%3BEnergy%3B...%5D" isContainer="True" shape="(1959, 5)" />
<var name="df_eda" type="DataFrame" qualifier="pandas.core.frame" value="policy_id                                       policy_title  %5C %5B0         10088                     Circular economy promotion law   %5D %5B3         10044                   Suriname National REDD%2B Strategy   %5D %5B5         10049                               Energy Strategy 2050   %5D %5B6         10051                   Long-Term Climate Strategy%2C 2021   %5D %5B9         10054  Environmentally Sustainable Transport System P...   %5D %5B...         ...                                                ...   %5D %5B1955       8835  National Climate Change Strategy and Action Pl...   %5D %5B1956       9110                 National Policy for Climate Change   %5D %5B1957       9191  Presidential Decree 7/2019 establishing the na...   %5D %5B1958       8889  Act No. 28 of 1972 concerning nuclear energy a...   %5D %5B1959       8887  Natural Hazards Compensation Act %28No. 59 of 2014%29   %5D %5B%5D %5B                                       description_text  %5C%5D %5B0     This law promotes the development of a circula...   %5D %5B3     This document aims to protect Surin...%5D" isContainer="True" shape="(1680, 14)" />
<var name="df_filtered" type="DataFrame" qualifier="pandas.core.frame" value="policy_id                                       policy_title  %5C %5B0         10088                     Circular economy promotion law   %5D %5B1         10087                                14th Five-Year Plan   %5D %5B2         10046                             National Forest Policy   %5D %5B3         10044                   Suriname National REDD%2B Strategy   %5D %5B4         10042                  Policy Development Plan 2017-2021   %5D %5B...         ...                                                ...   %5D %5B1955       8835  National Climate Change Strategy and Action Pl...   %5D %5B1956       9110                 National Policy for Climate Change   %5D %5B1957       9191  Presidential Decree 7/2019 establishing the na...   %5D %5B1958       8889  Act No. 28 of 1972 concerning nuclear energy a...   %5D %5B1959       8887  Natural Hazards Compensation Act %28No. 59 of 2014%29   %5D %5B%5D %5B                                       description_text  %5C%5D %5B0     This law promotes the development of a circula...   %5D %5B1     The 14th Five Year Plan lays down t...%5D" isContainer="True" shape="(1879, 4)" />
<var name="df_labels" type="DataFrame" qualifier="pandas.core.frame" value="num_labels  cumulative_positive_labels  %5C %5BEnergy                                1143                        1143   %5D %5BTransportation                         761                        1904   %5D %5BLULUCF                                 398                        2302   %5D %5BEconomy-wide                           366                        2668   %5D %5BResidential and Commercial             351                        3019   %5D %5BAgriculture                            305                        3324   %5D %5BWater                                  297                        3621   %5D %5BIndustry                               238                        3859   %5D %5BWaste                                  177                        4036   %5D %5BHealth                                 158                        4194   %5D %5BEnvironment                            127                        4321   %5D %5BUrban                                   73                        4394   %5D %5BBuildings                             ...%5D" isContainer="True" shape="(23, 3)" />
<var name="df_single_label" type="DataFrame" qualifier="pandas.core.frame" value="policy_id                                       policy_title  %5C %5B3         10044                   Suriname National REDD%2B Strategy   %5D %5B5         10049                               Energy Strategy 2050   %5D %5B6         10051                   Long-Term Climate Strategy%2C 2021   %5D %5B9         10054  Environmentally Sustainable Transport System P...   %5D %5B10        10061  Uganda Green Growth Development Strategy 2017/...   %5D %5B...         ...                                                ...   %5D %5B1950       8704  National Strategy for Adaptation to Climate Ch...   %5D %5B1953       8766  Priority Framework for Action%3A Climate Change ...   %5D %5B1956       9110                 National Policy for Climate Change   %5D %5B1958       8889  Act No. 28 of 1972 concerning nuclear energy a...   %5D %5B1959       8887  Natural Hazards Compensation Act %28No. 59 of 2014%29   %5D %5B%5D %5B                                       description_text      sectors_list  %5C%5D %5B3     This document aims to protect Suriname%27s fores...          %5BLULUCF%5D   %5D %5B5    ...%5D" isContainer="True" shape="(752, 14)" />
<var name="df_test" type="DataFrame" qualifier="pandas.core.frame" value="policy_id                                       policy_title  %5C %5B1        10087                                14th Five-Year Plan   %5D %5B2        10046                             National Forest Policy   %5D %5B4        10042                  Policy Development Plan 2017-2021   %5D %5B7        10052                 Switzerland%E2%80%99s climate policy%2C 2018   %5D %5B8        10053       Smart Grid Development Master Plan 2015-2036   %5D %5B..         ...                                                ...   %5D %5B549       9133                     Law No. 293-Z on energy saving   %5D %5B552       9045                  Law No. 1136-XIV on energy saving   %5D %5B588       8784  Industrial Sector Plan for mitigation and Adap...   %5D %5B616       8687                              Pollution Control Act   %5D %5B760       4313          Second National Environmental Action Plan   %5D %5B%5D %5B                                      description_text  %5C%5D %5B1    The 14th Five Year Plan lays down the strategy...   %5D %5B2    This document aims at protecting the country%27s... ...%5D" isContainer="True" shape="(199, 4)" />
<var name="exit" type="ZMQExitAutocall" qualifier="IPython.core.autocall" value="%3CIPython.core.autocall.ZMQExitAutocall object at 0x7fdf59b7a1c0&gt;" isContainer="True" isIPythonHidden="True" />
<var name="fraction_dataset_covered" type="Series" qualifier="pandas.core.series" value="%28%27Energy%27%2C 0.24449197860962568%29 %28%27Transportation%27%2C 0.4072727272727273%29 %28%27LULUCF%27%2C 0.4924064171122995%29 %28%27Economy-wide%27%2C 0.5706951871657754%29 %28%27Residential and Commercial%27%2C 0.6457754010695187%29 %28%27Agriculture%27%2C 0.7110160427807487%29 %28%27Water%27%2C 0.7745454545454545%29 %28%27Industry%27%2C 0.8254545454545454%29 %28%27Waste%27%2C 0.8633155080213903%29 %28%27Health%27%2C 0.8971122994652406%29 %28%27Environment%27%2C 0.9242780748663102%29 %28%27Urban%27%2C 0.9398930481283423%29 %28%27Buildings%27%2C 0.9537967914438503%29 %28%27Tourism%27%2C 0.9649197860962567%29 %28%27Social development%27%2C 0.9745454545454545%29 %28%27Disaster Risk Management %28Drm%29%27%2C 0.9816042780748663%29 %28%27Coastal zones%27%2C 0.9875935828877005%29 %28%27Rural%27%2C 0.9916577540106952%29 %28%27Adaptation%27%2C 0.9940106951871658%29 %28%27Cross Cutting Area%27%2C 0.9959358288770054%29 %28%27Public Sector%27%2C 0.9976470588235294%29 %28%27Other%27%2C 0.9989304812834224%29 %28%27Finance%27%2C 1.0%29" isContainer="True" shape="(23,)" />
<var name="full_pipe_gb" type="Pipeline" qualifier="sklearn.pipeline" value="Pipeline%28steps=%5B%28%27features%27%2C%0A                 FeatureUnion%28transformer_list=%5B%28%27pipeline_text%27%2C%0A                                                 Pipeline%28steps=%5B%28%27select_text_col%27%2C%0A                                                                  FunctionTransformer%28func=%3Cfunction select_col at 0x7fdf1be14310&gt;%29%29%2C%0A                                                                 %28%27tfidf%27%2C%0A                                                                  TfidfVectorizer%28lowercase=False%2C%0A                                                                                  max_df=0.5%2C%0A                                                                                  stop_words=%27english%27%29%29%5D%29%29%2C%0A                                                %28%27feature_engineering%27%2C%0A                                                 TextFeatureEngineering%28%29%29%5D%29%29%2C%0A                %28%27clf%27%2C%0A                 ClassifierChain%28classifier=GradientBoostingClassifier%28%29%2C%0A                                 require_dense=%5BTrue%2C True%5D%29..." isContainer="True" shape="2" />
<var name="full_pipe_rf" type="Pipeline" qualifier="sklearn.pipeline" value="Pipeline%28steps=%5B%28%27features%27%2C%0A                 FeatureUnion%28transformer_list=%5B%28%27pipeline_text%27%2C%0A                                                 Pipeline%28steps=%5B%28%27select_text_col%27%2C%0A                                                                  FunctionTransformer%28func=%3Cfunction select_col at 0x7fdf1be14310&gt;%29%29%2C%0A                                                                 %28%27tfidf%27%2C%0A                                                                  TfidfVectorizer%28lowercase=False%2C%0A                                                                                  max_df=0.5%2C%0A                                                                                  stop_words=%27english%27%29%29%5D%29%29%2C%0A                                                %28%27feature_engineering%27%2C%0A                                                 TextFeatureEngineering%28%29%29%5D%29%29%2C%0A                %28%27clf%27%2C%0A                 ClassifierChain%28classifier=RandomForestClassifier%28%29%2C%0A                                 require_dense=%5BTrue%2C True%5D%29%29%5D%29" isContainer="True" shape="2" />
<var name="get_ipython" type="method" qualifier="builtins" value="%3Cbound method InteractiveShell.get_ipython of %3Cipykernel.zmqshell.ZMQInteractiveShell object at 0x7fdf59b5e520&gt;&gt;" isContainer="True" isIPythonHidden="True" />
<var name="go" type="module" qualifier="builtins" value="%3Cmodule %27plotly.graph_objects%27 from %27/home/stefan/anaconda3/envs/multi-label-classification-climate/lib/python3.9/site-packages/plotly/graph_objects/__init__.py%27&gt;" isContainer="True" />
<var name="grid" type="GridSearchCV" qualifier="sklearn.model_selection._search" value="GridSearchCV%28cv=5%2C error_score=%27raise%27%2C%0A             estimator=Pipeline%28steps=%5B%28%27features%27%2C%0A                                        FeatureUnion%28transformer_list=%5B%28%27pipeline_text%27%2C%0A                                                                        Pipeline%28steps=%5B%28%27select_text_col%27%2C%0A                                                                                         FunctionTransformer%28func=%3Cfunction select_col at 0x7fdf1be14310&gt;%29%29%2C%0A                                                                                        %28%27tfidf%27%2C%0A                                                                                         TfidfVectorizer%28lowercase=False%2C%0A                                                                                                         max_df=0.5%2C%0A                                                                                                         stop_words=%27english%27%29%29%5D%29%29%2C%0A                                                                       %28%27feature_engi..." isContainer="True" />
<var name="hamming_loss" type="function" qualifier="builtins" value="%3Cfunction hamming_loss at 0x7fdf48fc2280&gt;" isContainer="True" />
<var name="iter_train_test_split" type="function" qualifier="builtins" value="%3Cfunction iter_train_test_split at 0x7fdf1cce23a0&gt;" isContainer="True" />
<var name="joblib" type="module" qualifier="builtins" value="%3Cmodule %27joblib%27 from %27/home/stefan/anaconda3/envs/multi-label-classification-climate/lib/python3.9/site-packages/joblib/__init__.py%27&gt;" isContainer="True" />
<var name="labels_flattened" type="Series" qualifier="pandas.core.series" value="%280%2C %27Industry%27%29 %280%2C %27Agriculture%27%29 %280%2C %27Economy-wide%27%29 %281%2C %27Transportation%27%29 %281%2C %27Rural%27%29 %281%2C %27LULUCF%27%29 %281%2C %27Energy%27%29 %281%2C %27Economy-wide%27%29 %281%2C %27Agriculture%27%29 %282%2C %27LULUCF%27%29 %283%2C %27LULUCF%27%29 %284%2C %27Economy-wide%27%29 %285%2C %27Energy%27%29 %286%2C %27Economy-wide%27%29 %287%2C %27Economy-wide%27%29 %288%2C %27Energy%27%29 %289%2C %27Transportation%27%29 %2810%2C %27Economy-wide%27%29 %2811%2C %27Economy-wide%27%29 %2812%2C %27Economy-wide%27%29 %2813%2C %27Economy-wide%27%29 %2814%2C %27Economy-wide%27%29 %2815%2C %27Economy-wide%27%29 %2816%2C %27Social development%27%29 %2816%2C %27LULUCF%27%29 %2816%2C %27Economy-wide%27%29 %2817%2C %27Industry%27%29 %2818%2C %27Economy-wide%27%29 %2819%2C %27Agriculture%27%29 %2821%2C %27Energy%27%29 %2821%2C %27Economy-wide%27%29 %2821%2C %27Adaptation%27%29 %2822%2C %27Health%27%29 %2823%2C %27Economy-wide%27%29 %2824%2C %27Economy-wide%27%29 %2825%2C %27Transportation%27%29 %2826%2C %27LULUCF%27%29 %2827%2C %27Economy-wide%27%29 %2828%2C %27Adaptation%27%29 %2829%2C %27Buildings%27%29 %2830%2C %27Tourism%27%29 %2831%2C %27Environment%27%29 %2831%2C %27Energy%27%29 %2831%2C %27Economy-wide%27%29 %2832%2C %27Economy-wide%27%29 %2833%2C %27Transportation%27%29 %2834%2C %27Energy%27%29 %2834%2C %27Economy-wide%27%29 %2835%2C %27Economy-wide%27%29 %2835%2C %27Coastal zones%27%29 %2835%2C %27Adaptation%27%29 %2836%2C %27LULUCF%27%29 %2836%2C %27Energy%27%29 %2836%2C %27Economy-wide%27%29 %2837%2C %27LULUCF%27%29 %2838%2C %27Environment%27%29 %2839%2C %27LULUCF%27%29 %2839%2C %27Energy%27%29 %2840%2C %27Industry%27%29 %2840%2C %27Health%27%29 %2840%2C %27Economy-wide%27%29 %2840%2C %27Coastal zones%27%29 %2840%2C %27Buildings%27%29 %2841%2C %27Urban%27%29 %2841%2C %27Energy%27%29 %2842%2C %27Water%27%29 %2842%2C %27Cross Cutting Area%27%29 %2843%2C %27Economy-wide%27%29 %2844%2C %27Transportation%27%29 %2844%2C %27Public Sector%27%29 %2844%2C %27Buildings%27%29 %2845%2C %27Energy%27%29 %2846%2C %27Urban%27%29 %2846%2C %27LULUCF%27%29 %2846%2C %27Agriculture%27%29 %2847%2C %27Environment%27%29 %2848%2C %27LULUCF%27%29 %2849%2C %27Energy%27%29 %2849%2C %27Economy-wide%27%29 %2850%2C %27Residential and Commercial%27%29 %2850%2C %27Buildings%27%29 %2851%2C %27LULUCF%27%29 %2852%2C %27Economy-wide%27%29 %2853%2C %27Economy-wide%27%29 %2854%2C %27Economy-wide%27%29 %2855%2C %27Energy%27%29 %2856%2C %27Energy%27%29 %2857%2C %27Economy-wide%27%29 %2858%2C %27Economy-wide%27%29 %2859%2C %27Economy-wide%27%29 %2860%2C %27Economy-wide%27%29 %2861%2C %27Economy-wide%27%29 %2862%2C %27Transportation%27%29 %2863%2C %27Economy-wide%27%29 %2864%2C %27Economy-wide%27%29 %2865%2C %27Energy%27%29 %2866%2C %27Energy%27%29 %2867%2C %27Economy-wide%27%29 %2868%2C %27Transportation%27%29 %2869%2C %27Economy-wide%27%29" isContainer="True" shape="(4675,)" />
<var name="load_hobbies" type="function" qualifier="builtins" value="%3Cfunction load_hobbies at 0x7fdf1b790700&gt;" isContainer="True" />
<var name="logger" type="RootLogger" qualifier="logging" value="%3CRootLogger root %28CRITICAL%29&gt;" isContainer="True" />
<var name="logging" type="module" qualifier="builtins" value="%3Cmodule %27logging%27 from %27/home/stefan/anaconda3/envs/multi-label-classification-climate/lib/python3.9/logging/__init__.py%27&gt;" isContainer="True" />
<var name="make_scorer" type="function" qualifier="builtins" value="%3Cfunction make_scorer at 0x7fdf48eac670&gt;" isContainer="True" />
<var name="make_subplots" type="function" qualifier="builtins" value="%3Cfunction make_subplots at 0x7fdf1a24e790&gt;" isContainer="True" />
<var name="math" type="module" qualifier="builtins" value="%3Cmodule %27math%27 from %27/home/stefan/anaconda3/envs/multi-label-classification-climate/lib/python3.9/lib-dynload/math.cpython-39-x86_64-linux-gnu.so%27&gt;" isContainer="True" />
<var name="mlb" type="MultiLabelBinarizer" qualifier="sklearn.preprocessing._label" value="MultiLabelBinarizer%28%29" isContainer="True" />
<var name="n_unique_labels" type="int" qualifier="builtins" value="23" />
<var name="np" type="module" qualifier="builtins" value="%3Cmodule %27numpy%27 from %27/home/stefan/anaconda3/envs/multi-label-classification-climate/lib/python3.9/site-packages/numpy/__init__.py%27&gt;" isContainer="True" />
<var name="num_instances_each_label" type="Series" qualifier="pandas.core.series" value="%28%27Energy%27%2C 1143%29 %28%27Transportation%27%2C 761%29 %28%27LULUCF%27%2C 398%29 %28%27Economy-wide%27%2C 366%29 %28%27Residential and Commercial%27%2C 351%29 %28%27Agriculture%27%2C 305%29 %28%27Water%27%2C 297%29 %28%27Industry%27%2C 238%29 %28%27Waste%27%2C 177%29 %28%27Health%27%2C 158%29 %28%27Environment%27%2C 127%29 %28%27Urban%27%2C 73%29 %28%27Buildings%27%2C 65%29 %28%27Tourism%27%2C 52%29 %28%27Social development%27%2C 45%29 %28%27Disaster Risk Management %28Drm%29%27%2C 33%29 %28%27Coastal zones%27%2C 28%29 %28%27Rural%27%2C 19%29 %28%27Adaptation%27%2C 11%29 %28%27Cross Cutting Area%27%2C 9%29 %28%27Public Sector%27%2C 8%29 %28%27Other%27%2C 6%29 %28%27Finance%27%2C 5%29" isContainer="True" shape="(23,)" />
<var name="os" type="module" qualifier="builtins" value="%3Cmodule %27os%27 from %27/home/stefan/anaconda3/envs/multi-label-classification-climate/lib/python3.9/os.py%27&gt;" isContainer="True" />
<var name="param_grid_random_forest" type="dict" qualifier="builtins" value="%7B%27clf__classifier__n_estimators%27%3A %5B100%2C 200%5D%7D" isContainer="True" shape="1" />
<var name="pd" type="module" qualifier="builtins" value="%3Cmodule %27pandas%27 from %27/home/stefan/anaconda3/envs/multi-label-classification-climate/lib/python3.9/site-packages/pandas/__init__.py%27&gt;" isContainer="True" />
<var name="plt" type="module" qualifier="builtins" value="%3Cmodule %27matplotlib.pyplot%27 from %27/home/stefan/anaconda3/envs/multi-label-classification-climate/lib/python3.9/site-packages/matplotlib/pyplot.py%27&gt;" isContainer="True" />
<var name="print_columns" type="function" qualifier="builtins" value="%3Cfunction print_columns at 0x7fde80473550&gt;" isContainer="True" />
<var name="px" type="module" qualifier="builtins" value="%3Cmodule %27plotly.express%27 from %27/home/stefan/anaconda3/envs/multi-label-classification-climate/lib/python3.9/site-packages/plotly/express/__init__.py%27&gt;" isContainer="True" />
<var name="pydev_jupyter_vars" type="module" qualifier="builtins" value="%3Cmodule %27pydev_jupyter_vars%27 from %27/snap/pycharm-professional/290/plugins/python/helpers-pro/jupyter_debug/pydev_jupyter_vars.py%27&gt;" isContainer="True" />
<var name="quit" type="ZMQExitAutocall" qualifier="IPython.core.autocall" value="%3CIPython.core.autocall.ZMQExitAutocall object at 0x7fdf59b7a1c0&gt;" isContainer="True" isIPythonHidden="True" />
<var name="remove_imported_pydev_package" type="function" qualifier="builtins" value="%3Cfunction remove_imported_pydev_package at 0x7fdf1cd905e0&gt;" isContainer="True" />
<var name="select_col" type="function" qualifier="builtins" value="%3Cfunction select_col at 0x7fdeab42f0d0&gt;" isContainer="True" />
<var name="simple_feature_engineering" type="function" qualifier="builtins" value="%3Cfunction simple_feature_engineering at 0x7fdf1cb21af0&gt;" isContainer="True" />
<var name="sns" type="module" qualifier="builtins" value="%3Cmodule %27seaborn%27 from %27/home/stefan/anaconda3/envs/multi-label-classification-climate/lib/python3.9/site-packages/seaborn/__init__.py%27&gt;" isContainer="True" />
<var name="subplot_helper" type="function" qualifier="builtins" value="%3Cfunction subplot_helper at 0x7fdf0eee9f70&gt;" isContainer="True" />
<var name="sys" type="module" qualifier="builtins" value="%3Cmodule %27sys%27 %28built-in%29&gt;" isContainer="True" />
<var name="text_cols" type="list" qualifier="builtins" value="%5B%27description_text%27%2C %27policy_title%27%2C %27full_text%27%5D" isContainer="True" shape="3" />
<var name="text_cols_n_tokens" type="list" qualifier="builtins" value="%5B%27description_text_ntokens%27%2C %27policy_title_ntokens%27%2C %27full_text_ntokens%27%5D" isContainer="True" shape="3" />
<var name="text_cols_n_words" type="list" qualifier="builtins" value="%5B%27description_text_nwords%27%2C %27policy_title_nwords%27%2C %27full_text_nwords%27%5D" isContainer="True" shape="3" />
<var name="time" type="type" qualifier="builtins" value="%3Cclass %27datetime.time%27&gt;" isContainer="True" />
<var name="tokenizer" type="DistilBertTokenizerFast" qualifier="transformers.models.distilbert.tokenization_distilbert_fast" value="PreTrainedTokenizerFast%28name_or_path=%27distilbert-base-cased%27%2C vocab_size=28996%2C model_max_len=512%2C is_fast=True%2C padding_side=%27right%27%2C truncation_side=%27right%27%2C special_tokens=%7B%27unk_token%27%3A %27%5BUNK%5D%27%2C %27sep_token%27%3A %27%5BSEP%5D%27%2C %27pad_token%27%3A %27%5BPAD%5D%27%2C %27cls_token%27%3A %27%5BCLS%5D%27%2C %27mask_token%27%3A %27%5BMASK%5D%27%7D%29" isContainer="True" shape="28996" />
<var name="total_positive_labels" type="int64" qualifier="numpy" value="4675" isContainer="True" shape="()" />
<var name="train_test_split" type="function" qualifier="builtins" value="%3Cfunction train_test_split at 0x7fdf1c8fb790&gt;" isContainer="True" />
<var name="tsne_plot" type="function" qualifier="builtins" value="%3Cfunction tsne_plot at 0x7fdf195f7dc0&gt;" isContainer="True" />
<var name="underrepresented_labels" type="Index" qualifier="pandas.core.indexes.base" value="Index%28%5B%27Urban%27%2C %27Buildings%27%2C %27Tourism%27%2C %27Social development%27%2C%0A       %27Disaster Risk Management %28Drm%29%27%2C %27Coastal zones%27%2C %27Rural%27%2C%0A       %27Adaptation%27%2C %27Cross Cutting Area%27%2C %27Public Sector%27%2C %27Other%27%2C%0A       %27Finance%27%5D%2C%0A      dtype=%27object%27%29" isContainer="True" shape="(12,)" />
<var name="unique_labels" type="ndarray" qualifier="numpy" value="%5B%27Industry%27 %27Agriculture%27 %27Economy-wide%27 %27Transportation%27 %27Rural%27 %27LULUCF%27%2C %27Energy%27 %27Social development%27 %27Adaptation%27 %27Health%27 %27Buildings%27 %27Tourism%27%2C %27Environment%27 %27Coastal zones%27 %27Urban%27 %27Water%27 %27Cross Cutting Area%27%2C %27Public Sector%27 %27Residential and Commercial%27 %27Finance%27 %27Waste%27 %27Other%27%2C %27Disaster Risk Management %28Drm%29%27%5D" isContainer="True" shape="(23,)" />
<var name="wandb" type="module" qualifier="builtins" value="%3Cmodule %27wandb%27 from %27/home/stefan/anaconda3/envs/multi-label-classification-climate/lib/python3.9/site-packages/wandb/__init__.py%27&gt;" isContainer="True" />
<var name="y" type="ndarray" qualifier="numpy" value="%5B%5B1 1 0 0 1 0 0 0 0 0%5D%2C %5B0 0 0 0 0 1 0 0 0 0%5D%2C %5B0 0 1 0 0 0 0 0 0 0%5D%2C %5B0 1 0 0 0 0 0 0 0 0%5D%2C %5B0 0 0 0 0 0 0 1 0 0%5D%2C %5B0 1 0 0 0 0 0 0 0 0%5D%2C %5B0 1 0 0 0 0 0 0 0 0%5D%2C %5B0 1 0 0 0 0 0 0 0 0%5D%2C %5B0 1 0 0 0 1 0 0 0 0%5D%2C %5B1 0 0 0 0 0 0 0 0 0%5D%2C %5B0 1 1 0 0 0 0 0 0 0%5D%2C %5B0 1 0 0 0 0 0 0 0 0%5D%2C %5B0 1 1 0 0 0 0 0 0 0%5D%2C %5B0 0 0 0 0 0 0 1 0 0%5D%2C %5B0 1 1 0 0 0 0 0 0 0%5D%2C %5B0 1 1 0 0 1 0 0 0 0%5D%2C %5B0 0 0 0 0 1 0 0 0 0%5D%2C %5B0 0 1 0 0 1 0 0 0 0%5D%2C %5B0 0 0 0 0 0 0 0 0 1%5D%2C %5B0 1 0 0 0 0 0 0 0 0%5D%2C %5B0 0 1 0 0 0 0 0 0 0%5D%2C %5B0 0 0 0 0 0 1 0 0 0%5D%2C %5B0 0 0 0 0 1 0 0 0 0%5D%2C %5B0 1 0 0 0 0 0 0 0 0%5D%2C %5B0 1 0 0 0 0 0 0 0 0%5D%2C %5B0 0 1 0 0 0 0 0 0 0%5D%2C %5B0 1 0 0 0 0 0 0 0 0%5D%2C %5B0 1 0 0 0 0 0 0 0 0%5D%2C %5B0 0 0 0 0 0 0 1 0 0%5D%2C %5B0 1 0 0 0 0 0 0 0 0%5D%2C %5B0 0 1 0 0 0 0 0 0 0%5D%2C %5B0 1 0 0 0 0 0 0 0 0%5D%2C %5B0 1 0 0 0 0 0 0 0 0%5D%2C %5B0 0 1 0 0 0 0 0 0 0%5D%2C %5B0 1 0 0 0 0 0 0 0 0%5D%2C %5B0 0 1 0 0 0 0 0 0 0%5D%2C %5B0 1 0 0 0 0 0 0 0 0%5D%2C %5B0 1 1 0 0 0 0 0 0 0%5D%2C %5B0 0 1 0 0 0 0 0 0 0%5D%2C %5B0 0 1 0 0 0 0 0 0 0%5D%2C %5B0 0 1 0 0 0 0 1 0 0%5D%2C %5B0 0 1 0 0 0 0 0 0 0%5D%2C %5B0 0 1 0 0 0 1 1 0 0%5D%2C %5B1 0 0 0 0..." isContainer="True" shape="(1680, 10)" />
<var name="y_eda" type="ndarray" qualifier="numpy" value="%5B%5B1 1 0 0 1 0 0 0 0 0%5D%2C %5B0 0 0 0 0 1 0 0 0 0%5D%2C %5B0 0 1 0 0 0 0 0 0 0%5D%2C %5B0 1 0 0 0 0 0 0 0 0%5D%2C %5B0 0 0 0 0 0 0 1 0 0%5D%2C %5B0 1 0 0 0 0 0 0 0 0%5D%2C %5B0 1 0 0 0 0 0 0 0 0%5D%2C %5B0 1 0 0 0 0 0 0 0 0%5D%2C %5B0 1 0 0 0 1 0 0 0 0%5D%2C %5B1 0 0 0 0 0 0 0 0 0%5D%2C %5B0 1 1 0 0 0 0 0 0 0%5D%2C %5B0 1 0 0 0 0 0 0 0 0%5D%2C %5B0 1 1 0 0 0 0 0 0 0%5D%2C %5B0 0 0 0 0 0 0 1 0 0%5D%2C %5B0 1 1 0 0 0 0 0 0 0%5D%2C %5B0 1 1 0 0 1 0 0 0 0%5D%2C %5B0 0 0 0 0 1 0 0 0 0%5D%2C %5B0 0 1 0 0 1 0 0 0 0%5D%2C %5B0 0 0 0 0 0 0 0 0 1%5D%2C %5B0 1 0 0 0 0 0 0 0 0%5D%2C %5B0 0 1 0 0 0 0 0 0 0%5D%2C %5B0 0 0 0 0 0 1 0 0 0%5D%2C %5B0 0 0 0 0 1 0 0 0 0%5D%2C %5B0 1 0 0 0 0 0 0 0 0%5D%2C %5B0 1 0 0 0 0 0 0 0 0%5D%2C %5B0 0 1 0 0 0 0 0 0 0%5D%2C %5B0 1 0 0 0 0 0 0 0 0%5D%2C %5B0 1 0 0 0 0 0 0 0 0%5D%2C %5B0 0 0 0 0 0 0 1 0 0%5D%2C %5B0 1 0 0 0 0 0 0 0 0%5D%2C %5B0 0 1 0 0 0 0 0 0 0%5D%2C %5B0 1 0 0 0 0 0 0 0 0%5D%2C %5B0 1 0 0 0 0 0 0 0 0%5D%2C %5B0 0 1 0 0 0 0 0 0 0%5D%2C %5B0 1 0 0 0 0 0 0 0 0%5D%2C %5B0 0 1 0 0 0 0 0 0 0%5D%2C %5B0 1 0 0 0 0 0 0 0 0%5D%2C %5B0 1 1 0 0 0 0 0 0 0%5D%2C %5B0 0 1 0 0 0 0 0 0 0%5D%2C %5B0 0 1 0 0 0 0 0 0 0%5D%2C %5B0 0 1 0 0 0 0 1 0 0%5D%2C %5B0 0 1 0 0 0 0 0 0 0%5D%2C %5B0 0 1 0 0 0 1 1 0 0%5D%2C %5B1 0 0 0 0..." isContainer="True" shape="(1680, 10)" />
<var name="y_eda_df" type="DataFrame" qualifier="pandas.core.frame" value="Agriculture  Economy-wide  Energy  Health  Industry  LULUCF  %5C %5B0               1             1       0       0         1       0   %5D %5B1               0             0       0       0         0       1   %5D %5B2               0             0       1       0         0       0   %5D %5B3               0             1       0       0         0       0   %5D %5B4               0             0       0       0         0       0   %5D %5B...           ...           ...     ...     ...       ...     ...   %5D %5B1675            0             0       1       1         0       0   %5D %5B1676            0             0       0       0         0       0   %5D %5B1677            0             0       1       0         0       1   %5D %5B1678            0             0       1       0         0       0   %5D %5B1679            0             0       0       0         0       0   %5D %5B%5D %5B      Residential and Commercial  Transportation  Waste  Water  %5D %5B0                              0               0      0      0  %5D %5B1                              0         ...%5D" isContainer="True" shape="(1680, 10)" />
<var name="y_train" type="Series" qualifier="pandas.core.series" value="%28946%2C %27Energy%27%29 %281077%2C %27Energy%27%29 %28753%2C %27Energy%27%29 %28917%2C %27Energy%27%29 %28966%2C %27Economy-wide%27%29 %281563%2C %27Transportation%27%29 %28420%2C %27Transportation%27%29 %28470%2C %27Transportation%27%29 %28776%2C %27Energy%27%29 %28347%2C %27Transportation%27%29 %28329%2C %27LULUCF%27%29 %281004%2C %27Energy%27%29 %281151%2C %27Economy-wide%27%29 %281780%2C %27Transportation%27%29 %281745%2C %27Economy-wide%27%29 %281115%2C %27LULUCF%27%29 %2842%2C %27Water%27%29 %28130%2C %27Energy%27%29 %28125%2C %27LULUCF%27%29 %28607%2C %27Energy%27%29 %281670%2C %27Transportation%27%29 %281541%2C %27Energy%27%29 %281102%2C %27Energy%27%29 %28631%2C %27Energy%27%29 %281225%2C %27Energy%27%29 %281641%2C %27Transportation%27%29 %28630%2C %27Energy%27%29 %281308%2C %27Energy%27%29 %281319%2C %27LULUCF%27%29 %28774%2C %27Economy-wide%27%29 %281243%2C %27Energy%27%29 %281899%2C %27Energy%27%29 %2851%2C %27LULUCF%27%29 %281155%2C %27Energy%27%29 %28771%2C %27Energy%27%29 %28904%2C %27Energy%27%29 %281189%2C %27Economy-wide%27%29 %28824%2C %27Energy%27%29 %281298%2C %27Transportation%27%29 %281209%2C %27Agriculture%27%29 %281335%2C %27Transportation%27%29 %281832%2C %27Energy%27%29 %2833%2C %27Transportation%27%29 %28764%2C %27Energy%27%29 %2863%2C %27Economy-wide%27%29 %28709%2C %27Economy-wide%27%29 %281291%2C %27Transportation%27%29 %281900%2C %27Energy%27%29 %281909%2C %27Transportation%27%29 %281044%2C %27Energy%27%29 %281579%2C %27Energy%27%29 %28680%2C %27Energy%27%29 %281743%2C %27Transportation%27%29 %28350%2C %27Energy%27%29 %28962%2C %27Energy%27%29 %28882%2C %27Industry%27%29 %281145%2C %27Industry%27%29 %28807%2C %27Energy%27%29 %28644%2C %27Energy%27%29 %281542%2C %27Transportation%27%29 %28956%2C %27Agriculture%27%29 %28580%2C %27LULUCF%27%29 %28246%2C %27Water%27%29 %281253%2C %27Energy%27%29 %28798%2C %27Energy%27%29 %28215%2C %27Water%27%29 %281150%2C %27Energy%27%29 %28650%2C %27Energy%27%29 %28790%2C %27Economy-wide%27%29 %28736%2C %27Energy%27%29 %28327%2C %27Agriculture%27%29 %281615%2C %27Energy%27%29 %28483%2C %27LULUCF%27%29 %28523%2C %27Transportation%27%29 %281566%2C %27Economy-wide%27%29 %28815%2C %27Energy%27%29 %28738%2C %27Energy%27%29 %283%2C %27LULUCF%27%29 %281927%2C %27Economy-wide%27%29 %28938%2C %27Economy-wide%27%29 %281655%2C %27LULUCF%27%29 %281067%2C %27Energy%27%29 %28800%2C %27Economy-wide%27%29 %281501%2C %27Transportation%27%29 %28477%2C %27Transportation%27%29 %28719%2C %27Energy%27%29 %28989%2C %27LULUCF%27%29 %281013%2C %27Agriculture%27%29 %28794%2C %27Economy-wide%27%29 %28892%2C %27Health%27%29 %281302%2C %27Transportation%27%29 %28569%2C %27Economy-wide%27%29 %281508%2C %27Energy%27%29 %281491%2C %27LULUCF%27%29 %281729%2C %27Energy%27%29 %281393%2C %27LULUCF%27%29 %28786%2C %27Transportation%27%29 %281331%2C %27Transportation%27%29 %28859%2C %27Energy%27%29 %28863%2C %27Transportation%27%29" isContainer="True" shape="(503,)" />
</xml>
<xml><var name="AutoTokenizer" type="type" qualifier="builtins" value="%3Cclass %27transformers.models.auto.tokenization_auto.AutoTokenizer%27&gt;" isContainer="True" />
<var name="BATCH_SIZE" type="int" qualifier="builtins" value="16" />
<var name="ClassifierChain" type="type" qualifier="builtins" value="%3Cclass %27skmultilearn.problem_transform.cc.ClassifierChain%27&gt;" isContainer="True" />
<var name="CountVectorizer" type="type" qualifier="builtins" value="%3Cclass %27sklearn.feature_extraction.text.CountVectorizer%27&gt;" isContainer="True" />
<var name="DataFrame" type="type" qualifier="builtins" value="%3Cclass %27pandas.core.frame.DataFrame%27&gt;" isContainer="True" />
<var name="DummyClassifier" type="type" qualifier="builtins" value="%3Cclass %27sklearn.dummy.DummyClassifier%27&gt;" isContainer="True" />
<var name="GradientBoostingClassifier" type="ABCMeta" qualifier="abc" value="%3Cclass %27sklearn.ensemble._gb.GradientBoostingClassifier%27&gt;" isContainer="True" />
<var name="GridSearchCV" type="ABCMeta" qualifier="abc" value="%3Cclass %27sklearn.model_selection._search.GridSearchCV%27&gt;" isContainer="True" />
<var name="HOLD_OUT_PERCENTAGE" type="int" qualifier="builtins" value="10" />
<var name="HUGGINGFACE_CONFIG" type="str" qualifier="builtins" value="distilbert-base-cased" />
<var name="ITERATIVE_STRAT_ORDER" type="int" qualifier="builtins" value="1" />
<var name="In" type="list" qualifier="builtins" value="%5B%27%27%2C %22import sys%5Cn%5Cn%5Cn%5Cnget_ipython%28%29.run_line_magic%28%27load_ext%27%2C %27autoreload%27%29%5Cnget_ipython%28%29.run_line_magic%28%27autoreload%27%2C %272%27%29%22%2C %27from src.sklearn_utils import iter_train_test_split%2C simple_feature_engineering%5Cnfrom sklearn.ensemble import GradientBoostingClassifier%27%2C %27import pandas as pd%5Cnimport numpy as np%5Cnimport os%5Cnimport plotly.express as px%5Cnfrom skmultilearn.model_selection import IterativeStratification%5Cnfrom sklearn.model_selection import train_test_split%5Cnfrom sklearn.preprocessing import MultiLabelBinarizer%5Cnfrom sklearn.dummy import DummyClassifier%5Cnfrom sklearn.metrics import hamming_loss%5Cnimport seaborn as sns%5Cn%5Cnfrom sklearn.feature_extraction.text import TfidfVectorizer%5Cn%5Cnfrom yellowbrick.text import TSNEVisualizer%5Cnfrom yellowbrick.datasets import load_hobbies%5Cn%23 import tensorflow_addons as tfa%5Cnfrom sklearn.metrics import hamming_loss%5Cn%5Cnfrom skmultilearn.problem_transform import ClassifierChain%5Cnfrom sklearn.metrics import hamming_loss%2C accuracy_score%2C make_scorer..." isContainer="True" shape="32" isIPythonHidden="True" />
<var name="IterativeStratification" type="ABCMeta" qualifier="abc" value="%3Cclass %27skmultilearn.model_selection.iterative_stratification.IterativeStratification%27&gt;" isContainer="True" />
<var name="KEEP_MOST_COMMON_LABELS" type="int" qualifier="builtins" value="10" />
<var name="Lasso" type="ABCMeta" qualifier="abc" value="%3Cclass %27sklearn.linear_model._coordinate_descent.Lasso%27&gt;" isContainer="True" />
<var name="MultiIndex" type="type" qualifier="builtins" value="%3Cclass %27pandas.core.indexes.multi.MultiIndex%27&gt;" isContainer="True" />
<var name="MultiLabelBinarizer" type="type" qualifier="builtins" value="%3Cclass %27sklearn.preprocessing._label.MultiLabelBinarizer%27&gt;" isContainer="True" />
<var name="MultinomialNB" type="ABCMeta" qualifier="abc" value="%3Cclass %27sklearn.naive_bayes.MultinomialNB%27&gt;" isContainer="True" />
<var name="Out" type="dict" qualifier="builtins" value="%7B5%3A %27/home/stefan/PycharmProjects/multi-label-classification-climate/notebooks%27%2C 7%3A    policy_id                       policy_title  %5C%0A0      10088     Circular economy promotion law   %0A1      10087                14th Five-Year Plan   %0A2      10046             National Forest Policy   %0A3      10044   Suriname National REDD%2B Strategy   %0A4      10042  Policy Development Plan 2017-2021   %0A%0A                                             sectors  %5C%0A0                  Industry%3BAgriculture%3BEconomy-wide   %0A1  Transportation%3BRural%3BLULUCF%3BEnergy%3BEconomy-wid...   %0A2                                             LULUCF   %0A3                                             LULUCF   %0A4                                       Economy-wide   %0A%0A                                    description_text  %0A0  This law promotes the development of a circula...  %0A1  The 14th Five Year Plan lays down the strategy...  %0A2  This document aims at protecting the country%27s...  %0A3  This document aims to protect Suriname%27s fores......" isContainer="True" shape="13" isIPythonHidden="True" />
<var name="Path" type="type" qualifier="builtins" value="%3Cclass %27pathlib.Path%27&gt;" isContainer="True" />
<var name="Pipeline" type="ABCMeta" qualifier="abc" value="%3Cclass %27sklearn.pipeline.Pipeline%27&gt;" isContainer="True" />
<var name="SEED" type="int" qualifier="builtins" value="42" />
<var name="TEST_SET_FRAC" type="float" qualifier="builtins" value="0.1" />
<var name="TRAIN_FRACTION" type="float" qualifier="builtins" value="0.9" />
<var name="TSNEVisualizer" type="type" qualifier="builtins" value="%3Cclass %27yellowbrick.text.tsne.TSNEVisualizer%27&gt;" isContainer="True" />
<var name="TextFeatureEngineering" type="type" qualifier="builtins" value="%3Cclass %27src.sklearn_utils.TextFeatureEngineering%27&gt;" isContainer="True" />
<var name="TfidfVectorizer" type="type" qualifier="builtins" value="%3Cclass %27sklearn.feature_extraction.text.TfidfVectorizer%27&gt;" isContainer="True" />
<var name="Tuple" type="_TupleType" qualifier="typing" value="typing.Tuple" isContainer="True" />
<var name="X" type="DataFrame" qualifier="pandas.core.frame" value="policy_id                                       policy_title  %5C %5B0         10088                     Circular economy promotion law   %5D %5B3         10044                   Suriname National REDD%2B Strategy   %5D %5B5         10049                               Energy Strategy 2050   %5D %5B6         10051                   Long-Term Climate Strategy%2C 2021   %5D %5B9         10054  Environmentally Sustainable Transport System P...   %5D %5B...         ...                                                ...   %5D %5B1955       8835  National Climate Change Strategy and Action Pl...   %5D %5B1956       9110                 National Policy for Climate Change   %5D %5B1957       9191  Presidential Decree 7/2019 establishing the na...   %5D %5B1958       8889  Act No. 28 of 1972 concerning nuclear energy a...   %5D %5B1959       8887  Natural Hazards Compensation Act %28No. 59 of 2014%29   %5D %5B%5D %5B                                       description_text  %5C%5D %5B0     This law promotes the development of a circula...   %5D %5B3     This document aims to protect Surin...%5D" isContainer="True" shape="(1680, 14)" />
<var name="X_test" type="DataFrame" qualifier="pandas.core.frame" value="description_text  %5C %5B1497  The Enemalta %28Transfer of Assets%2C Rights%2C Liab...   %5D %5B1517  The National Climate Change Policy%2C published ...   %5D %5B1244  This document sets the remuneration framework ...   %5D %5B249   This document sets the government%27s National T...   %5D %5B698   This document sets the government%27s energy pol...   %5D %5B...                                                 ...   %5D %5B1704  The goal of this regulation is to grant financ...   %5D %5B598   This law commits Ireland%27s national treasury t...   %5D %5B1533  The Democratic Republic of Congo%27s Disaster Re...   %5D %5B1903  The Small and Medium-sized Power Plant Act was...   %5D %5B240   The Strategic Investment Framework for Environ...   %5D %5B%5D %5B                                           policy_title  %5C%5D %5B1497  ACT No. XXXIV of 2014 and associated feed-in t...   %5D %5B1517            Myanmar National Climate Change Policy    %5D %5B1244  Royal Decree 960/2020 regulating the economic ...   %5D %5B249   National Transport Plan 2018-2029 %28Meld. St. 3......%5D" isContainer="True" shape="(249, 3)" />
<var name="X_train" type="DataFrame" qualifier="pandas.core.frame" value="description_text  %5C %5B946   This Act establishes the Energy Market Authori...   %5D %5B1077  This Act creates the Energy and Climate Fund. ...   %5D %5B753   This Strategy%2C developed in partnership with U...   %5D %5B917   Energy efficiency labelling requirements are s...   %5D %5B966   The law provided a legal framework to set up a...   %5D %5B...                                                 ...   %5D %5B220   South Africa%27s Sectoral Cold Spell Management ...   %5D %5B422   The Energy Efficiency Action Plan 2011%3F2020 le...   %5D %5B789   This law states that the State shall provide t...   %5D %5B1125  The Strategy aims to develop a sustainable ene...   %5D %5B404   The main objectives of Law 1391-V are to%3A %5Cn- ...   %5D %5B%5D %5B                                           policy_title  %5C%5D %5B946   Energy Market Authority of Singapore Act %28Chap...   %5D %5B1077                 Energy and Climate Fund Act %28EKFG%29   %5D %5B753   Decentralized Rural Electrification Strategy %28...   %5D %5B917   Energy Resources Regulations %28Energy labeling ......%5D" isContainer="True" shape="(503, 3)" />
<var name="_" type="dict" qualifier="builtins" value="%7B%27clf__classifier__n_estimators%27%3A 100%7D" isContainer="True" shape="1" isIPythonHidden="True" />
<var name="_11" type="DataFrame" qualifier="pandas.core.frame" value="num_labels  cumulative_positive_labels  %5C %5BEnergy                                1143                        1143   %5D %5BTransportation                         761                        1904   %5D %5BLULUCF                                 398                        2302   %5D %5BEconomy-wide                           366                        2668   %5D %5BResidential and Commercial             351                        3019   %5D %5BAgriculture                            305                        3324   %5D %5BWater                                  297                        3621   %5D %5BIndustry                               238                        3859   %5D %5BWaste                                  177                        4036   %5D %5BHealth                                 158                        4194   %5D %5BEnvironment                            127                        4321   %5D %5BUrban                                   73                        4394   %5D %5BBuildings                             ...%5D" isContainer="True" shape="(23, 3)" isIPythonHidden="True" />
<var name="_12" type="Figure" qualifier="plotly.graph_objs._figure" value="Figure%28%7B%0A    %27data%27%3A %5B%7B%27alignmentgroup%27%3A %27True%27%2C%0A              %27hovertemplate%27%3A %27index=%25%7Bx%7D%3Cbr&gt;num_labels=%25%7By%7D%3Cextra&gt;%3C/extra&gt;%27%2C%0A              %27legendgroup%27%3A %27%27%2C%0A              %27marker%27%3A %7B%27color%27%3A %27%23636efa%27%2C %27pattern%27%3A %7B%27shape%27%3A %27%27%7D%7D%2C%0A              %27name%27%3A %27%27%2C%0A              %27offsetgroup%27%3A %27%27%2C%0A              %27orientation%27%3A %27v%27%2C%0A              %27showlegend%27%3A False%2C%0A              %27textposition%27%3A %27auto%27%2C%0A              %27type%27%3A %27bar%27%2C%0A              %27x%27%3A array%28%5B%27Energy%27%2C %27Transportation%27%2C %27LULUCF%27%2C %27Economy-wide%27%2C%0A                          %27Residential and Commercial%27%2C %27Agriculture%27%2C %27Water%27%2C %27Industry%27%2C%0A                          %27Waste%27%2C %27Health%27%2C %27Environment%27%2C %27Urban%27%2C %27Buildings%27%2C %27Tourism%27%2C%0A                          %27Social development%27%2C %27Disaster Risk Management %28Drm%29%27%2C %27Coastal zones%27%2C%0A                          %27Rural%27%2C %27Adaptation%27%2C %27Cross Cutting Area%27%2C %27Public Sector%27%2C %27Other%27%2C%0A                          %27Finance%27%5D%2C dtype=object%29%2C%0A              %27xaxis%27%3A %27x%27%2C%0A              %27y%27%3A array%28%5B1143..." isContainer="True" isIPythonHidden="True" />
<var name="_13" type="AxesSubplot" qualifier="matplotlib.axes._subplots" value="AxesSubplot%280.125%2C0.125%3B0.62x0.755%29" isContainer="True" isIPythonHidden="True" />
<var name="_14" type="Figure" qualifier="plotly.graph_objs._figure" value="Figure%28%7B%0A    %27data%27%3A %5B%7B%27alignmentgroup%27%3A %27True%27%2C%0A              %27bingroup%27%3A %27x%27%2C%0A              %27hovertemplate%27%3A %27variable=sectors_list%3Cbr&gt;value=%25%7Bx%7D%3Cbr&gt;count=%25%7By%7D%3Cextra&gt;%3C/extra&gt;%27%2C%0A              %27legendgroup%27%3A %27sectors_list%27%2C%0A              %27marker%27%3A %7B%27color%27%3A %27%23636efa%27%2C %27pattern%27%3A %7B%27shape%27%3A %27%27%7D%7D%2C%0A              %27name%27%3A %27sectors_list%27%2C%0A              %27offsetgroup%27%3A %27sectors_list%27%2C%0A              %27orientation%27%3A %27v%27%2C%0A              %27showlegend%27%3A True%2C%0A              %27type%27%3A %27histogram%27%2C%0A              %27x%27%3A array%28%5B3%2C 6%2C 1%2C ...%2C 5%2C 1%2C 1%5D%29%2C%0A              %27xaxis%27%3A %27x%27%2C%0A              %27yaxis%27%3A %27y%27%7D%5D%2C%0A    %27layout%27%3A %7B%27barmode%27%3A %27relative%27%2C%0A               %27legend%27%3A %7B%27title%27%3A %7B%27text%27%3A %27variable%27%7D%2C %27tracegroupgap%27%3A 0%7D%2C%0A               %27template%27%3A %27...%27%2C%0A               %27title%27%3A %7B%27text%27%3A %27num labels per instance%27%7D%2C%0A               %27xaxis%27%3A %7B%27anchor%27%3A %27y%27%2C %27domain%27%3A %5B0.0%2C 1.0%5D%2C %27title%27%3A %7B%27text%27%3A %27value%27%7D%7D%2C%0A               %27yaxis%27%3A %7B%27anchor%27%3A %27x%27%2C %27domain%27%3A %5B0.0%2C 1.0%5D%2C %27title%27%3A %7B%27text%27%3A %27count%27%7D%7D%7D%0A%7D%29" isContainer="True" isIPythonHidden="True" />
<var name="_15" type="Series" qualifier="pandas.core.series" value="%28%27Energy%27%2C 365%29 %28%27Economy-wide%27%2C 144%29 %28%27Transportation%3BEnergy%27%2C 117%29 %28%27Transportation%27%2C 112%29 %28%27Energy%3BResidential and Commercial%27%2C 63%29 %28%27LULUCF%27%2C 58%29 %28%27Transportation%3BEnergy%3BResidential and Commercial%27%2C 30%29 %28%27Agriculture%27%2C 26%29 %28%27Transportation%3BLULUCF%27%2C 24%29 %28%27Industry%3BEnergy%27%2C 24%29" isContainer="True" shape="(10,)" isIPythonHidden="True" />
<var name="_18" type="AxesSubplot" qualifier="matplotlib.axes._subplots" value="AxesSubplot%280.125%2C0.125%3B0.62x0.755%29" isContainer="True" isIPythonHidden="True" />
<var name="_24" type="Run" qualifier="wandb.sdk.wandb_run" value="%3Cwandb.sdk.wandb_run.Run object at 0x7fdea06a8400&gt;" isContainer="True" isIPythonHidden="True" />
<var name="_26" type="dict" qualifier="builtins" value="%7B%27memory%27%3A None%2C %27steps%27%3A %5B%28%27features%27%2C FeatureUnion%28transformer_list=%5B%28%27pipeline_text%27%2C%0A                                Pipeline%28steps=%5B%28%27select_text_col%27%2C%0A                                                 FunctionTransformer%28func=%3Cfunction select_col at 0x7fdf1be14310&gt;%29%29%2C%0A                                                %28%27tfidf%27%2C%0A                                                 TfidfVectorizer%28lowercase=False%2C%0A                                                                 max_df=0.5%2C%0A                                                                 stop_words=%27english%27%29%29%5D%29%29%2C%0A                               %28%27feature_engineering%27%2C%0A                                TextFeatureEngineering%28%29%29%5D%29%29%2C %28%27clf%27%2C ClassifierChain%28classifier=RandomForestClassifier%28%29%2C require_dense=%5BTrue%2C True%5D%29%29%5D%2C %27verbose%27%3A False%2C %27features%27%3A FeatureUnion%28transformer_list=%5B%28%27pipeline_text%27%2C%0A                                Pipeline%28steps=%5B%28%27select_text_col%27%2C%0A                                                 FunctionTran..." isContainer="True" shape="66" isIPythonHidden="True" />
<var name="_27" type="dict" qualifier="builtins" value="%7B%27classifier%27%3A RandomForestClassifier%28%29%2C %27classifier__bootstrap%27%3A True%2C %27classifier__ccp_alpha%27%3A 0.0%2C %27classifier__class_weight%27%3A None%2C %27classifier__criterion%27%3A %27gini%27%2C %27classifier__max_depth%27%3A None%2C %27classifier__max_features%27%3A %27auto%27%2C %27classifier__max_leaf_nodes%27%3A None%2C %27classifier__max_samples%27%3A None%2C %27classifier__min_impurity_decrease%27%3A 0.0%2C %27classifier__min_samples_leaf%27%3A 1%2C %27classifier__min_samples_split%27%3A 2%2C %27classifier__min_weight_fraction_leaf%27%3A 0.0%2C %27classifier__n_estimators%27%3A 100%2C %27classifier__n_jobs%27%3A None%2C %27classifier__oob_score%27%3A False%2C %27classifier__random_state%27%3A None%2C %27classifier__verbose%27%3A 0%2C %27classifier__warm_start%27%3A False%2C %27require_dense%27%3A %5BTrue%2C True%5D%2C %27order%27%3A None%7D" isContainer="True" shape="21" isIPythonHidden="True" />
<var name="_29" type="float64" qualifier="numpy" value="0.1382738095238095" shape="()" isIPythonHidden="True" />
<var name="_31" type="dict" qualifier="builtins" value="%7B%27clf__classifier__n_estimators%27%3A 100%7D" isContainer="True" shape="1" isIPythonHidden="True" />
<var name="_5" type="str" qualifier="builtins" value="/home/stefan/PycharmProjects/multi-label-classification-climate/notebooks" isIPythonHidden="True" />
<var name="_7" type="DataFrame" qualifier="pandas.core.frame" value="policy_id                       policy_title  %5C %5B0      10088     Circular economy promotion law   %5D %5B1      10087                14th Five-Year Plan   %5D %5B2      10046             National Forest Policy   %5D %5B3      10044   Suriname National REDD%2B Strategy   %5D %5B4      10042  Policy Development Plan 2017-2021   %5D %5B%5D %5B                                             sectors  %5C%5D %5B0                  Industry%3BAgriculture%3BEconomy-wide   %5D %5B1  Transportation%3BRural%3BLULUCF%3BEnergy%3BEconomy-wid...   %5D %5B2                                             LULUCF   %5D %5B3                                             LULUCF   %5D %5B4                                       Economy-wide   %5D %5B%5D %5B                                    description_text  %5D %5B0  This law promotes the development of a circula...  %5D %5B1  The 14th Five Year Plan lays down the strategy...  %5D %5B2  This document aims at protecting the country%27s...  %5D %5B3  This document aims to protect Suriname%27s fores...  %5D %5B4  This document lays out the country%27s developme...  %5D" isContainer="True" shape="(5, 4)" isIPythonHidden="True" />
<var name="__" type="float64" qualifier="numpy" value="0.1382738095238095" shape="()" isIPythonHidden="True" />
<var name="___" type="dict" qualifier="builtins" value="%7B%27classifier%27%3A RandomForestClassifier%28%29%2C %27classifier__bootstrap%27%3A True%2C %27classifier__ccp_alpha%27%3A 0.0%2C %27classifier__class_weight%27%3A None%2C %27classifier__criterion%27%3A %27gini%27%2C %27classifier__max_depth%27%3A None%2C %27classifier__max_features%27%3A %27auto%27%2C %27classifier__max_leaf_nodes%27%3A None%2C %27classifier__max_samples%27%3A None%2C %27classifier__min_impurity_decrease%27%3A 0.0%2C %27classifier__min_samples_leaf%27%3A 1%2C %27classifier__min_samples_split%27%3A 2%2C %27classifier__min_weight_fraction_leaf%27%3A 0.0%2C %27classifier__n_estimators%27%3A 100%2C %27classifier__n_jobs%27%3A None%2C %27classifier__oob_score%27%3A False%2C %27classifier__random_state%27%3A None%2C %27classifier__verbose%27%3A 0%2C %27classifier__warm_start%27%3A False%2C %27require_dense%27%3A %5BTrue%2C True%5D%2C %27order%27%3A None%7D" isContainer="True" shape="21" isIPythonHidden="True" />
<var name="__builtin__" type="module" qualifier="builtins" value="%3Cmodule %27builtins%27 %28built-in%29&gt;" isContainer="True" isIPythonHidden="True" />
<var name="__builtins__" type="module" qualifier="builtins" value="%3Cmodule %27builtins%27 %28built-in%29&gt;" isContainer="True" isIPythonHidden="True" />
<var name="__doc__" type="str" qualifier="builtins" value="Automatically created module for IPython interactive environment" isIPythonHidden="True" />
<var name="__loader__" type="NoneType" qualifier="builtins" value="None" isIPythonHidden="True" />
<var name="__name__" type="str" qualifier="builtins" value="__main__" isIPythonHidden="True" />
<var name="__package__" type="NoneType" qualifier="builtins" value="None" isIPythonHidden="True" />
<var name="__spec__" type="NoneType" qualifier="builtins" value="None" isIPythonHidden="True" />
<var name="_dh" type="list" qualifier="builtins" value="%5BPosixPath%28%27/home/stefan/PycharmProjects/multi-label-classification-climate/notebooks%27%29%5D" isContainer="True" shape="1" isIPythonHidden="True" />
<var name="_i" type="str" qualifier="builtins" value="from sklearn.model_selection import GridSearchCV%0A%0Aparam_grid_random_forest = %7B%27clf__classifier__n_estimators%27%3A%5B100%2C 200%5D%7D%0Agrid = GridSearchCV%28full_pipe_rf%2C param_grid=param_grid_random_forest%2C scoring=make_scorer%28hamming_loss%29%2C cv=5%2C error_score=%27raise%27%29%0A%23 Do grid search and log the results.%0Agrid.fit%28X%2C y%29%0Awandb.log%28%7B%27grid_score%27%3A grid.best_score_%2C %27grid_std%27%3A grid.cv_results_%5B%27std_test_score%27%5D%5Bgrid.best_index_%5D%2C %27grid_params%27%3A grid.best_params_%7D%29" isIPythonHidden="True" />
<var name="_i1" type="str" qualifier="builtins" value="import sys%0A%0A%0A%0A%25load_ext autoreload%0A%25autoreload 2" isIPythonHidden="True" />
<var name="_i10" type="str" qualifier="builtins" value="%23 Let%27s analyse the labels.%0Alabels_flattened=df%5B%27sectors_list%27%5D.explode%28%29%0Aunique_labels=labels_flattened.unique%28%29%0An_unique_labels=len%28unique_labels%29%0Aprint%28f%22There are %7Bn_unique_labels%7D classes with possible labels%3A %5Cn %7Bunique_labels%7D%22%29" isIPythonHidden="True" />
<var name="_i11" type="str" qualifier="builtins" value="%23 What are the cumulative totals for each label%3F%0Anum_instances_each_label=labels_flattened.value_counts%28%29%0Atotal_positive_labels=num_instances_each_label.sum%28%29%0Acumulative_sum=num_instances_each_label.cumsum%28%29%0Afraction_dataset_covered=cumulative_sum/total_positive_labels%0Adf_labels=pd.DataFrame%28%7B%27num_labels%27%3A num_instances_each_label%2C%0A                        %27cumulative_positive_labels%27%3A cumulative_sum%2C %0A                        %27cumulative_fraction_dataset_covered%27%3A fraction_dataset_covered%7D%29%0Adf_labels" isIPythonHidden="True" />
<var name="_i12" type="str" qualifier="builtins" value="px.bar%28df_labels%2C x=df_labels.index%2C y=%27num_labels%27%2C title=%27label distribution%27%29" isIPythonHidden="True" />
<var name="_i13" type="str" qualifier="builtins" value="%23 12 most under represented labels.%0Aunderrepresented_labels=df_labels%5B11%3A%5D.index%0A%0Amlb=MultiLabelBinarizer%28%29%0Ay = mlb.fit_transform%28df%5B%27sectors_list%27%5D%29%0A%23 Now let%27s look at the correlations between labels.%0Asns.heatmap%28pd.DataFrame%28y%2C columns=mlb.classes_%29.corr%28%29.loc%5Bunderrepresented_labels%5D%29" isIPythonHidden="True" />
<var name="_i14" type="str" qualifier="builtins" value="px.histogram%28df%5B%27sectors_list%27%5D.apply%28len%29%2C title=%27num labels per instance%27%29" isIPythonHidden="True" />
<var name="_i15" type="str" qualifier="builtins" value="%23 Let%27s also check if there are any labels with an especially high number of classes such that we could change this to a multi-class problem%0A%23 instead of a multi-label problem.%0Adf%5B%27sectors%27%5D.value_counts%28%29.head%2810%29" isIPythonHidden="True" />
<var name="_i16" type="str" qualifier="builtins" value="common_labels=df_labels.index%5B0%3AKEEP_MOST_COMMON_LABELS%5D%0A%0A%23 Only keep sectors in top n labels%0Adf%5B%27sectors_list%27%5D = df%5B%27sectors_list%27%5D.apply%28lambda x%3A %5Btag for tag in x if tag in common_labels%5D%29%0Adf_filtered = df.copy%28%29%5Bdf%5B%27sectors_list%27%5D.str.len%28%29&gt;0%5D%0Adf_filtered.drop%28columns=%27sectors%27%2Cinplace=True%29" isIPythonHidden="True" />
<var name="_i17" type="str" qualifier="builtins" value="y = mlb.fit_transform%28df_filtered%5B%27sectors_list%27%5D%29%0A%0A%23 Split%0Adf_eda%2C df_test%2C y_eda%2C y_test = iter_train_test_split%28%0A    df_filtered%2C y%2C train_size=1-TEST_SET_FRAC%29%0A%0A%0Ay_eda_df = pd.DataFrame%28y_eda%2C columns = mlb.classes_%29" isIPythonHidden="True" />
<var name="_i18" type="str" qualifier="builtins" value="%23 Now let%27s look at the correlations between labels.%0Asns.heatmap%28y_eda_df.corr%28%29%29" isIPythonHidden="True" />
<var name="_i19" type="str" qualifier="builtins" value="%23 Let%27s do a quick analysis of a bunch of statistics from the text columns. %0A%0Adf_eda=df_eda.copy%28%29 %23 Suppress warnings%0Adf_eda%5B%27full_text%27%5D= df_eda%5B%27policy_title%27%5D%2B%27%3A %27%2Bdf_eda%5B%27description_text%27%5D %23 Concat text columns%0A%0Atext_cols=%5B%27description_text%27%2C %27policy_title%27%2C %27full_text%27%5D%0Atext_cols_n_words = %5Bf%27%7Bx%7D_nwords%27 for x in text_cols%5D%0Afor col in text_cols%3A%0A    df_eda%5Bf%27%7Bcol%7D_nwords%27%5D=df_eda%5Bcol%5D.str.split%28%29.str.len%28%29%0A    %0Adef subplot_helper%28cols%3A list%29 -&gt; None%3A%0A    fig=make_subplots%283%2C1%2C subplot_titles=cols%29%0A    for i%2C col in enumerate%28cols%29%3A%0A        trace=go.Histogram%28x=df_eda%5Bcol%5D%29%0A        fig.append_trace%28trace%2C i%2B1%2C1%29%0A    %0A    fig.update_layout%28height=700%2C width=800%29%0A    fig.show%28%29%0A%0Asubplot_helper%28text_cols_n_words%29" isIPythonHidden="True" />
<var name="_i2" type="str" qualifier="builtins" value="from src.sklearn_utils import iter_train_test_split%2C simple_feature_engineering%0Afrom sklearn.ensemble import GradientBoostingClassifier" isIPythonHidden="True" />
<var name="_i20" type="str" qualifier="builtins" value="tokenizer = AutoTokenizer.from_pretrained%28%27distilbert-base-cased%27%29%0Afor col in text_cols%3A%0A    df_eda%5Bf%27%7Bcol%7D_tokens%27%5D=df_eda%5Bcol%5D.apply%28lambda x%3A tokenizer.tokenize%28x%29%29%0A    df_eda%5Bf%27%7Bcol%7D_ntokens%27%5D=df_eda%5Bf%27%7Bcol%7D_tokens%27%5D.str.len%28%29%0A%0Atext_cols_n_tokens = %5Bf%27%7Bx%7D_ntokens%27 for x in text_cols%5D%0Asubplot_helper%28text_cols_n_tokens%29" isIPythonHidden="True" />
<var name="_i21" type="str" qualifier="builtins" value="%23 Let%27s see what happens if we subset the dataset so that it only contains rows with a single label%0A%23 and visualise the separation between classes to get%0Adf_single_label=df_eda%5Bdf_eda%5B%27sectors_list%27%5D.apply%28len%29==1%5D%0AX%2C y = df_single_label%5B%5B%27description_text%27%2C%27policy_title%27%2C%27full_text%27%5D%5D%2C df_single_label%5B%27sectors_list%27%5D.apply%28lambda x%3A x%5B0%5D%29%0AX_train%2C X_test%2C y_train%2C y_test = train_test_split%28%0A     X%2C y%2C test_size=0.33%2C random_state=SEED%29%0A%0Adef tsne_plot%28X_train%2C X_test%2C y_train%2C y_test%2C col%3A str%29%3A%0A    %22%22%22%0A    Helper to plot tsne visualisations on train and test set for a tfidf transformed column.%0A    %22%22%22%0A    tfidf = TfidfVectorizer%28%29%0A    tfidf.fit_transform%28X_train%5Bcol%5D%29%0A    train_features = tfidf.transform%28X_train%5Bcol%5D%29%0A    test_features = tfidf.transform%28X_test%5Bcol%5D%29%0A    tsne_train = TSNEVisualizer%28decompose_by=24%2C title=f%27Train set%3A %7Bcol%7D%27%29%0A    tsne_train.fit%28train_features%2C y_train%29%0A    tsne_train.show%28%29%0A    tsne_test = TSNEVisualizer%28decompose_by=24%2C title=f%27Test set%3A %7Bcol%7D%27%29%0A    ts..." isIPythonHidden="True" />
<var name="_i22" type="str" qualifier="builtins" value="from src.sklearn_utils import TextFeatureEngineering%2C select_col%2C construct_pipeline" isIPythonHidden="True" />
<var name="_i23" type="str" qualifier="builtins" value="X%2C y = df_eda%2C mlb.fit_transform%28df_eda%5B%27sectors_list%27%5D%29" isIPythonHidden="True" />
<var name="_i24" type="str" qualifier="builtins" value="import wandb%0Awandb.init%28project=%22climate-multi-label-classification%22%2C entity=%22stefl14%22%29" isIPythonHidden="True" />
<var name="_i25" type="str" qualifier="builtins" value="def select_col%28df%2C col=%27full_text%27%29%3A %23 lambda%27s not picklable%2C hence this one liner.%0A    return df%5Bcol%5D%0A%0Afull_pipe_rf=construct_pipeline%28%29%0Afull_pipe_gb=construct_pipeline%28clf=GradientBoostingClassifier%28%29%29%0A%0A%23 cv_score=cross_val_score%28full_pipe_rf%2C X%2C y%2C scoring=make_scorer%28hamming_loss%29%2C cv=5%2C error_score=%27raise%27%29%0A%23%0A%23 %23 fit full_pipe and log the results.%0A%23 full_pipe_rf.fit%28X%2C y%29%0A%23 wandb.log%28%7B%27cv_score%27%3A cv_score.mean%28%29%2C %27cv_std%27%3A cv_score.std%28%29%7D%29" isIPythonHidden="True" />
<var name="_i26" type="str" qualifier="builtins" value="full_pipe_rf.get_params%28%29" isIPythonHidden="True" />
<var name="_i27" type="str" qualifier="builtins" value="full_pipe_rf.named_steps%5B%27clf%27%5D.get_params%28%29" isIPythonHidden="True" />
<var name="_i28" type="str" qualifier="builtins" value="from sklearn.model_selection import GridSearchCV%0A%0Aparam_grid_random_forest = %7B%27clf__classifier__n_estimators%27%3A%5B100%2C 200%5D%7D%0Agrid = GridSearchCV%28full_pipe_rf%2C param_grid=param_grid_random_forest%2C scoring=make_scorer%28hamming_loss%29%2C cv=5%2C error_score=%27raise%27%29%0A%23 Do grid search and log the results.%0Agrid.fit%28X%2C y%29%0Awandb.log%28%7B%27grid_score%27%3A grid.best_score_%2C %27grid_std%27%3A grid.cv_results_%5B%27std_test_score%27%5D%5Bgrid.best_index_%5D%7D%29" isIPythonHidden="True" />
<var name="_i29" type="str" qualifier="builtins" value="grid.best_score_" isIPythonHidden="True" />
<var name="_i3" type="str" qualifier="builtins" value="import pandas as pd%0Aimport numpy as np%0Aimport os%0Aimport plotly.express as px%0Afrom skmultilearn.model_selection import IterativeStratification%0Afrom sklearn.model_selection import train_test_split%0Afrom sklearn.preprocessing import MultiLabelBinarizer%0Afrom sklearn.dummy import DummyClassifier%0Afrom sklearn.metrics import hamming_loss%0Aimport seaborn as sns%0A%0Afrom sklearn.feature_extraction.text import TfidfVectorizer%0A%0Afrom yellowbrick.text import TSNEVisualizer%0Afrom yellowbrick.datasets import load_hobbies%0A%23 import tensorflow_addons as tfa%0Afrom sklearn.metrics import hamming_loss%0A%0Afrom skmultilearn.problem_transform import ClassifierChain%0Afrom sklearn.metrics import hamming_loss%2C accuracy_score%2C make_scorer%0Afrom sklearn.feature_extraction.text import CountVectorizer%2C TfidfVectorizer%0Afrom sklearn.naive_bayes import MultinomialNB%0Afrom sklearn.pipeline import Pipeline%0Afrom sklearn.linear_model import Lasso%0Afrom sklearn.model_selection import cross_val_score%0Afrom datetime import time%0A%0Afrom trans..." isIPythonHidden="True" />
<var name="_i30" type="str" qualifier="builtins" value="from sklearn.model_selection import GridSearchCV%0A%0Aparam_grid_random_forest = %7B%27clf__classifier__n_estimators%27%3A%5B100%2C 200%5D%7D%0Agrid = GridSearchCV%28full_pipe_rf%2C param_grid=param_grid_random_forest%2C scoring=make_scorer%28hamming_loss%29%2C cv=5%2C error_score=%27raise%27%29%0A%23 Do grid search and log the results.%0Agrid.fit%28X%2C y%29%0Awandb.log%28%7B%27grid_score%27%3A grid.best_score_%2C %27grid_std%27%3A grid.cv_results_%5B%27std_test_score%27%5D%5Bgrid.best_index_%5D%2C %27grid_params%27%3A grid.best_params_%7D%29" isIPythonHidden="True" />
<var name="_i31" type="str" qualifier="builtins" value="grid.best_params_" isIPythonHidden="True" />
<var name="_i4" type="str" qualifier="builtins" value="def create_tokenized_ds%28%0A    X%2C y%2C text_column=%22description_text%22%2C model_name=%22bert-base-cased%22%2C batch_size=16%0A%29%3A%0A    y = np.array%28y%2C dtype=%22int32%22%29%0A    X = X%5Btext_column%5D%0A    tokens = tokenizer%28%0A        list%28X%29%2C%0A        padding=%22max_length%22%2C%0A        truncation=True%2C%0A        return_tensors=%22tf%22%2C%0A        return_token_type_ids=False%2C%0A    %29%0A    tokens_w_labels = tokens.copy%28%29%0A    tokens_w_labels%5B%22target%22%5D = y%0A    tf_dataset = tf.data.Dataset.from_tensor_slices%28%28dict%28tokens_w_labels%29%2C y%29%29%0A    tf_dataset = tf_dataset.shuffle%28len%28tf_dataset%29%29.batch%28batch_size%29%0A    return tf_dataset%0A%0A%0Aimport keras%0A%0AK = keras.backend%0A%0A%0Aclass ExponentialLearningRate%28keras.callbacks.Callback%29%3A%0A    def __init__%28self%2C factor%29%3A%0A        self.factor = factor%0A        self.rates = %5B%5D%0A        self.losses = %5B%5D%0A%0A    def on_batch_end%28self%2C batch%2C logs%29%3A%0A        self.rates.append%28K.get_value%28self.model.optimizer.learning_rate%29%29%0A        self.losses.append%28logs%5B%22loss%22%5D%29%0A        K.set_value%28%0A            self.model.optimizer.le..." isIPythonHidden="True" />
<var name="_i5" type="str" qualifier="builtins" value="os.getcwd%28%29" isIPythonHidden="True" />
<var name="_i6" type="str" qualifier="builtins" value="%23 Constants%0ASEED=42%0AHOLD_OUT_PERCENTAGE=10%0AITERATIVE_STRAT_ORDER=1%0AKEEP_MOST_COMMON_LABELS=10%0ABATCH_SIZE=16%0ATRAIN_FRACTION=0.9%0AHUGGINGFACE_CONFIG=%27distilbert-base-cased%27%0ATEST_SET_FRAC=.1" isIPythonHidden="True" />
<var name="_i7" type="str" qualifier="builtins" value="data_path = Path%28os.path.abspath%28%27%27%29%29.parent / %27data%27 / %27recruitment-task_1-full.csv%27%0A%0Adf=pd.read_csv%28%27/home/stefan/PycharmProjects/multi-label-classification-climate/data/recruitment-task_1-full.csv%27%29%0Adf.head%28%29" isIPythonHidden="True" />
<var name="_i8" type="str" qualifier="builtins" value="df.info%28%29" isIPythonHidden="True" />
<var name="_i9" type="str" qualifier="builtins" value="%23 Parse labels into a list.%0Adf%5B%27sectors_list%27%5D=df%5B%27sectors%27%5D.str.split%28%22%3B%22%29%0Adf=df%5B~df.description_text.duplicated%28%29%5D %23 Found a duplicated entry" isIPythonHidden="True" />
<var name="_ih" type="list" qualifier="builtins" value="%5B%27%27%2C %22import sys%5Cn%5Cn%5Cn%5Cnget_ipython%28%29.run_line_magic%28%27load_ext%27%2C %27autoreload%27%29%5Cnget_ipython%28%29.run_line_magic%28%27autoreload%27%2C %272%27%29%22%2C %27from src.sklearn_utils import iter_train_test_split%2C simple_feature_engineering%5Cnfrom sklearn.ensemble import GradientBoostingClassifier%27%2C %27import pandas as pd%5Cnimport numpy as np%5Cnimport os%5Cnimport plotly.express as px%5Cnfrom skmultilearn.model_selection import IterativeStratification%5Cnfrom sklearn.model_selection import train_test_split%5Cnfrom sklearn.preprocessing import MultiLabelBinarizer%5Cnfrom sklearn.dummy import DummyClassifier%5Cnfrom sklearn.metrics import hamming_loss%5Cnimport seaborn as sns%5Cn%5Cnfrom sklearn.feature_extraction.text import TfidfVectorizer%5Cn%5Cnfrom yellowbrick.text import TSNEVisualizer%5Cnfrom yellowbrick.datasets import load_hobbies%5Cn%23 import tensorflow_addons as tfa%5Cnfrom sklearn.metrics import hamming_loss%5Cn%5Cnfrom skmultilearn.problem_transform import ClassifierChain%5Cnfrom sklearn.metrics import hamming_loss%2C accuracy_score%2C make_scorer..." isContainer="True" shape="32" isIPythonHidden="True" />
<var name="_ii" type="str" qualifier="builtins" value="grid.best_score_" isIPythonHidden="True" />
<var name="_iii" type="str" qualifier="builtins" value="from sklearn.model_selection import GridSearchCV%0A%0Aparam_grid_random_forest = %7B%27clf__classifier__n_estimators%27%3A%5B100%2C 200%5D%7D%0Agrid = GridSearchCV%28full_pipe_rf%2C param_grid=param_grid_random_forest%2C scoring=make_scorer%28hamming_loss%29%2C cv=5%2C error_score=%27raise%27%29%0A%23 Do grid search and log the results.%0Agrid.fit%28X%2C y%29%0Awandb.log%28%7B%27grid_score%27%3A grid.best_score_%2C %27grid_std%27%3A grid.cv_results_%5B%27std_test_score%27%5D%5Bgrid.best_index_%5D%7D%29" isIPythonHidden="True" />
<var name="_oh" type="dict" qualifier="builtins" value="%7B5%3A %27/home/stefan/PycharmProjects/multi-label-classification-climate/notebooks%27%2C 7%3A    policy_id                       policy_title  %5C%0A0      10088     Circular economy promotion law   %0A1      10087                14th Five-Year Plan   %0A2      10046             National Forest Policy   %0A3      10044   Suriname National REDD%2B Strategy   %0A4      10042  Policy Development Plan 2017-2021   %0A%0A                                             sectors  %5C%0A0                  Industry%3BAgriculture%3BEconomy-wide   %0A1  Transportation%3BRural%3BLULUCF%3BEnergy%3BEconomy-wid...   %0A2                                             LULUCF   %0A3                                             LULUCF   %0A4                                       Economy-wide   %0A%0A                                    description_text  %0A0  This law promotes the development of a circula...  %0A1  The 14th Five Year Plan lays down the strategy...  %0A2  This document aims at protecting the country%27s...  %0A3  This document aims to protect Suriname%27s fores......" isContainer="True" shape="13" isIPythonHidden="True" />
<var name="_pydevd_bundle" type="module" qualifier="builtins" value="%3Cmodule %27_pydevd_bundle%27 from %27/snap/pycharm-professional/290/plugins/python/helpers/pydev/_pydevd_bundle/__init__.py%27&gt;" isContainer="True" />
<var name="accuracy_score" type="function" qualifier="builtins" value="%3Cfunction accuracy_score at 0x7fdf48fbb8b0&gt;" isContainer="True" />
<var name="col" type="str" qualifier="builtins" value="full_text" />
<var name="common_labels" type="Index" qualifier="pandas.core.indexes.base" value="Index%28%5B%27Energy%27%2C %27Transportation%27%2C %27LULUCF%27%2C %27Economy-wide%27%2C%0A       %27Residential and Commercial%27%2C %27Agriculture%27%2C %27Water%27%2C %27Industry%27%2C%0A       %27Waste%27%2C %27Health%27%5D%2C%0A      dtype=%27object%27%29" isContainer="True" shape="(10,)" />
<var name="construct_pipeline" type="function" qualifier="builtins" value="%3Cfunction construct_pipeline at 0x7fdf1be14a60&gt;" isContainer="True" />
<var name="create_tokenized_ds" type="function" qualifier="builtins" value="%3Cfunction create_tokenized_ds at 0x7fdf196f1790&gt;" isContainer="True" />
<var name="cross_val_score" type="function" qualifier="builtins" value="%3Cfunction cross_val_score at 0x7fdf48eb9b80&gt;" isContainer="True" />
<var name="cumulative_sum" type="Series" qualifier="pandas.core.series" value="%28%27Energy%27%2C 1143%29 %28%27Transportation%27%2C 1904%29 %28%27LULUCF%27%2C 2302%29 %28%27Economy-wide%27%2C 2668%29 %28%27Residential and Commercial%27%2C 3019%29 %28%27Agriculture%27%2C 3324%29 %28%27Water%27%2C 3621%29 %28%27Industry%27%2C 3859%29 %28%27Waste%27%2C 4036%29 %28%27Health%27%2C 4194%29 %28%27Environment%27%2C 4321%29 %28%27Urban%27%2C 4394%29 %28%27Buildings%27%2C 4459%29 %28%27Tourism%27%2C 4511%29 %28%27Social development%27%2C 4556%29 %28%27Disaster Risk Management %28Drm%29%27%2C 4589%29 %28%27Coastal zones%27%2C 4617%29 %28%27Rural%27%2C 4636%29 %28%27Adaptation%27%2C 4647%29 %28%27Cross Cutting Area%27%2C 4656%29 %28%27Public Sector%27%2C 4664%29 %28%27Other%27%2C 4670%29 %28%27Finance%27%2C 4675%29" isContainer="True" shape="(23,)" />
<var name="data_path" type="PosixPath" qualifier="pathlib" value="/home/stefan/PycharmProjects/multi-label-classification-climate/data/recruitment-task_1-full.csv" isContainer="True" />
<var name="df" type="DataFrame" qualifier="pandas.core.frame" value="policy_id                                       policy_title  %5C %5B0         10088                     Circular economy promotion law   %5D %5B1         10087                                14th Five-Year Plan   %5D %5B2         10046                             National Forest Policy   %5D %5B3         10044                   Suriname National REDD%2B Strategy   %5D %5B4         10042                  Policy Development Plan 2017-2021   %5D %5B...         ...                                                ...   %5D %5B1955       8835  National Climate Change Strategy and Action Pl...   %5D %5B1956       9110                 National Policy for Climate Change   %5D %5B1957       9191  Presidential Decree 7/2019 establishing the na...   %5D %5B1958       8889  Act No. 28 of 1972 concerning nuclear energy a...   %5D %5B1959       8887  Natural Hazards Compensation Act %28No. 59 of 2014%29   %5D %5B%5D %5B                                                sectors  %5C%5D %5B0                     Industry%3BAgriculture%3BEconomy-wide   %5D %5B1     Transportation%3BRural%3BLULUCF%3BEnergy%3B...%5D" isContainer="True" shape="(1959, 5)" />
<var name="df_eda" type="DataFrame" qualifier="pandas.core.frame" value="policy_id                                       policy_title  %5C %5B0         10088                     Circular economy promotion law   %5D %5B3         10044                   Suriname National REDD%2B Strategy   %5D %5B5         10049                               Energy Strategy 2050   %5D %5B6         10051                   Long-Term Climate Strategy%2C 2021   %5D %5B9         10054  Environmentally Sustainable Transport System P...   %5D %5B...         ...                                                ...   %5D %5B1955       8835  National Climate Change Strategy and Action Pl...   %5D %5B1956       9110                 National Policy for Climate Change   %5D %5B1957       9191  Presidential Decree 7/2019 establishing the na...   %5D %5B1958       8889  Act No. 28 of 1972 concerning nuclear energy a...   %5D %5B1959       8887  Natural Hazards Compensation Act %28No. 59 of 2014%29   %5D %5B%5D %5B                                       description_text  %5C%5D %5B0     This law promotes the development of a circula...   %5D %5B3     This document aims to protect Surin...%5D" isContainer="True" shape="(1680, 14)" />
<var name="df_filtered" type="DataFrame" qualifier="pandas.core.frame" value="policy_id                                       policy_title  %5C %5B0         10088                     Circular economy promotion law   %5D %5B1         10087                                14th Five-Year Plan   %5D %5B2         10046                             National Forest Policy   %5D %5B3         10044                   Suriname National REDD%2B Strategy   %5D %5B4         10042                  Policy Development Plan 2017-2021   %5D %5B...         ...                                                ...   %5D %5B1955       8835  National Climate Change Strategy and Action Pl...   %5D %5B1956       9110                 National Policy for Climate Change   %5D %5B1957       9191  Presidential Decree 7/2019 establishing the na...   %5D %5B1958       8889  Act No. 28 of 1972 concerning nuclear energy a...   %5D %5B1959       8887  Natural Hazards Compensation Act %28No. 59 of 2014%29   %5D %5B%5D %5B                                       description_text  %5C%5D %5B0     This law promotes the development of a circula...   %5D %5B1     The 14th Five Year Plan lays down t...%5D" isContainer="True" shape="(1879, 4)" />
<var name="df_labels" type="DataFrame" qualifier="pandas.core.frame" value="num_labels  cumulative_positive_labels  %5C %5BEnergy                                1143                        1143   %5D %5BTransportation                         761                        1904   %5D %5BLULUCF                                 398                        2302   %5D %5BEconomy-wide                           366                        2668   %5D %5BResidential and Commercial             351                        3019   %5D %5BAgriculture                            305                        3324   %5D %5BWater                                  297                        3621   %5D %5BIndustry                               238                        3859   %5D %5BWaste                                  177                        4036   %5D %5BHealth                                 158                        4194   %5D %5BEnvironment                            127                        4321   %5D %5BUrban                                   73                        4394   %5D %5BBuildings                             ...%5D" isContainer="True" shape="(23, 3)" />
<var name="df_single_label" type="DataFrame" qualifier="pandas.core.frame" value="policy_id                                       policy_title  %5C %5B3         10044                   Suriname National REDD%2B Strategy   %5D %5B5         10049                               Energy Strategy 2050   %5D %5B6         10051                   Long-Term Climate Strategy%2C 2021   %5D %5B9         10054  Environmentally Sustainable Transport System P...   %5D %5B10        10061  Uganda Green Growth Development Strategy 2017/...   %5D %5B...         ...                                                ...   %5D %5B1950       8704  National Strategy for Adaptation to Climate Ch...   %5D %5B1953       8766  Priority Framework for Action%3A Climate Change ...   %5D %5B1956       9110                 National Policy for Climate Change   %5D %5B1958       8889  Act No. 28 of 1972 concerning nuclear energy a...   %5D %5B1959       8887  Natural Hazards Compensation Act %28No. 59 of 2014%29   %5D %5B%5D %5B                                       description_text      sectors_list  %5C%5D %5B3     This document aims to protect Suriname%27s fores...          %5BLULUCF%5D   %5D %5B5    ...%5D" isContainer="True" shape="(752, 14)" />
<var name="df_test" type="DataFrame" qualifier="pandas.core.frame" value="policy_id                                       policy_title  %5C %5B1        10087                                14th Five-Year Plan   %5D %5B2        10046                             National Forest Policy   %5D %5B4        10042                  Policy Development Plan 2017-2021   %5D %5B7        10052                 Switzerland%E2%80%99s climate policy%2C 2018   %5D %5B8        10053       Smart Grid Development Master Plan 2015-2036   %5D %5B..         ...                                                ...   %5D %5B549       9133                     Law No. 293-Z on energy saving   %5D %5B552       9045                  Law No. 1136-XIV on energy saving   %5D %5B588       8784  Industrial Sector Plan for mitigation and Adap...   %5D %5B616       8687                              Pollution Control Act   %5D %5B760       4313          Second National Environmental Action Plan   %5D %5B%5D %5B                                      description_text  %5C%5D %5B1    The 14th Five Year Plan lays down the strategy...   %5D %5B2    This document aims at protecting the country%27s... ...%5D" isContainer="True" shape="(199, 4)" />
<var name="exit" type="ZMQExitAutocall" qualifier="IPython.core.autocall" value="%3CIPython.core.autocall.ZMQExitAutocall object at 0x7fdf59b7a1c0&gt;" isContainer="True" isIPythonHidden="True" />
<var name="fraction_dataset_covered" type="Series" qualifier="pandas.core.series" value="%28%27Energy%27%2C 0.24449197860962568%29 %28%27Transportation%27%2C 0.4072727272727273%29 %28%27LULUCF%27%2C 0.4924064171122995%29 %28%27Economy-wide%27%2C 0.5706951871657754%29 %28%27Residential and Commercial%27%2C 0.6457754010695187%29 %28%27Agriculture%27%2C 0.7110160427807487%29 %28%27Water%27%2C 0.7745454545454545%29 %28%27Industry%27%2C 0.8254545454545454%29 %28%27Waste%27%2C 0.8633155080213903%29 %28%27Health%27%2C 0.8971122994652406%29 %28%27Environment%27%2C 0.9242780748663102%29 %28%27Urban%27%2C 0.9398930481283423%29 %28%27Buildings%27%2C 0.9537967914438503%29 %28%27Tourism%27%2C 0.9649197860962567%29 %28%27Social development%27%2C 0.9745454545454545%29 %28%27Disaster Risk Management %28Drm%29%27%2C 0.9816042780748663%29 %28%27Coastal zones%27%2C 0.9875935828877005%29 %28%27Rural%27%2C 0.9916577540106952%29 %28%27Adaptation%27%2C 0.9940106951871658%29 %28%27Cross Cutting Area%27%2C 0.9959358288770054%29 %28%27Public Sector%27%2C 0.9976470588235294%29 %28%27Other%27%2C 0.9989304812834224%29 %28%27Finance%27%2C 1.0%29" isContainer="True" shape="(23,)" />
<var name="full_pipe_gb" type="Pipeline" qualifier="sklearn.pipeline" value="Pipeline%28steps=%5B%28%27features%27%2C%0A                 FeatureUnion%28transformer_list=%5B%28%27pipeline_text%27%2C%0A                                                 Pipeline%28steps=%5B%28%27select_text_col%27%2C%0A                                                                  FunctionTransformer%28func=%3Cfunction select_col at 0x7fdf1be14310&gt;%29%29%2C%0A                                                                 %28%27tfidf%27%2C%0A                                                                  TfidfVectorizer%28lowercase=False%2C%0A                                                                                  max_df=0.5%2C%0A                                                                                  stop_words=%27english%27%29%29%5D%29%29%2C%0A                                                %28%27feature_engineering%27%2C%0A                                                 TextFeatureEngineering%28%29%29%5D%29%29%2C%0A                %28%27clf%27%2C%0A                 ClassifierChain%28classifier=GradientBoostingClassifier%28%29%2C%0A                                 require_dense=%5BTrue%2C True%5D%29..." isContainer="True" shape="2" />
<var name="full_pipe_rf" type="Pipeline" qualifier="sklearn.pipeline" value="Pipeline%28steps=%5B%28%27features%27%2C%0A                 FeatureUnion%28transformer_list=%5B%28%27pipeline_text%27%2C%0A                                                 Pipeline%28steps=%5B%28%27select_text_col%27%2C%0A                                                                  FunctionTransformer%28func=%3Cfunction select_col at 0x7fdf1be14310&gt;%29%29%2C%0A                                                                 %28%27tfidf%27%2C%0A                                                                  TfidfVectorizer%28lowercase=False%2C%0A                                                                                  max_df=0.5%2C%0A                                                                                  stop_words=%27english%27%29%29%5D%29%29%2C%0A                                                %28%27feature_engineering%27%2C%0A                                                 TextFeatureEngineering%28%29%29%5D%29%29%2C%0A                %28%27clf%27%2C%0A                 ClassifierChain%28classifier=RandomForestClassifier%28%29%2C%0A                                 require_dense=%5BTrue%2C True%5D%29%29%5D%29" isContainer="True" shape="2" />
<var name="get_ipython" type="method" qualifier="builtins" value="%3Cbound method InteractiveShell.get_ipython of %3Cipykernel.zmqshell.ZMQInteractiveShell object at 0x7fdf59b5e520&gt;&gt;" isContainer="True" isIPythonHidden="True" />
<var name="go" type="module" qualifier="builtins" value="%3Cmodule %27plotly.graph_objects%27 from %27/home/stefan/anaconda3/envs/multi-label-classification-climate/lib/python3.9/site-packages/plotly/graph_objects/__init__.py%27&gt;" isContainer="True" />
<var name="grid" type="GridSearchCV" qualifier="sklearn.model_selection._search" value="GridSearchCV%28cv=5%2C error_score=%27raise%27%2C%0A             estimator=Pipeline%28steps=%5B%28%27features%27%2C%0A                                        FeatureUnion%28transformer_list=%5B%28%27pipeline_text%27%2C%0A                                                                        Pipeline%28steps=%5B%28%27select_text_col%27%2C%0A                                                                                         FunctionTransformer%28func=%3Cfunction select_col at 0x7fdf1be14310&gt;%29%29%2C%0A                                                                                        %28%27tfidf%27%2C%0A                                                                                         TfidfVectorizer%28lowercase=False%2C%0A                                                                                                         max_df=0.5%2C%0A                                                                                                         stop_words=%27english%27%29%29%5D%29%29%2C%0A                                                                       %28%27feature_engi..." isContainer="True" />
<var name="hamming_loss" type="function" qualifier="builtins" value="%3Cfunction hamming_loss at 0x7fdf48fc2280&gt;" isContainer="True" />
<var name="iter_train_test_split" type="function" qualifier="builtins" value="%3Cfunction iter_train_test_split at 0x7fdf1cce23a0&gt;" isContainer="True" />
<var name="joblib" type="module" qualifier="builtins" value="%3Cmodule %27joblib%27 from %27/home/stefan/anaconda3/envs/multi-label-classification-climate/lib/python3.9/site-packages/joblib/__init__.py%27&gt;" isContainer="True" />
<var name="labels_flattened" type="Series" qualifier="pandas.core.series" value="%280%2C %27Industry%27%29 %280%2C %27Agriculture%27%29 %280%2C %27Economy-wide%27%29 %281%2C %27Transportation%27%29 %281%2C %27Rural%27%29 %281%2C %27LULUCF%27%29 %281%2C %27Energy%27%29 %281%2C %27Economy-wide%27%29 %281%2C %27Agriculture%27%29 %282%2C %27LULUCF%27%29 %283%2C %27LULUCF%27%29 %284%2C %27Economy-wide%27%29 %285%2C %27Energy%27%29 %286%2C %27Economy-wide%27%29 %287%2C %27Economy-wide%27%29 %288%2C %27Energy%27%29 %289%2C %27Transportation%27%29 %2810%2C %27Economy-wide%27%29 %2811%2C %27Economy-wide%27%29 %2812%2C %27Economy-wide%27%29 %2813%2C %27Economy-wide%27%29 %2814%2C %27Economy-wide%27%29 %2815%2C %27Economy-wide%27%29 %2816%2C %27Social development%27%29 %2816%2C %27LULUCF%27%29 %2816%2C %27Economy-wide%27%29 %2817%2C %27Industry%27%29 %2818%2C %27Economy-wide%27%29 %2819%2C %27Agriculture%27%29 %2821%2C %27Energy%27%29 %2821%2C %27Economy-wide%27%29 %2821%2C %27Adaptation%27%29 %2822%2C %27Health%27%29 %2823%2C %27Economy-wide%27%29 %2824%2C %27Economy-wide%27%29 %2825%2C %27Transportation%27%29 %2826%2C %27LULUCF%27%29 %2827%2C %27Economy-wide%27%29 %2828%2C %27Adaptation%27%29 %2829%2C %27Buildings%27%29 %2830%2C %27Tourism%27%29 %2831%2C %27Environment%27%29 %2831%2C %27Energy%27%29 %2831%2C %27Economy-wide%27%29 %2832%2C %27Economy-wide%27%29 %2833%2C %27Transportation%27%29 %2834%2C %27Energy%27%29 %2834%2C %27Economy-wide%27%29 %2835%2C %27Economy-wide%27%29 %2835%2C %27Coastal zones%27%29 %2835%2C %27Adaptation%27%29 %2836%2C %27LULUCF%27%29 %2836%2C %27Energy%27%29 %2836%2C %27Economy-wide%27%29 %2837%2C %27LULUCF%27%29 %2838%2C %27Environment%27%29 %2839%2C %27LULUCF%27%29 %2839%2C %27Energy%27%29 %2840%2C %27Industry%27%29 %2840%2C %27Health%27%29 %2840%2C %27Economy-wide%27%29 %2840%2C %27Coastal zones%27%29 %2840%2C %27Buildings%27%29 %2841%2C %27Urban%27%29 %2841%2C %27Energy%27%29 %2842%2C %27Water%27%29 %2842%2C %27Cross Cutting Area%27%29 %2843%2C %27Economy-wide%27%29 %2844%2C %27Transportation%27%29 %2844%2C %27Public Sector%27%29 %2844%2C %27Buildings%27%29 %2845%2C %27Energy%27%29 %2846%2C %27Urban%27%29 %2846%2C %27LULUCF%27%29 %2846%2C %27Agriculture%27%29 %2847%2C %27Environment%27%29 %2848%2C %27LULUCF%27%29 %2849%2C %27Energy%27%29 %2849%2C %27Economy-wide%27%29 %2850%2C %27Residential and Commercial%27%29 %2850%2C %27Buildings%27%29 %2851%2C %27LULUCF%27%29 %2852%2C %27Economy-wide%27%29 %2853%2C %27Economy-wide%27%29 %2854%2C %27Economy-wide%27%29 %2855%2C %27Energy%27%29 %2856%2C %27Energy%27%29 %2857%2C %27Economy-wide%27%29 %2858%2C %27Economy-wide%27%29 %2859%2C %27Economy-wide%27%29 %2860%2C %27Economy-wide%27%29 %2861%2C %27Economy-wide%27%29 %2862%2C %27Transportation%27%29 %2863%2C %27Economy-wide%27%29 %2864%2C %27Economy-wide%27%29 %2865%2C %27Energy%27%29 %2866%2C %27Energy%27%29 %2867%2C %27Economy-wide%27%29 %2868%2C %27Transportation%27%29 %2869%2C %27Economy-wide%27%29" isContainer="True" shape="(4675,)" />
<var name="load_hobbies" type="function" qualifier="builtins" value="%3Cfunction load_hobbies at 0x7fdf1b790700&gt;" isContainer="True" />
<var name="logger" type="RootLogger" qualifier="logging" value="%3CRootLogger root %28CRITICAL%29&gt;" isContainer="True" />
<var name="logging" type="module" qualifier="builtins" value="%3Cmodule %27logging%27 from %27/home/stefan/anaconda3/envs/multi-label-classification-climate/lib/python3.9/logging/__init__.py%27&gt;" isContainer="True" />
<var name="make_scorer" type="function" qualifier="builtins" value="%3Cfunction make_scorer at 0x7fdf48eac670&gt;" isContainer="True" />
<var name="make_subplots" type="function" qualifier="builtins" value="%3Cfunction make_subplots at 0x7fdf1a24e790&gt;" isContainer="True" />
<var name="math" type="module" qualifier="builtins" value="%3Cmodule %27math%27 from %27/home/stefan/anaconda3/envs/multi-label-classification-climate/lib/python3.9/lib-dynload/math.cpython-39-x86_64-linux-gnu.so%27&gt;" isContainer="True" />
<var name="mlb" type="MultiLabelBinarizer" qualifier="sklearn.preprocessing._label" value="MultiLabelBinarizer%28%29" isContainer="True" />
<var name="n_unique_labels" type="int" qualifier="builtins" value="23" />
<var name="np" type="module" qualifier="builtins" value="%3Cmodule %27numpy%27 from %27/home/stefan/anaconda3/envs/multi-label-classification-climate/lib/python3.9/site-packages/numpy/__init__.py%27&gt;" isContainer="True" />
<var name="num_instances_each_label" type="Series" qualifier="pandas.core.series" value="%28%27Energy%27%2C 1143%29 %28%27Transportation%27%2C 761%29 %28%27LULUCF%27%2C 398%29 %28%27Economy-wide%27%2C 366%29 %28%27Residential and Commercial%27%2C 351%29 %28%27Agriculture%27%2C 305%29 %28%27Water%27%2C 297%29 %28%27Industry%27%2C 238%29 %28%27Waste%27%2C 177%29 %28%27Health%27%2C 158%29 %28%27Environment%27%2C 127%29 %28%27Urban%27%2C 73%29 %28%27Buildings%27%2C 65%29 %28%27Tourism%27%2C 52%29 %28%27Social development%27%2C 45%29 %28%27Disaster Risk Management %28Drm%29%27%2C 33%29 %28%27Coastal zones%27%2C 28%29 %28%27Rural%27%2C 19%29 %28%27Adaptation%27%2C 11%29 %28%27Cross Cutting Area%27%2C 9%29 %28%27Public Sector%27%2C 8%29 %28%27Other%27%2C 6%29 %28%27Finance%27%2C 5%29" isContainer="True" shape="(23,)" />
<var name="os" type="module" qualifier="builtins" value="%3Cmodule %27os%27 from %27/home/stefan/anaconda3/envs/multi-label-classification-climate/lib/python3.9/os.py%27&gt;" isContainer="True" />
<var name="param_grid_random_forest" type="dict" qualifier="builtins" value="%7B%27clf__classifier__n_estimators%27%3A %5B100%2C 200%5D%7D" isContainer="True" shape="1" />
<var name="pd" type="module" qualifier="builtins" value="%3Cmodule %27pandas%27 from %27/home/stefan/anaconda3/envs/multi-label-classification-climate/lib/python3.9/site-packages/pandas/__init__.py%27&gt;" isContainer="True" />
<var name="plt" type="module" qualifier="builtins" value="%3Cmodule %27matplotlib.pyplot%27 from %27/home/stefan/anaconda3/envs/multi-label-classification-climate/lib/python3.9/site-packages/matplotlib/pyplot.py%27&gt;" isContainer="True" />
<var name="print_columns" type="function" qualifier="builtins" value="%3Cfunction print_columns at 0x7fde80473550&gt;" isContainer="True" />
<var name="px" type="module" qualifier="builtins" value="%3Cmodule %27plotly.express%27 from %27/home/stefan/anaconda3/envs/multi-label-classification-climate/lib/python3.9/site-packages/plotly/express/__init__.py%27&gt;" isContainer="True" />
<var name="pydev_jupyter_vars" type="module" qualifier="builtins" value="%3Cmodule %27pydev_jupyter_vars%27 from %27/snap/pycharm-professional/290/plugins/python/helpers-pro/jupyter_debug/pydev_jupyter_vars.py%27&gt;" isContainer="True" />
<var name="quit" type="ZMQExitAutocall" qualifier="IPython.core.autocall" value="%3CIPython.core.autocall.ZMQExitAutocall object at 0x7fdf59b7a1c0&gt;" isContainer="True" isIPythonHidden="True" />
<var name="remove_imported_pydev_package" type="function" qualifier="builtins" value="%3Cfunction remove_imported_pydev_package at 0x7fdf1cd905e0&gt;" isContainer="True" />
<var name="select_col" type="function" qualifier="builtins" value="%3Cfunction select_col at 0x7fdeab42f0d0&gt;" isContainer="True" />
<var name="simple_feature_engineering" type="function" qualifier="builtins" value="%3Cfunction simple_feature_engineering at 0x7fdf1cb21af0&gt;" isContainer="True" />
<var name="sns" type="module" qualifier="builtins" value="%3Cmodule %27seaborn%27 from %27/home/stefan/anaconda3/envs/multi-label-classification-climate/lib/python3.9/site-packages/seaborn/__init__.py%27&gt;" isContainer="True" />
<var name="subplot_helper" type="function" qualifier="builtins" value="%3Cfunction subplot_helper at 0x7fdf0eee9f70&gt;" isContainer="True" />
<var name="sys" type="module" qualifier="builtins" value="%3Cmodule %27sys%27 %28built-in%29&gt;" isContainer="True" />
<var name="text_cols" type="list" qualifier="builtins" value="%5B%27description_text%27%2C %27policy_title%27%2C %27full_text%27%5D" isContainer="True" shape="3" />
<var name="text_cols_n_tokens" type="list" qualifier="builtins" value="%5B%27description_text_ntokens%27%2C %27policy_title_ntokens%27%2C %27full_text_ntokens%27%5D" isContainer="True" shape="3" />
<var name="text_cols_n_words" type="list" qualifier="builtins" value="%5B%27description_text_nwords%27%2C %27policy_title_nwords%27%2C %27full_text_nwords%27%5D" isContainer="True" shape="3" />
<var name="time" type="type" qualifier="builtins" value="%3Cclass %27datetime.time%27&gt;" isContainer="True" />
<var name="tokenizer" type="DistilBertTokenizerFast" qualifier="transformers.models.distilbert.tokenization_distilbert_fast" value="PreTrainedTokenizerFast%28name_or_path=%27distilbert-base-cased%27%2C vocab_size=28996%2C model_max_len=512%2C is_fast=True%2C padding_side=%27right%27%2C truncation_side=%27right%27%2C special_tokens=%7B%27unk_token%27%3A %27%5BUNK%5D%27%2C %27sep_token%27%3A %27%5BSEP%5D%27%2C %27pad_token%27%3A %27%5BPAD%5D%27%2C %27cls_token%27%3A %27%5BCLS%5D%27%2C %27mask_token%27%3A %27%5BMASK%5D%27%7D%29" isContainer="True" shape="28996" />
<var name="total_positive_labels" type="int64" qualifier="numpy" value="4675" isContainer="True" shape="()" />
<var name="train_test_split" type="function" qualifier="builtins" value="%3Cfunction train_test_split at 0x7fdf1c8fb790&gt;" isContainer="True" />
<var name="tsne_plot" type="function" qualifier="builtins" value="%3Cfunction tsne_plot at 0x7fdf195f7dc0&gt;" isContainer="True" />
<var name="underrepresented_labels" type="Index" qualifier="pandas.core.indexes.base" value="Index%28%5B%27Urban%27%2C %27Buildings%27%2C %27Tourism%27%2C %27Social development%27%2C%0A       %27Disaster Risk Management %28Drm%29%27%2C %27Coastal zones%27%2C %27Rural%27%2C%0A       %27Adaptation%27%2C %27Cross Cutting Area%27%2C %27Public Sector%27%2C %27Other%27%2C%0A       %27Finance%27%5D%2C%0A      dtype=%27object%27%29" isContainer="True" shape="(12,)" />
<var name="unique_labels" type="ndarray" qualifier="numpy" value="%5B%27Industry%27 %27Agriculture%27 %27Economy-wide%27 %27Transportation%27 %27Rural%27 %27LULUCF%27%2C %27Energy%27 %27Social development%27 %27Adaptation%27 %27Health%27 %27Buildings%27 %27Tourism%27%2C %27Environment%27 %27Coastal zones%27 %27Urban%27 %27Water%27 %27Cross Cutting Area%27%2C %27Public Sector%27 %27Residential and Commercial%27 %27Finance%27 %27Waste%27 %27Other%27%2C %27Disaster Risk Management %28Drm%29%27%5D" isContainer="True" shape="(23,)" />
<var name="wandb" type="module" qualifier="builtins" value="%3Cmodule %27wandb%27 from %27/home/stefan/anaconda3/envs/multi-label-classification-climate/lib/python3.9/site-packages/wandb/__init__.py%27&gt;" isContainer="True" />
<var name="y" type="ndarray" qualifier="numpy" value="%5B%5B1 1 0 0 1 0 0 0 0 0%5D%2C %5B0 0 0 0 0 1 0 0 0 0%5D%2C %5B0 0 1 0 0 0 0 0 0 0%5D%2C %5B0 1 0 0 0 0 0 0 0 0%5D%2C %5B0 0 0 0 0 0 0 1 0 0%5D%2C %5B0 1 0 0 0 0 0 0 0 0%5D%2C %5B0 1 0 0 0 0 0 0 0 0%5D%2C %5B0 1 0 0 0 0 0 0 0 0%5D%2C %5B0 1 0 0 0 1 0 0 0 0%5D%2C %5B1 0 0 0 0 0 0 0 0 0%5D%2C %5B0 1 1 0 0 0 0 0 0 0%5D%2C %5B0 1 0 0 0 0 0 0 0 0%5D%2C %5B0 1 1 0 0 0 0 0 0 0%5D%2C %5B0 0 0 0 0 0 0 1 0 0%5D%2C %5B0 1 1 0 0 0 0 0 0 0%5D%2C %5B0 1 1 0 0 1 0 0 0 0%5D%2C %5B0 0 0 0 0 1 0 0 0 0%5D%2C %5B0 0 1 0 0 1 0 0 0 0%5D%2C %5B0 0 0 0 0 0 0 0 0 1%5D%2C %5B0 1 0 0 0 0 0 0 0 0%5D%2C %5B0 0 1 0 0 0 0 0 0 0%5D%2C %5B0 0 0 0 0 0 1 0 0 0%5D%2C %5B0 0 0 0 0 1 0 0 0 0%5D%2C %5B0 1 0 0 0 0 0 0 0 0%5D%2C %5B0 1 0 0 0 0 0 0 0 0%5D%2C %5B0 0 1 0 0 0 0 0 0 0%5D%2C %5B0 1 0 0 0 0 0 0 0 0%5D%2C %5B0 1 0 0 0 0 0 0 0 0%5D%2C %5B0 0 0 0 0 0 0 1 0 0%5D%2C %5B0 1 0 0 0 0 0 0 0 0%5D%2C %5B0 0 1 0 0 0 0 0 0 0%5D%2C %5B0 1 0 0 0 0 0 0 0 0%5D%2C %5B0 1 0 0 0 0 0 0 0 0%5D%2C %5B0 0 1 0 0 0 0 0 0 0%5D%2C %5B0 1 0 0 0 0 0 0 0 0%5D%2C %5B0 0 1 0 0 0 0 0 0 0%5D%2C %5B0 1 0 0 0 0 0 0 0 0%5D%2C %5B0 1 1 0 0 0 0 0 0 0%5D%2C %5B0 0 1 0 0 0 0 0 0 0%5D%2C %5B0 0 1 0 0 0 0 0 0 0%5D%2C %5B0 0 1 0 0 0 0 1 0 0%5D%2C %5B0 0 1 0 0 0 0 0 0 0%5D%2C %5B0 0 1 0 0 0 1 1 0 0%5D%2C %5B1 0 0 0 0..." isContainer="True" shape="(1680, 10)" />
<var name="y_eda" type="ndarray" qualifier="numpy" value="%5B%5B1 1 0 0 1 0 0 0 0 0%5D%2C %5B0 0 0 0 0 1 0 0 0 0%5D%2C %5B0 0 1 0 0 0 0 0 0 0%5D%2C %5B0 1 0 0 0 0 0 0 0 0%5D%2C %5B0 0 0 0 0 0 0 1 0 0%5D%2C %5B0 1 0 0 0 0 0 0 0 0%5D%2C %5B0 1 0 0 0 0 0 0 0 0%5D%2C %5B0 1 0 0 0 0 0 0 0 0%5D%2C %5B0 1 0 0 0 1 0 0 0 0%5D%2C %5B1 0 0 0 0 0 0 0 0 0%5D%2C %5B0 1 1 0 0 0 0 0 0 0%5D%2C %5B0 1 0 0 0 0 0 0 0 0%5D%2C %5B0 1 1 0 0 0 0 0 0 0%5D%2C %5B0 0 0 0 0 0 0 1 0 0%5D%2C %5B0 1 1 0 0 0 0 0 0 0%5D%2C %5B0 1 1 0 0 1 0 0 0 0%5D%2C %5B0 0 0 0 0 1 0 0 0 0%5D%2C %5B0 0 1 0 0 1 0 0 0 0%5D%2C %5B0 0 0 0 0 0 0 0 0 1%5D%2C %5B0 1 0 0 0 0 0 0 0 0%5D%2C %5B0 0 1 0 0 0 0 0 0 0%5D%2C %5B0 0 0 0 0 0 1 0 0 0%5D%2C %5B0 0 0 0 0 1 0 0 0 0%5D%2C %5B0 1 0 0 0 0 0 0 0 0%5D%2C %5B0 1 0 0 0 0 0 0 0 0%5D%2C %5B0 0 1 0 0 0 0 0 0 0%5D%2C %5B0 1 0 0 0 0 0 0 0 0%5D%2C %5B0 1 0 0 0 0 0 0 0 0%5D%2C %5B0 0 0 0 0 0 0 1 0 0%5D%2C %5B0 1 0 0 0 0 0 0 0 0%5D%2C %5B0 0 1 0 0 0 0 0 0 0%5D%2C %5B0 1 0 0 0 0 0 0 0 0%5D%2C %5B0 1 0 0 0 0 0 0 0 0%5D%2C %5B0 0 1 0 0 0 0 0 0 0%5D%2C %5B0 1 0 0 0 0 0 0 0 0%5D%2C %5B0 0 1 0 0 0 0 0 0 0%5D%2C %5B0 1 0 0 0 0 0 0 0 0%5D%2C %5B0 1 1 0 0 0 0 0 0 0%5D%2C %5B0 0 1 0 0 0 0 0 0 0%5D%2C %5B0 0 1 0 0 0 0 0 0 0%5D%2C %5B0 0 1 0 0 0 0 1 0 0%5D%2C %5B0 0 1 0 0 0 0 0 0 0%5D%2C %5B0 0 1 0 0 0 1 1 0 0%5D%2C %5B1 0 0 0 0..." isContainer="True" shape="(1680, 10)" />
<var name="y_eda_df" type="DataFrame" qualifier="pandas.core.frame" value="Agriculture  Economy-wide  Energy  Health  Industry  LULUCF  %5C %5B0               1             1       0       0         1       0   %5D %5B1               0             0       0       0         0       1   %5D %5B2               0             0       1       0         0       0   %5D %5B3               0             1       0       0         0       0   %5D %5B4               0             0       0       0         0       0   %5D %5B...           ...           ...     ...     ...       ...     ...   %5D %5B1675            0             0       1       1         0       0   %5D %5B1676            0             0       0       0         0       0   %5D %5B1677            0             0       1       0         0       1   %5D %5B1678            0             0       1       0         0       0   %5D %5B1679            0             0       0       0         0       0   %5D %5B%5D %5B      Residential and Commercial  Transportation  Waste  Water  %5D %5B0                              0               0      0      0  %5D %5B1                              0         ...%5D" isContainer="True" shape="(1680, 10)" />
<var name="y_test" type="Series" qualifier="pandas.core.series" value="%281497%2C %27Energy%27%29 %281517%2C %27Economy-wide%27%29 %281244%2C %27Energy%27%29 %28249%2C %27Transportation%27%29 %28698%2C %27Energy%27%29 %281002%2C %27Economy-wide%27%29 %281757%2C %27Transportation%27%29 %28765%2C %27Energy%27%29 %281958%2C %27Energy%27%29 %281738%2C %27Economy-wide%27%29 %281091%2C %27Energy%27%29 %28893%2C %27Energy%27%29 %281328%2C %27LULUCF%27%29 %281869%2C %27Energy%27%29 %281257%2C %27Economy-wide%27%29 %28398%2C %27Transportation%27%29 %281326%2C %27Energy%27%29 %281550%2C %27Transportation%27%29 %28375%2C %27LULUCF%27%29 %28666%2C %27Energy%27%29 %281201%2C %27Energy%27%29 %281010%2C %27Energy%27%29 %281570%2C %27Transportation%27%29 %281199%2C %27Energy%27%29 %28979%2C %27Energy%27%29 %28112%2C %27Energy%27%29 %281928%2C %27Economy-wide%27%29 %28697%2C %27Residential and Commercial%27%29 %281112%2C %27Energy%27%29 %28583%2C %27LULUCF%27%29 %28484%2C %27Residential and Commercial%27%29 %281059%2C %27Energy%27%29 %281908%2C %27Energy%27%29 %28708%2C %27Economy-wide%27%29 %281953%2C %27Agriculture%27%29 %281214%2C %27Energy%27%29 %28438%2C %27Transportation%27%29 %28951%2C %27Energy%27%29 %281448%2C %27Transportation%27%29 %28762%2C %27Energy%27%29 %28795%2C %27Energy%27%29 %28918%2C %27Transportation%27%29 %281914%2C %27Energy%27%29 %281544%2C %27Agriculture%27%29 %28953%2C %27Economy-wide%27%29 %2895%2C %27Agriculture%27%29 %28700%2C %27LULUCF%27%29 %281222%2C %27Energy%27%29 %28294%2C %27Agriculture%27%29 %281100%2C %27Energy%27%29 %281217%2C %27Transportation%27%29 %281526%2C %27Transportation%27%29 %281041%2C %27Transportation%27%29 %281644%2C %27Energy%27%29 %2837%2C %27LULUCF%27%29 %28554%2C %27Energy%27%29 %281065%2C %27Energy%27%29 %2888%2C %27Energy%27%29 %281109%2C %27Energy%27%29 %28590%2C %27Energy%27%29 %28574%2C %27Energy%27%29 %28252%2C %27Agriculture%27%29 %28203%2C %27Water%27%29 %28165%2C %27LULUCF%27%29 %28619%2C %27Water%27%29 %281039%2C %27Economy-wide%27%29 %281237%2C %27Economy-wide%27%29 %28823%2C %27Energy%27%29 %28199%2C %27Energy%27%29 %28839%2C %27Energy%27%29 %281915%2C %27Energy%27%29 %281123%2C %27Economy-wide%27%29 %281489%2C %27Energy%27%29 %28964%2C %27Energy%27%29 %281139%2C %27Residential and Commercial%27%29 %28827%2C %27Health%27%29 %281725%2C %27Energy%27%29 %28247%2C %27Transportation%27%29 %281820%2C %27Transportation%27%29 %28232%2C %27Residential and Commercial%27%29 %28702%2C %27LULUCF%27%29 %281221%2C %27Transportation%27%29 %28602%2C %27Transportation%27%29 %28196%2C %27Transportation%27%29 %281624%2C %27Economy-wide%27%29 %28782%2C %27Economy-wide%27%29 %28145%2C %27Residential and Commercial%27%29 %28971%2C %27Energy%27%29 %28990%2C %27Energy%27%29 %28842%2C %27Energy%27%29 %281424%2C %27Economy-wide%27%29 %28502%2C %27Water%27%29 %28769%2C %27Economy-wide%27%29 %2819%2C %27Agriculture%27%29 %28671%2C %27Transportation%27%29 %2866%2C %27Energy%27%29 %281147%2C %27LULUCF%27%29 %281950%2C %27Economy-wide%27%29 %281656%2C %27Economy-wide%27%29 %28725%2C %27Energy%27%29" isContainer="True" shape="(249,)" />
<var name="y_train" type="Series" qualifier="pandas.core.series" value="%28946%2C %27Energy%27%29 %281077%2C %27Energy%27%29 %28753%2C %27Energy%27%29 %28917%2C %27Energy%27%29 %28966%2C %27Economy-wide%27%29 %281563%2C %27Transportation%27%29 %28420%2C %27Transportation%27%29 %28470%2C %27Transportation%27%29 %28776%2C %27Energy%27%29 %28347%2C %27Transportation%27%29 %28329%2C %27LULUCF%27%29 %281004%2C %27Energy%27%29 %281151%2C %27Economy-wide%27%29 %281780%2C %27Transportation%27%29 %281745%2C %27Economy-wide%27%29 %281115%2C %27LULUCF%27%29 %2842%2C %27Water%27%29 %28130%2C %27Energy%27%29 %28125%2C %27LULUCF%27%29 %28607%2C %27Energy%27%29 %281670%2C %27Transportation%27%29 %281541%2C %27Energy%27%29 %281102%2C %27Energy%27%29 %28631%2C %27Energy%27%29 %281225%2C %27Energy%27%29 %281641%2C %27Transportation%27%29 %28630%2C %27Energy%27%29 %281308%2C %27Energy%27%29 %281319%2C %27LULUCF%27%29 %28774%2C %27Economy-wide%27%29 %281243%2C %27Energy%27%29 %281899%2C %27Energy%27%29 %2851%2C %27LULUCF%27%29 %281155%2C %27Energy%27%29 %28771%2C %27Energy%27%29 %28904%2C %27Energy%27%29 %281189%2C %27Economy-wide%27%29 %28824%2C %27Energy%27%29 %281298%2C %27Transportation%27%29 %281209%2C %27Agriculture%27%29 %281335%2C %27Transportation%27%29 %281832%2C %27Energy%27%29 %2833%2C %27Transportation%27%29 %28764%2C %27Energy%27%29 %2863%2C %27Economy-wide%27%29 %28709%2C %27Economy-wide%27%29 %281291%2C %27Transportation%27%29 %281900%2C %27Energy%27%29 %281909%2C %27Transportation%27%29 %281044%2C %27Energy%27%29 %281579%2C %27Energy%27%29 %28680%2C %27Energy%27%29 %281743%2C %27Transportation%27%29 %28350%2C %27Energy%27%29 %28962%2C %27Energy%27%29 %28882%2C %27Industry%27%29 %281145%2C %27Industry%27%29 %28807%2C %27Energy%27%29 %28644%2C %27Energy%27%29 %281542%2C %27Transportation%27%29 %28956%2C %27Agriculture%27%29 %28580%2C %27LULUCF%27%29 %28246%2C %27Water%27%29 %281253%2C %27Energy%27%29 %28798%2C %27Energy%27%29 %28215%2C %27Water%27%29 %281150%2C %27Energy%27%29 %28650%2C %27Energy%27%29 %28790%2C %27Economy-wide%27%29 %28736%2C %27Energy%27%29 %28327%2C %27Agriculture%27%29 %281615%2C %27Energy%27%29 %28483%2C %27LULUCF%27%29 %28523%2C %27Transportation%27%29 %281566%2C %27Economy-wide%27%29 %28815%2C %27Energy%27%29 %28738%2C %27Energy%27%29 %283%2C %27LULUCF%27%29 %281927%2C %27Economy-wide%27%29 %28938%2C %27Economy-wide%27%29 %281655%2C %27LULUCF%27%29 %281067%2C %27Energy%27%29 %28800%2C %27Economy-wide%27%29 %281501%2C %27Transportation%27%29 %28477%2C %27Transportation%27%29 %28719%2C %27Energy%27%29 %28989%2C %27LULUCF%27%29 %281013%2C %27Agriculture%27%29 %28794%2C %27Economy-wide%27%29 %28892%2C %27Health%27%29 %281302%2C %27Transportation%27%29 %28569%2C %27Economy-wide%27%29 %281508%2C %27Energy%27%29 %281491%2C %27LULUCF%27%29 %281729%2C %27Energy%27%29 %281393%2C %27LULUCF%27%29 %28786%2C %27Transportation%27%29 %281331%2C %27Transportation%27%29 %28859%2C %27Energy%27%29 %28863%2C %27Transportation%27%29" isContainer="True" shape="(503,)" />
</xml>
<xml><var name="AutoTokenizer" type="type" qualifier="builtins" value="%3Cclass %27transformers.models.auto.tokenization_auto.AutoTokenizer%27&gt;" isContainer="True" />
<var name="BATCH_SIZE" type="int" qualifier="builtins" value="16" />
<var name="ClassifierChain" type="type" qualifier="builtins" value="%3Cclass %27skmultilearn.problem_transform.cc.ClassifierChain%27&gt;" isContainer="True" />
<var name="CountVectorizer" type="type" qualifier="builtins" value="%3Cclass %27sklearn.feature_extraction.text.CountVectorizer%27&gt;" isContainer="True" />
<var name="DataFrame" type="type" qualifier="builtins" value="%3Cclass %27pandas.core.frame.DataFrame%27&gt;" isContainer="True" />
<var name="DummyClassifier" type="type" qualifier="builtins" value="%3Cclass %27sklearn.dummy.DummyClassifier%27&gt;" isContainer="True" />
<var name="GradientBoostingClassifier" type="ABCMeta" qualifier="abc" value="%3Cclass %27sklearn.ensemble._gb.GradientBoostingClassifier%27&gt;" isContainer="True" />
<var name="GridSearchCV" type="ABCMeta" qualifier="abc" value="%3Cclass %27sklearn.model_selection._search.GridSearchCV%27&gt;" isContainer="True" />
<var name="HOLD_OUT_PERCENTAGE" type="int" qualifier="builtins" value="10" />
<var name="HUGGINGFACE_CONFIG" type="str" qualifier="builtins" value="distilbert-base-cased" />
<var name="ITERATIVE_STRAT_ORDER" type="int" qualifier="builtins" value="1" />
<var name="In" type="list" qualifier="builtins" value="%5B%27%27%2C %22import sys%5Cn%5Cn%5Cn%5Cnget_ipython%28%29.run_line_magic%28%27load_ext%27%2C %27autoreload%27%29%5Cnget_ipython%28%29.run_line_magic%28%27autoreload%27%2C %272%27%29%22%2C %27from src.sklearn_utils import iter_train_test_split%2C simple_feature_engineering%5Cnfrom sklearn.ensemble import GradientBoostingClassifier%27%2C %27import pandas as pd%5Cnimport numpy as np%5Cnimport os%5Cnimport plotly.express as px%5Cnfrom skmultilearn.model_selection import IterativeStratification%5Cnfrom sklearn.model_selection import train_test_split%5Cnfrom sklearn.preprocessing import MultiLabelBinarizer%5Cnfrom sklearn.dummy import DummyClassifier%5Cnfrom sklearn.metrics import hamming_loss%5Cnimport seaborn as sns%5Cn%5Cnfrom sklearn.feature_extraction.text import TfidfVectorizer%5Cn%5Cnfrom yellowbrick.text import TSNEVisualizer%5Cnfrom yellowbrick.datasets import load_hobbies%5Cn%23 import tensorflow_addons as tfa%5Cnfrom sklearn.metrics import hamming_loss%5Cn%5Cnfrom skmultilearn.problem_transform import ClassifierChain%5Cnfrom sklearn.metrics import hamming_loss%2C accuracy_score%2C make_scorer..." isContainer="True" shape="33" isIPythonHidden="True" />
<var name="IterativeStratification" type="ABCMeta" qualifier="abc" value="%3Cclass %27skmultilearn.model_selection.iterative_stratification.IterativeStratification%27&gt;" isContainer="True" />
<var name="KEEP_MOST_COMMON_LABELS" type="int" qualifier="builtins" value="10" />
<var name="Lasso" type="ABCMeta" qualifier="abc" value="%3Cclass %27sklearn.linear_model._coordinate_descent.Lasso%27&gt;" isContainer="True" />
<var name="MultiIndex" type="type" qualifier="builtins" value="%3Cclass %27pandas.core.indexes.multi.MultiIndex%27&gt;" isContainer="True" />
<var name="MultiLabelBinarizer" type="type" qualifier="builtins" value="%3Cclass %27sklearn.preprocessing._label.MultiLabelBinarizer%27&gt;" isContainer="True" />
<var name="MultinomialNB" type="ABCMeta" qualifier="abc" value="%3Cclass %27sklearn.naive_bayes.MultinomialNB%27&gt;" isContainer="True" />
<var name="Out" type="dict" qualifier="builtins" value="%7B5%3A %27/home/stefan/PycharmProjects/multi-label-classification-climate/notebooks%27%2C 7%3A    policy_id                       policy_title  %5C%0A0      10088     Circular economy promotion law   %0A1      10087                14th Five-Year Plan   %0A2      10046             National Forest Policy   %0A3      10044   Suriname National REDD%2B Strategy   %0A4      10042  Policy Development Plan 2017-2021   %0A%0A                                             sectors  %5C%0A0                  Industry%3BAgriculture%3BEconomy-wide   %0A1  Transportation%3BRural%3BLULUCF%3BEnergy%3BEconomy-wid...   %0A2                                             LULUCF   %0A3                                             LULUCF   %0A4                                       Economy-wide   %0A%0A                                    description_text  %0A0  This law promotes the development of a circula...  %0A1  The 14th Five Year Plan lays down the strategy...  %0A2  This document aims at protecting the country%27s...  %0A3  This document aims to protect Suriname%27s fores......" isContainer="True" shape="13" isIPythonHidden="True" />
<var name="Path" type="type" qualifier="builtins" value="%3Cclass %27pathlib.Path%27&gt;" isContainer="True" />
<var name="Pipeline" type="ABCMeta" qualifier="abc" value="%3Cclass %27sklearn.pipeline.Pipeline%27&gt;" isContainer="True" />
<var name="SEED" type="int" qualifier="builtins" value="42" />
<var name="TEST_SET_FRAC" type="float" qualifier="builtins" value="0.1" />
<var name="TRAIN_FRACTION" type="float" qualifier="builtins" value="0.9" />
<var name="TSNEVisualizer" type="type" qualifier="builtins" value="%3Cclass %27yellowbrick.text.tsne.TSNEVisualizer%27&gt;" isContainer="True" />
<var name="TextFeatureEngineering" type="type" qualifier="builtins" value="%3Cclass %27src.sklearn_utils.TextFeatureEngineering%27&gt;" isContainer="True" />
<var name="TfidfVectorizer" type="type" qualifier="builtins" value="%3Cclass %27sklearn.feature_extraction.text.TfidfVectorizer%27&gt;" isContainer="True" />
<var name="Tuple" type="_TupleType" qualifier="typing" value="typing.Tuple" isContainer="True" />
<var name="X" type="DataFrame" qualifier="pandas.core.frame" value="policy_id                                       policy_title  %5C %5B0         10088                     Circular economy promotion law   %5D %5B3         10044                   Suriname National REDD%2B Strategy   %5D %5B5         10049                               Energy Strategy 2050   %5D %5B6         10051                   Long-Term Climate Strategy%2C 2021   %5D %5B9         10054  Environmentally Sustainable Transport System P...   %5D %5B...         ...                                                ...   %5D %5B1955       8835  National Climate Change Strategy and Action Pl...   %5D %5B1956       9110                 National Policy for Climate Change   %5D %5B1957       9191  Presidential Decree 7/2019 establishing the na...   %5D %5B1958       8889  Act No. 28 of 1972 concerning nuclear energy a...   %5D %5B1959       8887  Natural Hazards Compensation Act %28No. 59 of 2014%29   %5D %5B%5D %5B                                       description_text  %5C%5D %5B0     This law promotes the development of a circula...   %5D %5B3     This document aims to protect Surin...%5D" isContainer="True" shape="(1680, 14)" />
<var name="X_test" type="DataFrame" qualifier="pandas.core.frame" value="description_text  %5C %5B1497  The Enemalta %28Transfer of Assets%2C Rights%2C Liab...   %5D %5B1517  The National Climate Change Policy%2C published ...   %5D %5B1244  This document sets the remuneration framework ...   %5D %5B249   This document sets the government%27s National T...   %5D %5B698   This document sets the government%27s energy pol...   %5D %5B...                                                 ...   %5D %5B1704  The goal of this regulation is to grant financ...   %5D %5B598   This law commits Ireland%27s national treasury t...   %5D %5B1533  The Democratic Republic of Congo%27s Disaster Re...   %5D %5B1903  The Small and Medium-sized Power Plant Act was...   %5D %5B240   The Strategic Investment Framework for Environ...   %5D %5B%5D %5B                                           policy_title  %5C%5D %5B1497  ACT No. XXXIV of 2014 and associated feed-in t...   %5D %5B1517            Myanmar National Climate Change Policy    %5D %5B1244  Royal Decree 960/2020 regulating the economic ...   %5D %5B249   National Transport Plan 2018-2029 %28Meld. St. 3......%5D" isContainer="True" shape="(249, 3)" />
<var name="X_train" type="DataFrame" qualifier="pandas.core.frame" value="description_text  %5C %5B946   This Act establishes the Energy Market Authori...   %5D %5B1077  This Act creates the Energy and Climate Fund. ...   %5D %5B753   This Strategy%2C developed in partnership with U...   %5D %5B917   Energy efficiency labelling requirements are s...   %5D %5B966   The law provided a legal framework to set up a...   %5D %5B...                                                 ...   %5D %5B220   South Africa%27s Sectoral Cold Spell Management ...   %5D %5B422   The Energy Efficiency Action Plan 2011%3F2020 le...   %5D %5B789   This law states that the State shall provide t...   %5D %5B1125  The Strategy aims to develop a sustainable ene...   %5D %5B404   The main objectives of Law 1391-V are to%3A %5Cn- ...   %5D %5B%5D %5B                                           policy_title  %5C%5D %5B946   Energy Market Authority of Singapore Act %28Chap...   %5D %5B1077                 Energy and Climate Fund Act %28EKFG%29   %5D %5B753   Decentralized Rural Electrification Strategy %28...   %5D %5B917   Energy Resources Regulations %28Energy labeling ......%5D" isContainer="True" shape="(503, 3)" />
<var name="_" type="dict" qualifier="builtins" value="%7B%27clf__classifier__n_estimators%27%3A 100%7D" isContainer="True" shape="1" isIPythonHidden="True" />
<var name="_11" type="DataFrame" qualifier="pandas.core.frame" value="num_labels  cumulative_positive_labels  %5C %5BEnergy                                1143                        1143   %5D %5BTransportation                         761                        1904   %5D %5BLULUCF                                 398                        2302   %5D %5BEconomy-wide                           366                        2668   %5D %5BResidential and Commercial             351                        3019   %5D %5BAgriculture                            305                        3324   %5D %5BWater                                  297                        3621   %5D %5BIndustry                               238                        3859   %5D %5BWaste                                  177                        4036   %5D %5BHealth                                 158                        4194   %5D %5BEnvironment                            127                        4321   %5D %5BUrban                                   73                        4394   %5D %5BBuildings                             ...%5D" isContainer="True" shape="(23, 3)" isIPythonHidden="True" />
<var name="_12" type="Figure" qualifier="plotly.graph_objs._figure" value="Figure%28%7B%0A    %27data%27%3A %5B%7B%27alignmentgroup%27%3A %27True%27%2C%0A              %27hovertemplate%27%3A %27index=%25%7Bx%7D%3Cbr&gt;num_labels=%25%7By%7D%3Cextra&gt;%3C/extra&gt;%27%2C%0A              %27legendgroup%27%3A %27%27%2C%0A              %27marker%27%3A %7B%27color%27%3A %27%23636efa%27%2C %27pattern%27%3A %7B%27shape%27%3A %27%27%7D%7D%2C%0A              %27name%27%3A %27%27%2C%0A              %27offsetgroup%27%3A %27%27%2C%0A              %27orientation%27%3A %27v%27%2C%0A              %27showlegend%27%3A False%2C%0A              %27textposition%27%3A %27auto%27%2C%0A              %27type%27%3A %27bar%27%2C%0A              %27x%27%3A array%28%5B%27Energy%27%2C %27Transportation%27%2C %27LULUCF%27%2C %27Economy-wide%27%2C%0A                          %27Residential and Commercial%27%2C %27Agriculture%27%2C %27Water%27%2C %27Industry%27%2C%0A                          %27Waste%27%2C %27Health%27%2C %27Environment%27%2C %27Urban%27%2C %27Buildings%27%2C %27Tourism%27%2C%0A                          %27Social development%27%2C %27Disaster Risk Management %28Drm%29%27%2C %27Coastal zones%27%2C%0A                          %27Rural%27%2C %27Adaptation%27%2C %27Cross Cutting Area%27%2C %27Public Sector%27%2C %27Other%27%2C%0A                          %27Finance%27%5D%2C dtype=object%29%2C%0A              %27xaxis%27%3A %27x%27%2C%0A              %27y%27%3A array%28%5B1143..." isContainer="True" isIPythonHidden="True" />
<var name="_13" type="AxesSubplot" qualifier="matplotlib.axes._subplots" value="AxesSubplot%280.125%2C0.125%3B0.62x0.755%29" isContainer="True" isIPythonHidden="True" />
<var name="_14" type="Figure" qualifier="plotly.graph_objs._figure" value="Figure%28%7B%0A    %27data%27%3A %5B%7B%27alignmentgroup%27%3A %27True%27%2C%0A              %27bingroup%27%3A %27x%27%2C%0A              %27hovertemplate%27%3A %27variable=sectors_list%3Cbr&gt;value=%25%7Bx%7D%3Cbr&gt;count=%25%7By%7D%3Cextra&gt;%3C/extra&gt;%27%2C%0A              %27legendgroup%27%3A %27sectors_list%27%2C%0A              %27marker%27%3A %7B%27color%27%3A %27%23636efa%27%2C %27pattern%27%3A %7B%27shape%27%3A %27%27%7D%7D%2C%0A              %27name%27%3A %27sectors_list%27%2C%0A              %27offsetgroup%27%3A %27sectors_list%27%2C%0A              %27orientation%27%3A %27v%27%2C%0A              %27showlegend%27%3A True%2C%0A              %27type%27%3A %27histogram%27%2C%0A              %27x%27%3A array%28%5B3%2C 6%2C 1%2C ...%2C 5%2C 1%2C 1%5D%29%2C%0A              %27xaxis%27%3A %27x%27%2C%0A              %27yaxis%27%3A %27y%27%7D%5D%2C%0A    %27layout%27%3A %7B%27barmode%27%3A %27relative%27%2C%0A               %27legend%27%3A %7B%27title%27%3A %7B%27text%27%3A %27variable%27%7D%2C %27tracegroupgap%27%3A 0%7D%2C%0A               %27template%27%3A %27...%27%2C%0A               %27title%27%3A %7B%27text%27%3A %27num labels per instance%27%7D%2C%0A               %27xaxis%27%3A %7B%27anchor%27%3A %27y%27%2C %27domain%27%3A %5B0.0%2C 1.0%5D%2C %27title%27%3A %7B%27text%27%3A %27value%27%7D%7D%2C%0A               %27yaxis%27%3A %7B%27anchor%27%3A %27x%27%2C %27domain%27%3A %5B0.0%2C 1.0%5D%2C %27title%27%3A %7B%27text%27%3A %27count%27%7D%7D%7D%0A%7D%29" isContainer="True" isIPythonHidden="True" />
<var name="_15" type="Series" qualifier="pandas.core.series" value="%28%27Energy%27%2C 365%29 %28%27Economy-wide%27%2C 144%29 %28%27Transportation%3BEnergy%27%2C 117%29 %28%27Transportation%27%2C 112%29 %28%27Energy%3BResidential and Commercial%27%2C 63%29 %28%27LULUCF%27%2C 58%29 %28%27Transportation%3BEnergy%3BResidential and Commercial%27%2C 30%29 %28%27Agriculture%27%2C 26%29 %28%27Transportation%3BLULUCF%27%2C 24%29 %28%27Industry%3BEnergy%27%2C 24%29" isContainer="True" shape="(10,)" isIPythonHidden="True" />
<var name="_18" type="AxesSubplot" qualifier="matplotlib.axes._subplots" value="AxesSubplot%280.125%2C0.125%3B0.62x0.755%29" isContainer="True" isIPythonHidden="True" />
<var name="_24" type="Run" qualifier="wandb.sdk.wandb_run" value="%3Cwandb.sdk.wandb_run.Run object at 0x7fdea06a8400&gt;" isContainer="True" isIPythonHidden="True" />
<var name="_26" type="dict" qualifier="builtins" value="%7B%27memory%27%3A None%2C %27steps%27%3A %5B%28%27features%27%2C FeatureUnion%28transformer_list=%5B%28%27pipeline_text%27%2C%0A                                Pipeline%28steps=%5B%28%27select_text_col%27%2C%0A                                                 FunctionTransformer%28func=%3Cfunction select_col at 0x7fdf1be14310&gt;%29%29%2C%0A                                                %28%27tfidf%27%2C%0A                                                 TfidfVectorizer%28lowercase=False%2C%0A                                                                 max_df=0.5%2C%0A                                                                 stop_words=%27english%27%29%29%5D%29%29%2C%0A                               %28%27feature_engineering%27%2C%0A                                TextFeatureEngineering%28%29%29%5D%29%29%2C %28%27clf%27%2C ClassifierChain%28classifier=RandomForestClassifier%28%29%2C require_dense=%5BTrue%2C True%5D%29%29%5D%2C %27verbose%27%3A False%2C %27features%27%3A FeatureUnion%28transformer_list=%5B%28%27pipeline_text%27%2C%0A                                Pipeline%28steps=%5B%28%27select_text_col%27%2C%0A                                                 FunctionTran..." isContainer="True" shape="66" isIPythonHidden="True" />
<var name="_27" type="dict" qualifier="builtins" value="%7B%27classifier%27%3A RandomForestClassifier%28%29%2C %27classifier__bootstrap%27%3A True%2C %27classifier__ccp_alpha%27%3A 0.0%2C %27classifier__class_weight%27%3A None%2C %27classifier__criterion%27%3A %27gini%27%2C %27classifier__max_depth%27%3A None%2C %27classifier__max_features%27%3A %27auto%27%2C %27classifier__max_leaf_nodes%27%3A None%2C %27classifier__max_samples%27%3A None%2C %27classifier__min_impurity_decrease%27%3A 0.0%2C %27classifier__min_samples_leaf%27%3A 1%2C %27classifier__min_samples_split%27%3A 2%2C %27classifier__min_weight_fraction_leaf%27%3A 0.0%2C %27classifier__n_estimators%27%3A 100%2C %27classifier__n_jobs%27%3A None%2C %27classifier__oob_score%27%3A False%2C %27classifier__random_state%27%3A None%2C %27classifier__verbose%27%3A 0%2C %27classifier__warm_start%27%3A False%2C %27require_dense%27%3A %5BTrue%2C True%5D%2C %27order%27%3A None%7D" isContainer="True" shape="21" isIPythonHidden="True" />
<var name="_29" type="float64" qualifier="numpy" value="0.1382738095238095" shape="()" isIPythonHidden="True" />
<var name="_31" type="dict" qualifier="builtins" value="%7B%27clf__classifier__n_estimators%27%3A 100%7D" isContainer="True" shape="1" isIPythonHidden="True" />
<var name="_5" type="str" qualifier="builtins" value="/home/stefan/PycharmProjects/multi-label-classification-climate/notebooks" isIPythonHidden="True" />
<var name="_7" type="DataFrame" qualifier="pandas.core.frame" value="policy_id                       policy_title  %5C %5B0      10088     Circular economy promotion law   %5D %5B1      10087                14th Five-Year Plan   %5D %5B2      10046             National Forest Policy   %5D %5B3      10044   Suriname National REDD%2B Strategy   %5D %5B4      10042  Policy Development Plan 2017-2021   %5D %5B%5D %5B                                             sectors  %5C%5D %5B0                  Industry%3BAgriculture%3BEconomy-wide   %5D %5B1  Transportation%3BRural%3BLULUCF%3BEnergy%3BEconomy-wid...   %5D %5B2                                             LULUCF   %5D %5B3                                             LULUCF   %5D %5B4                                       Economy-wide   %5D %5B%5D %5B                                    description_text  %5D %5B0  This law promotes the development of a circula...  %5D %5B1  The 14th Five Year Plan lays down the strategy...  %5D %5B2  This document aims at protecting the country%27s...  %5D %5B3  This document aims to protect Suriname%27s fores...  %5D %5B4  This document lays out the country%27s developme...  %5D" isContainer="True" shape="(5, 4)" isIPythonHidden="True" />
<var name="__" type="float64" qualifier="numpy" value="0.1382738095238095" shape="()" isIPythonHidden="True" />
<var name="___" type="dict" qualifier="builtins" value="%7B%27classifier%27%3A RandomForestClassifier%28%29%2C %27classifier__bootstrap%27%3A True%2C %27classifier__ccp_alpha%27%3A 0.0%2C %27classifier__class_weight%27%3A None%2C %27classifier__criterion%27%3A %27gini%27%2C %27classifier__max_depth%27%3A None%2C %27classifier__max_features%27%3A %27auto%27%2C %27classifier__max_leaf_nodes%27%3A None%2C %27classifier__max_samples%27%3A None%2C %27classifier__min_impurity_decrease%27%3A 0.0%2C %27classifier__min_samples_leaf%27%3A 1%2C %27classifier__min_samples_split%27%3A 2%2C %27classifier__min_weight_fraction_leaf%27%3A 0.0%2C %27classifier__n_estimators%27%3A 100%2C %27classifier__n_jobs%27%3A None%2C %27classifier__oob_score%27%3A False%2C %27classifier__random_state%27%3A None%2C %27classifier__verbose%27%3A 0%2C %27classifier__warm_start%27%3A False%2C %27require_dense%27%3A %5BTrue%2C True%5D%2C %27order%27%3A None%7D" isContainer="True" shape="21" isIPythonHidden="True" />
<var name="__builtin__" type="module" qualifier="builtins" value="%3Cmodule %27builtins%27 %28built-in%29&gt;" isContainer="True" isIPythonHidden="True" />
<var name="__builtins__" type="module" qualifier="builtins" value="%3Cmodule %27builtins%27 %28built-in%29&gt;" isContainer="True" isIPythonHidden="True" />
<var name="__doc__" type="str" qualifier="builtins" value="Automatically created module for IPython interactive environment" isIPythonHidden="True" />
<var name="__loader__" type="NoneType" qualifier="builtins" value="None" isIPythonHidden="True" />
<var name="__name__" type="str" qualifier="builtins" value="__main__" isIPythonHidden="True" />
<var name="__package__" type="NoneType" qualifier="builtins" value="None" isIPythonHidden="True" />
<var name="__spec__" type="NoneType" qualifier="builtins" value="None" isIPythonHidden="True" />
<var name="_dh" type="list" qualifier="builtins" value="%5BPosixPath%28%27/home/stefan/PycharmProjects/multi-label-classification-climate/notebooks%27%29%5D" isContainer="True" shape="1" isIPythonHidden="True" />
<var name="_i" type="str" qualifier="builtins" value="grid.best_params_" isIPythonHidden="True" />
<var name="_i1" type="str" qualifier="builtins" value="import sys%0A%0A%0A%0A%25load_ext autoreload%0A%25autoreload 2" isIPythonHidden="True" />
<var name="_i10" type="str" qualifier="builtins" value="%23 Let%27s analyse the labels.%0Alabels_flattened=df%5B%27sectors_list%27%5D.explode%28%29%0Aunique_labels=labels_flattened.unique%28%29%0An_unique_labels=len%28unique_labels%29%0Aprint%28f%22There are %7Bn_unique_labels%7D classes with possible labels%3A %5Cn %7Bunique_labels%7D%22%29" isIPythonHidden="True" />
<var name="_i11" type="str" qualifier="builtins" value="%23 What are the cumulative totals for each label%3F%0Anum_instances_each_label=labels_flattened.value_counts%28%29%0Atotal_positive_labels=num_instances_each_label.sum%28%29%0Acumulative_sum=num_instances_each_label.cumsum%28%29%0Afraction_dataset_covered=cumulative_sum/total_positive_labels%0Adf_labels=pd.DataFrame%28%7B%27num_labels%27%3A num_instances_each_label%2C%0A                        %27cumulative_positive_labels%27%3A cumulative_sum%2C %0A                        %27cumulative_fraction_dataset_covered%27%3A fraction_dataset_covered%7D%29%0Adf_labels" isIPythonHidden="True" />
<var name="_i12" type="str" qualifier="builtins" value="px.bar%28df_labels%2C x=df_labels.index%2C y=%27num_labels%27%2C title=%27label distribution%27%29" isIPythonHidden="True" />
<var name="_i13" type="str" qualifier="builtins" value="%23 12 most under represented labels.%0Aunderrepresented_labels=df_labels%5B11%3A%5D.index%0A%0Amlb=MultiLabelBinarizer%28%29%0Ay = mlb.fit_transform%28df%5B%27sectors_list%27%5D%29%0A%23 Now let%27s look at the correlations between labels.%0Asns.heatmap%28pd.DataFrame%28y%2C columns=mlb.classes_%29.corr%28%29.loc%5Bunderrepresented_labels%5D%29" isIPythonHidden="True" />
<var name="_i14" type="str" qualifier="builtins" value="px.histogram%28df%5B%27sectors_list%27%5D.apply%28len%29%2C title=%27num labels per instance%27%29" isIPythonHidden="True" />
<var name="_i15" type="str" qualifier="builtins" value="%23 Let%27s also check if there are any labels with an especially high number of classes such that we could change this to a multi-class problem%0A%23 instead of a multi-label problem.%0Adf%5B%27sectors%27%5D.value_counts%28%29.head%2810%29" isIPythonHidden="True" />
<var name="_i16" type="str" qualifier="builtins" value="common_labels=df_labels.index%5B0%3AKEEP_MOST_COMMON_LABELS%5D%0A%0A%23 Only keep sectors in top n labels%0Adf%5B%27sectors_list%27%5D = df%5B%27sectors_list%27%5D.apply%28lambda x%3A %5Btag for tag in x if tag in common_labels%5D%29%0Adf_filtered = df.copy%28%29%5Bdf%5B%27sectors_list%27%5D.str.len%28%29&gt;0%5D%0Adf_filtered.drop%28columns=%27sectors%27%2Cinplace=True%29" isIPythonHidden="True" />
<var name="_i17" type="str" qualifier="builtins" value="y = mlb.fit_transform%28df_filtered%5B%27sectors_list%27%5D%29%0A%0A%23 Split%0Adf_eda%2C df_test%2C y_eda%2C y_test = iter_train_test_split%28%0A    df_filtered%2C y%2C train_size=1-TEST_SET_FRAC%29%0A%0A%0Ay_eda_df = pd.DataFrame%28y_eda%2C columns = mlb.classes_%29" isIPythonHidden="True" />
<var name="_i18" type="str" qualifier="builtins" value="%23 Now let%27s look at the correlations between labels.%0Asns.heatmap%28y_eda_df.corr%28%29%29" isIPythonHidden="True" />
<var name="_i19" type="str" qualifier="builtins" value="%23 Let%27s do a quick analysis of a bunch of statistics from the text columns. %0A%0Adf_eda=df_eda.copy%28%29 %23 Suppress warnings%0Adf_eda%5B%27full_text%27%5D= df_eda%5B%27policy_title%27%5D%2B%27%3A %27%2Bdf_eda%5B%27description_text%27%5D %23 Concat text columns%0A%0Atext_cols=%5B%27description_text%27%2C %27policy_title%27%2C %27full_text%27%5D%0Atext_cols_n_words = %5Bf%27%7Bx%7D_nwords%27 for x in text_cols%5D%0Afor col in text_cols%3A%0A    df_eda%5Bf%27%7Bcol%7D_nwords%27%5D=df_eda%5Bcol%5D.str.split%28%29.str.len%28%29%0A    %0Adef subplot_helper%28cols%3A list%29 -&gt; None%3A%0A    fig=make_subplots%283%2C1%2C subplot_titles=cols%29%0A    for i%2C col in enumerate%28cols%29%3A%0A        trace=go.Histogram%28x=df_eda%5Bcol%5D%29%0A        fig.append_trace%28trace%2C i%2B1%2C1%29%0A    %0A    fig.update_layout%28height=700%2C width=800%29%0A    fig.show%28%29%0A%0Asubplot_helper%28text_cols_n_words%29" isIPythonHidden="True" />
<var name="_i2" type="str" qualifier="builtins" value="from src.sklearn_utils import iter_train_test_split%2C simple_feature_engineering%0Afrom sklearn.ensemble import GradientBoostingClassifier" isIPythonHidden="True" />
<var name="_i20" type="str" qualifier="builtins" value="tokenizer = AutoTokenizer.from_pretrained%28%27distilbert-base-cased%27%29%0Afor col in text_cols%3A%0A    df_eda%5Bf%27%7Bcol%7D_tokens%27%5D=df_eda%5Bcol%5D.apply%28lambda x%3A tokenizer.tokenize%28x%29%29%0A    df_eda%5Bf%27%7Bcol%7D_ntokens%27%5D=df_eda%5Bf%27%7Bcol%7D_tokens%27%5D.str.len%28%29%0A%0Atext_cols_n_tokens = %5Bf%27%7Bx%7D_ntokens%27 for x in text_cols%5D%0Asubplot_helper%28text_cols_n_tokens%29" isIPythonHidden="True" />
<var name="_i21" type="str" qualifier="builtins" value="%23 Let%27s see what happens if we subset the dataset so that it only contains rows with a single label%0A%23 and visualise the separation between classes to get%0Adf_single_label=df_eda%5Bdf_eda%5B%27sectors_list%27%5D.apply%28len%29==1%5D%0AX%2C y = df_single_label%5B%5B%27description_text%27%2C%27policy_title%27%2C%27full_text%27%5D%5D%2C df_single_label%5B%27sectors_list%27%5D.apply%28lambda x%3A x%5B0%5D%29%0AX_train%2C X_test%2C y_train%2C y_test = train_test_split%28%0A     X%2C y%2C test_size=0.33%2C random_state=SEED%29%0A%0Adef tsne_plot%28X_train%2C X_test%2C y_train%2C y_test%2C col%3A str%29%3A%0A    %22%22%22%0A    Helper to plot tsne visualisations on train and test set for a tfidf transformed column.%0A    %22%22%22%0A    tfidf = TfidfVectorizer%28%29%0A    tfidf.fit_transform%28X_train%5Bcol%5D%29%0A    train_features = tfidf.transform%28X_train%5Bcol%5D%29%0A    test_features = tfidf.transform%28X_test%5Bcol%5D%29%0A    tsne_train = TSNEVisualizer%28decompose_by=24%2C title=f%27Train set%3A %7Bcol%7D%27%29%0A    tsne_train.fit%28train_features%2C y_train%29%0A    tsne_train.show%28%29%0A    tsne_test = TSNEVisualizer%28decompose_by=24%2C title=f%27Test set%3A %7Bcol%7D%27%29%0A    ts..." isIPythonHidden="True" />
<var name="_i22" type="str" qualifier="builtins" value="from src.sklearn_utils import TextFeatureEngineering%2C select_col%2C construct_pipeline" isIPythonHidden="True" />
<var name="_i23" type="str" qualifier="builtins" value="X%2C y = df_eda%2C mlb.fit_transform%28df_eda%5B%27sectors_list%27%5D%29" isIPythonHidden="True" />
<var name="_i24" type="str" qualifier="builtins" value="import wandb%0Awandb.init%28project=%22climate-multi-label-classification%22%2C entity=%22stefl14%22%29" isIPythonHidden="True" />
<var name="_i25" type="str" qualifier="builtins" value="def select_col%28df%2C col=%27full_text%27%29%3A %23 lambda%27s not picklable%2C hence this one liner.%0A    return df%5Bcol%5D%0A%0Afull_pipe_rf=construct_pipeline%28%29%0Afull_pipe_gb=construct_pipeline%28clf=GradientBoostingClassifier%28%29%29%0A%0A%23 cv_score=cross_val_score%28full_pipe_rf%2C X%2C y%2C scoring=make_scorer%28hamming_loss%29%2C cv=5%2C error_score=%27raise%27%29%0A%23%0A%23 %23 fit full_pipe and log the results.%0A%23 full_pipe_rf.fit%28X%2C y%29%0A%23 wandb.log%28%7B%27cv_score%27%3A cv_score.mean%28%29%2C %27cv_std%27%3A cv_score.std%28%29%7D%29" isIPythonHidden="True" />
<var name="_i26" type="str" qualifier="builtins" value="full_pipe_rf.get_params%28%29" isIPythonHidden="True" />
<var name="_i27" type="str" qualifier="builtins" value="full_pipe_rf.named_steps%5B%27clf%27%5D.get_params%28%29" isIPythonHidden="True" />
<var name="_i28" type="str" qualifier="builtins" value="from sklearn.model_selection import GridSearchCV%0A%0Aparam_grid_random_forest = %7B%27clf__classifier__n_estimators%27%3A%5B100%2C 200%5D%7D%0Agrid = GridSearchCV%28full_pipe_rf%2C param_grid=param_grid_random_forest%2C scoring=make_scorer%28hamming_loss%29%2C cv=5%2C error_score=%27raise%27%29%0A%23 Do grid search and log the results.%0Agrid.fit%28X%2C y%29%0Awandb.log%28%7B%27grid_score%27%3A grid.best_score_%2C %27grid_std%27%3A grid.cv_results_%5B%27std_test_score%27%5D%5Bgrid.best_index_%5D%7D%29" isIPythonHidden="True" />
<var name="_i29" type="str" qualifier="builtins" value="grid.best_score_" isIPythonHidden="True" />
<var name="_i3" type="str" qualifier="builtins" value="import pandas as pd%0Aimport numpy as np%0Aimport os%0Aimport plotly.express as px%0Afrom skmultilearn.model_selection import IterativeStratification%0Afrom sklearn.model_selection import train_test_split%0Afrom sklearn.preprocessing import MultiLabelBinarizer%0Afrom sklearn.dummy import DummyClassifier%0Afrom sklearn.metrics import hamming_loss%0Aimport seaborn as sns%0A%0Afrom sklearn.feature_extraction.text import TfidfVectorizer%0A%0Afrom yellowbrick.text import TSNEVisualizer%0Afrom yellowbrick.datasets import load_hobbies%0A%23 import tensorflow_addons as tfa%0Afrom sklearn.metrics import hamming_loss%0A%0Afrom skmultilearn.problem_transform import ClassifierChain%0Afrom sklearn.metrics import hamming_loss%2C accuracy_score%2C make_scorer%0Afrom sklearn.feature_extraction.text import CountVectorizer%2C TfidfVectorizer%0Afrom sklearn.naive_bayes import MultinomialNB%0Afrom sklearn.pipeline import Pipeline%0Afrom sklearn.linear_model import Lasso%0Afrom sklearn.model_selection import cross_val_score%0Afrom datetime import time%0A%0Afrom trans..." isIPythonHidden="True" />
<var name="_i30" type="str" qualifier="builtins" value="from sklearn.model_selection import GridSearchCV%0A%0Aparam_grid_random_forest = %7B%27clf__classifier__n_estimators%27%3A%5B100%2C 200%5D%7D%0Agrid = GridSearchCV%28full_pipe_rf%2C param_grid=param_grid_random_forest%2C scoring=make_scorer%28hamming_loss%29%2C cv=5%2C error_score=%27raise%27%29%0A%23 Do grid search and log the results.%0Agrid.fit%28X%2C y%29%0Awandb.log%28%7B%27grid_score%27%3A grid.best_score_%2C %27grid_std%27%3A grid.cv_results_%5B%27std_test_score%27%5D%5Bgrid.best_index_%5D%2C %27grid_params%27%3A grid.best_params_%7D%29" isIPythonHidden="True" />
<var name="_i31" type="str" qualifier="builtins" value="grid.best_params_" isIPythonHidden="True" />
<var name="_i32" type="str" qualifier="builtins" value="wandb.log%28%7B%27grid_score%27%3A grid.best_score_%2C %27grid_std%27%3A grid.cv_results_%5B%27std_test_score%27%5D%5Bgrid.best_index_%5D%2C %27grid_params%27%3A grid.best_params_%7D%29" isIPythonHidden="True" />
<var name="_i4" type="str" qualifier="builtins" value="def create_tokenized_ds%28%0A    X%2C y%2C text_column=%22description_text%22%2C model_name=%22bert-base-cased%22%2C batch_size=16%0A%29%3A%0A    y = np.array%28y%2C dtype=%22int32%22%29%0A    X = X%5Btext_column%5D%0A    tokens = tokenizer%28%0A        list%28X%29%2C%0A        padding=%22max_length%22%2C%0A        truncation=True%2C%0A        return_tensors=%22tf%22%2C%0A        return_token_type_ids=False%2C%0A    %29%0A    tokens_w_labels = tokens.copy%28%29%0A    tokens_w_labels%5B%22target%22%5D = y%0A    tf_dataset = tf.data.Dataset.from_tensor_slices%28%28dict%28tokens_w_labels%29%2C y%29%29%0A    tf_dataset = tf_dataset.shuffle%28len%28tf_dataset%29%29.batch%28batch_size%29%0A    return tf_dataset%0A%0A%0Aimport keras%0A%0AK = keras.backend%0A%0A%0Aclass ExponentialLearningRate%28keras.callbacks.Callback%29%3A%0A    def __init__%28self%2C factor%29%3A%0A        self.factor = factor%0A        self.rates = %5B%5D%0A        self.losses = %5B%5D%0A%0A    def on_batch_end%28self%2C batch%2C logs%29%3A%0A        self.rates.append%28K.get_value%28self.model.optimizer.learning_rate%29%29%0A        self.losses.append%28logs%5B%22loss%22%5D%29%0A        K.set_value%28%0A            self.model.optimizer.le..." isIPythonHidden="True" />
<var name="_i5" type="str" qualifier="builtins" value="os.getcwd%28%29" isIPythonHidden="True" />
<var name="_i6" type="str" qualifier="builtins" value="%23 Constants%0ASEED=42%0AHOLD_OUT_PERCENTAGE=10%0AITERATIVE_STRAT_ORDER=1%0AKEEP_MOST_COMMON_LABELS=10%0ABATCH_SIZE=16%0ATRAIN_FRACTION=0.9%0AHUGGINGFACE_CONFIG=%27distilbert-base-cased%27%0ATEST_SET_FRAC=.1" isIPythonHidden="True" />
<var name="_i7" type="str" qualifier="builtins" value="data_path = Path%28os.path.abspath%28%27%27%29%29.parent / %27data%27 / %27recruitment-task_1-full.csv%27%0A%0Adf=pd.read_csv%28%27/home/stefan/PycharmProjects/multi-label-classification-climate/data/recruitment-task_1-full.csv%27%29%0Adf.head%28%29" isIPythonHidden="True" />
<var name="_i8" type="str" qualifier="builtins" value="df.info%28%29" isIPythonHidden="True" />
<var name="_i9" type="str" qualifier="builtins" value="%23 Parse labels into a list.%0Adf%5B%27sectors_list%27%5D=df%5B%27sectors%27%5D.str.split%28%22%3B%22%29%0Adf=df%5B~df.description_text.duplicated%28%29%5D %23 Found a duplicated entry" isIPythonHidden="True" />
<var name="_ih" type="list" qualifier="builtins" value="%5B%27%27%2C %22import sys%5Cn%5Cn%5Cn%5Cnget_ipython%28%29.run_line_magic%28%27load_ext%27%2C %27autoreload%27%29%5Cnget_ipython%28%29.run_line_magic%28%27autoreload%27%2C %272%27%29%22%2C %27from src.sklearn_utils import iter_train_test_split%2C simple_feature_engineering%5Cnfrom sklearn.ensemble import GradientBoostingClassifier%27%2C %27import pandas as pd%5Cnimport numpy as np%5Cnimport os%5Cnimport plotly.express as px%5Cnfrom skmultilearn.model_selection import IterativeStratification%5Cnfrom sklearn.model_selection import train_test_split%5Cnfrom sklearn.preprocessing import MultiLabelBinarizer%5Cnfrom sklearn.dummy import DummyClassifier%5Cnfrom sklearn.metrics import hamming_loss%5Cnimport seaborn as sns%5Cn%5Cnfrom sklearn.feature_extraction.text import TfidfVectorizer%5Cn%5Cnfrom yellowbrick.text import TSNEVisualizer%5Cnfrom yellowbrick.datasets import load_hobbies%5Cn%23 import tensorflow_addons as tfa%5Cnfrom sklearn.metrics import hamming_loss%5Cn%5Cnfrom skmultilearn.problem_transform import ClassifierChain%5Cnfrom sklearn.metrics import hamming_loss%2C accuracy_score%2C make_scorer..." isContainer="True" shape="33" isIPythonHidden="True" />
<var name="_ii" type="str" qualifier="builtins" value="from sklearn.model_selection import GridSearchCV%0A%0Aparam_grid_random_forest = %7B%27clf__classifier__n_estimators%27%3A%5B100%2C 200%5D%7D%0Agrid = GridSearchCV%28full_pipe_rf%2C param_grid=param_grid_random_forest%2C scoring=make_scorer%28hamming_loss%29%2C cv=5%2C error_score=%27raise%27%29%0A%23 Do grid search and log the results.%0Agrid.fit%28X%2C y%29%0Awandb.log%28%7B%27grid_score%27%3A grid.best_score_%2C %27grid_std%27%3A grid.cv_results_%5B%27std_test_score%27%5D%5Bgrid.best_index_%5D%2C %27grid_params%27%3A grid.best_params_%7D%29" isIPythonHidden="True" />
<var name="_iii" type="str" qualifier="builtins" value="grid.best_score_" isIPythonHidden="True" />
<var name="_oh" type="dict" qualifier="builtins" value="%7B5%3A %27/home/stefan/PycharmProjects/multi-label-classification-climate/notebooks%27%2C 7%3A    policy_id                       policy_title  %5C%0A0      10088     Circular economy promotion law   %0A1      10087                14th Five-Year Plan   %0A2      10046             National Forest Policy   %0A3      10044   Suriname National REDD%2B Strategy   %0A4      10042  Policy Development Plan 2017-2021   %0A%0A                                             sectors  %5C%0A0                  Industry%3BAgriculture%3BEconomy-wide   %0A1  Transportation%3BRural%3BLULUCF%3BEnergy%3BEconomy-wid...   %0A2                                             LULUCF   %0A3                                             LULUCF   %0A4                                       Economy-wide   %0A%0A                                    description_text  %0A0  This law promotes the development of a circula...  %0A1  The 14th Five Year Plan lays down the strategy...  %0A2  This document aims at protecting the country%27s...  %0A3  This document aims to protect Suriname%27s fores......" isContainer="True" shape="13" isIPythonHidden="True" />
<var name="_pydevd_bundle" type="module" qualifier="builtins" value="%3Cmodule %27_pydevd_bundle%27 from %27/snap/pycharm-professional/290/plugins/python/helpers/pydev/_pydevd_bundle/__init__.py%27&gt;" isContainer="True" />
<var name="accuracy_score" type="function" qualifier="builtins" value="%3Cfunction accuracy_score at 0x7fdf48fbb8b0&gt;" isContainer="True" />
<var name="col" type="str" qualifier="builtins" value="full_text" />
<var name="common_labels" type="Index" qualifier="pandas.core.indexes.base" value="Index%28%5B%27Energy%27%2C %27Transportation%27%2C %27LULUCF%27%2C %27Economy-wide%27%2C%0A       %27Residential and Commercial%27%2C %27Agriculture%27%2C %27Water%27%2C %27Industry%27%2C%0A       %27Waste%27%2C %27Health%27%5D%2C%0A      dtype=%27object%27%29" isContainer="True" shape="(10,)" />
<var name="construct_pipeline" type="function" qualifier="builtins" value="%3Cfunction construct_pipeline at 0x7fdf1be14a60&gt;" isContainer="True" />
<var name="create_tokenized_ds" type="function" qualifier="builtins" value="%3Cfunction create_tokenized_ds at 0x7fdf196f1790&gt;" isContainer="True" />
<var name="cross_val_score" type="function" qualifier="builtins" value="%3Cfunction cross_val_score at 0x7fdf48eb9b80&gt;" isContainer="True" />
<var name="cumulative_sum" type="Series" qualifier="pandas.core.series" value="%28%27Energy%27%2C 1143%29 %28%27Transportation%27%2C 1904%29 %28%27LULUCF%27%2C 2302%29 %28%27Economy-wide%27%2C 2668%29 %28%27Residential and Commercial%27%2C 3019%29 %28%27Agriculture%27%2C 3324%29 %28%27Water%27%2C 3621%29 %28%27Industry%27%2C 3859%29 %28%27Waste%27%2C 4036%29 %28%27Health%27%2C 4194%29 %28%27Environment%27%2C 4321%29 %28%27Urban%27%2C 4394%29 %28%27Buildings%27%2C 4459%29 %28%27Tourism%27%2C 4511%29 %28%27Social development%27%2C 4556%29 %28%27Disaster Risk Management %28Drm%29%27%2C 4589%29 %28%27Coastal zones%27%2C 4617%29 %28%27Rural%27%2C 4636%29 %28%27Adaptation%27%2C 4647%29 %28%27Cross Cutting Area%27%2C 4656%29 %28%27Public Sector%27%2C 4664%29 %28%27Other%27%2C 4670%29 %28%27Finance%27%2C 4675%29" isContainer="True" shape="(23,)" />
<var name="data_path" type="PosixPath" qualifier="pathlib" value="/home/stefan/PycharmProjects/multi-label-classification-climate/data/recruitment-task_1-full.csv" isContainer="True" />
<var name="df" type="DataFrame" qualifier="pandas.core.frame" value="policy_id                                       policy_title  %5C %5B0         10088                     Circular economy promotion law   %5D %5B1         10087                                14th Five-Year Plan   %5D %5B2         10046                             National Forest Policy   %5D %5B3         10044                   Suriname National REDD%2B Strategy   %5D %5B4         10042                  Policy Development Plan 2017-2021   %5D %5B...         ...                                                ...   %5D %5B1955       8835  National Climate Change Strategy and Action Pl...   %5D %5B1956       9110                 National Policy for Climate Change   %5D %5B1957       9191  Presidential Decree 7/2019 establishing the na...   %5D %5B1958       8889  Act No. 28 of 1972 concerning nuclear energy a...   %5D %5B1959       8887  Natural Hazards Compensation Act %28No. 59 of 2014%29   %5D %5B%5D %5B                                                sectors  %5C%5D %5B0                     Industry%3BAgriculture%3BEconomy-wide   %5D %5B1     Transportation%3BRural%3BLULUCF%3BEnergy%3B...%5D" isContainer="True" shape="(1959, 5)" />
<var name="df_eda" type="DataFrame" qualifier="pandas.core.frame" value="policy_id                                       policy_title  %5C %5B0         10088                     Circular economy promotion law   %5D %5B3         10044                   Suriname National REDD%2B Strategy   %5D %5B5         10049                               Energy Strategy 2050   %5D %5B6         10051                   Long-Term Climate Strategy%2C 2021   %5D %5B9         10054  Environmentally Sustainable Transport System P...   %5D %5B...         ...                                                ...   %5D %5B1955       8835  National Climate Change Strategy and Action Pl...   %5D %5B1956       9110                 National Policy for Climate Change   %5D %5B1957       9191  Presidential Decree 7/2019 establishing the na...   %5D %5B1958       8889  Act No. 28 of 1972 concerning nuclear energy a...   %5D %5B1959       8887  Natural Hazards Compensation Act %28No. 59 of 2014%29   %5D %5B%5D %5B                                       description_text  %5C%5D %5B0     This law promotes the development of a circula...   %5D %5B3     This document aims to protect Surin...%5D" isContainer="True" shape="(1680, 14)" />
<var name="df_filtered" type="DataFrame" qualifier="pandas.core.frame" value="policy_id                                       policy_title  %5C %5B0         10088                     Circular economy promotion law   %5D %5B1         10087                                14th Five-Year Plan   %5D %5B2         10046                             National Forest Policy   %5D %5B3         10044                   Suriname National REDD%2B Strategy   %5D %5B4         10042                  Policy Development Plan 2017-2021   %5D %5B...         ...                                                ...   %5D %5B1955       8835  National Climate Change Strategy and Action Pl...   %5D %5B1956       9110                 National Policy for Climate Change   %5D %5B1957       9191  Presidential Decree 7/2019 establishing the na...   %5D %5B1958       8889  Act No. 28 of 1972 concerning nuclear energy a...   %5D %5B1959       8887  Natural Hazards Compensation Act %28No. 59 of 2014%29   %5D %5B%5D %5B                                       description_text  %5C%5D %5B0     This law promotes the development of a circula...   %5D %5B1     The 14th Five Year Plan lays down t...%5D" isContainer="True" shape="(1879, 4)" />
<var name="df_labels" type="DataFrame" qualifier="pandas.core.frame" value="num_labels  cumulative_positive_labels  %5C %5BEnergy                                1143                        1143   %5D %5BTransportation                         761                        1904   %5D %5BLULUCF                                 398                        2302   %5D %5BEconomy-wide                           366                        2668   %5D %5BResidential and Commercial             351                        3019   %5D %5BAgriculture                            305                        3324   %5D %5BWater                                  297                        3621   %5D %5BIndustry                               238                        3859   %5D %5BWaste                                  177                        4036   %5D %5BHealth                                 158                        4194   %5D %5BEnvironment                            127                        4321   %5D %5BUrban                                   73                        4394   %5D %5BBuildings                             ...%5D" isContainer="True" shape="(23, 3)" />
<var name="df_single_label" type="DataFrame" qualifier="pandas.core.frame" value="policy_id                                       policy_title  %5C %5B3         10044                   Suriname National REDD%2B Strategy   %5D %5B5         10049                               Energy Strategy 2050   %5D %5B6         10051                   Long-Term Climate Strategy%2C 2021   %5D %5B9         10054  Environmentally Sustainable Transport System P...   %5D %5B10        10061  Uganda Green Growth Development Strategy 2017/...   %5D %5B...         ...                                                ...   %5D %5B1950       8704  National Strategy for Adaptation to Climate Ch...   %5D %5B1953       8766  Priority Framework for Action%3A Climate Change ...   %5D %5B1956       9110                 National Policy for Climate Change   %5D %5B1958       8889  Act No. 28 of 1972 concerning nuclear energy a...   %5D %5B1959       8887  Natural Hazards Compensation Act %28No. 59 of 2014%29   %5D %5B%5D %5B                                       description_text      sectors_list  %5C%5D %5B3     This document aims to protect Suriname%27s fores...          %5BLULUCF%5D   %5D %5B5    ...%5D" isContainer="True" shape="(752, 14)" />
<var name="df_test" type="DataFrame" qualifier="pandas.core.frame" value="policy_id                                       policy_title  %5C %5B1        10087                                14th Five-Year Plan   %5D %5B2        10046                             National Forest Policy   %5D %5B4        10042                  Policy Development Plan 2017-2021   %5D %5B7        10052                 Switzerland%E2%80%99s climate policy%2C 2018   %5D %5B8        10053       Smart Grid Development Master Plan 2015-2036   %5D %5B..         ...                                                ...   %5D %5B549       9133                     Law No. 293-Z on energy saving   %5D %5B552       9045                  Law No. 1136-XIV on energy saving   %5D %5B588       8784  Industrial Sector Plan for mitigation and Adap...   %5D %5B616       8687                              Pollution Control Act   %5D %5B760       4313          Second National Environmental Action Plan   %5D %5B%5D %5B                                      description_text  %5C%5D %5B1    The 14th Five Year Plan lays down the strategy...   %5D %5B2    This document aims at protecting the country%27s... ...%5D" isContainer="True" shape="(199, 4)" />
<var name="exit" type="ZMQExitAutocall" qualifier="IPython.core.autocall" value="%3CIPython.core.autocall.ZMQExitAutocall object at 0x7fdf59b7a1c0&gt;" isContainer="True" isIPythonHidden="True" />
<var name="fraction_dataset_covered" type="Series" qualifier="pandas.core.series" value="%28%27Energy%27%2C 0.24449197860962568%29 %28%27Transportation%27%2C 0.4072727272727273%29 %28%27LULUCF%27%2C 0.4924064171122995%29 %28%27Economy-wide%27%2C 0.5706951871657754%29 %28%27Residential and Commercial%27%2C 0.6457754010695187%29 %28%27Agriculture%27%2C 0.7110160427807487%29 %28%27Water%27%2C 0.7745454545454545%29 %28%27Industry%27%2C 0.8254545454545454%29 %28%27Waste%27%2C 0.8633155080213903%29 %28%27Health%27%2C 0.8971122994652406%29 %28%27Environment%27%2C 0.9242780748663102%29 %28%27Urban%27%2C 0.9398930481283423%29 %28%27Buildings%27%2C 0.9537967914438503%29 %28%27Tourism%27%2C 0.9649197860962567%29 %28%27Social development%27%2C 0.9745454545454545%29 %28%27Disaster Risk Management %28Drm%29%27%2C 0.9816042780748663%29 %28%27Coastal zones%27%2C 0.9875935828877005%29 %28%27Rural%27%2C 0.9916577540106952%29 %28%27Adaptation%27%2C 0.9940106951871658%29 %28%27Cross Cutting Area%27%2C 0.9959358288770054%29 %28%27Public Sector%27%2C 0.9976470588235294%29 %28%27Other%27%2C 0.9989304812834224%29 %28%27Finance%27%2C 1.0%29" isContainer="True" shape="(23,)" />
<var name="full_pipe_gb" type="Pipeline" qualifier="sklearn.pipeline" value="Pipeline%28steps=%5B%28%27features%27%2C%0A                 FeatureUnion%28transformer_list=%5B%28%27pipeline_text%27%2C%0A                                                 Pipeline%28steps=%5B%28%27select_text_col%27%2C%0A                                                                  FunctionTransformer%28func=%3Cfunction select_col at 0x7fdf1be14310&gt;%29%29%2C%0A                                                                 %28%27tfidf%27%2C%0A                                                                  TfidfVectorizer%28lowercase=False%2C%0A                                                                                  max_df=0.5%2C%0A                                                                                  stop_words=%27english%27%29%29%5D%29%29%2C%0A                                                %28%27feature_engineering%27%2C%0A                                                 TextFeatureEngineering%28%29%29%5D%29%29%2C%0A                %28%27clf%27%2C%0A                 ClassifierChain%28classifier=GradientBoostingClassifier%28%29%2C%0A                                 require_dense=%5BTrue%2C True%5D%29..." isContainer="True" shape="2" />
<var name="full_pipe_rf" type="Pipeline" qualifier="sklearn.pipeline" value="Pipeline%28steps=%5B%28%27features%27%2C%0A                 FeatureUnion%28transformer_list=%5B%28%27pipeline_text%27%2C%0A                                                 Pipeline%28steps=%5B%28%27select_text_col%27%2C%0A                                                                  FunctionTransformer%28func=%3Cfunction select_col at 0x7fdf1be14310&gt;%29%29%2C%0A                                                                 %28%27tfidf%27%2C%0A                                                                  TfidfVectorizer%28lowercase=False%2C%0A                                                                                  max_df=0.5%2C%0A                                                                                  stop_words=%27english%27%29%29%5D%29%29%2C%0A                                                %28%27feature_engineering%27%2C%0A                                                 TextFeatureEngineering%28%29%29%5D%29%29%2C%0A                %28%27clf%27%2C%0A                 ClassifierChain%28classifier=RandomForestClassifier%28%29%2C%0A                                 require_dense=%5BTrue%2C True%5D%29%29%5D%29" isContainer="True" shape="2" />
<var name="get_ipython" type="method" qualifier="builtins" value="%3Cbound method InteractiveShell.get_ipython of %3Cipykernel.zmqshell.ZMQInteractiveShell object at 0x7fdf59b5e520&gt;&gt;" isContainer="True" isIPythonHidden="True" />
<var name="go" type="module" qualifier="builtins" value="%3Cmodule %27plotly.graph_objects%27 from %27/home/stefan/anaconda3/envs/multi-label-classification-climate/lib/python3.9/site-packages/plotly/graph_objects/__init__.py%27&gt;" isContainer="True" />
<var name="grid" type="GridSearchCV" qualifier="sklearn.model_selection._search" value="GridSearchCV%28cv=5%2C error_score=%27raise%27%2C%0A             estimator=Pipeline%28steps=%5B%28%27features%27%2C%0A                                        FeatureUnion%28transformer_list=%5B%28%27pipeline_text%27%2C%0A                                                                        Pipeline%28steps=%5B%28%27select_text_col%27%2C%0A                                                                                         FunctionTransformer%28func=%3Cfunction select_col at 0x7fdf1be14310&gt;%29%29%2C%0A                                                                                        %28%27tfidf%27%2C%0A                                                                                         TfidfVectorizer%28lowercase=False%2C%0A                                                                                                         max_df=0.5%2C%0A                                                                                                         stop_words=%27english%27%29%29%5D%29%29%2C%0A                                                                       %28%27feature_engi..." isContainer="True" />
<var name="hamming_loss" type="function" qualifier="builtins" value="%3Cfunction hamming_loss at 0x7fdf48fc2280&gt;" isContainer="True" />
<var name="iter_train_test_split" type="function" qualifier="builtins" value="%3Cfunction iter_train_test_split at 0x7fdf1cce23a0&gt;" isContainer="True" />
<var name="joblib" type="module" qualifier="builtins" value="%3Cmodule %27joblib%27 from %27/home/stefan/anaconda3/envs/multi-label-classification-climate/lib/python3.9/site-packages/joblib/__init__.py%27&gt;" isContainer="True" />
<var name="labels_flattened" type="Series" qualifier="pandas.core.series" value="%280%2C %27Industry%27%29 %280%2C %27Agriculture%27%29 %280%2C %27Economy-wide%27%29 %281%2C %27Transportation%27%29 %281%2C %27Rural%27%29 %281%2C %27LULUCF%27%29 %281%2C %27Energy%27%29 %281%2C %27Economy-wide%27%29 %281%2C %27Agriculture%27%29 %282%2C %27LULUCF%27%29 %283%2C %27LULUCF%27%29 %284%2C %27Economy-wide%27%29 %285%2C %27Energy%27%29 %286%2C %27Economy-wide%27%29 %287%2C %27Economy-wide%27%29 %288%2C %27Energy%27%29 %289%2C %27Transportation%27%29 %2810%2C %27Economy-wide%27%29 %2811%2C %27Economy-wide%27%29 %2812%2C %27Economy-wide%27%29 %2813%2C %27Economy-wide%27%29 %2814%2C %27Economy-wide%27%29 %2815%2C %27Economy-wide%27%29 %2816%2C %27Social development%27%29 %2816%2C %27LULUCF%27%29 %2816%2C %27Economy-wide%27%29 %2817%2C %27Industry%27%29 %2818%2C %27Economy-wide%27%29 %2819%2C %27Agriculture%27%29 %2821%2C %27Energy%27%29 %2821%2C %27Economy-wide%27%29 %2821%2C %27Adaptation%27%29 %2822%2C %27Health%27%29 %2823%2C %27Economy-wide%27%29 %2824%2C %27Economy-wide%27%29 %2825%2C %27Transportation%27%29 %2826%2C %27LULUCF%27%29 %2827%2C %27Economy-wide%27%29 %2828%2C %27Adaptation%27%29 %2829%2C %27Buildings%27%29 %2830%2C %27Tourism%27%29 %2831%2C %27Environment%27%29 %2831%2C %27Energy%27%29 %2831%2C %27Economy-wide%27%29 %2832%2C %27Economy-wide%27%29 %2833%2C %27Transportation%27%29 %2834%2C %27Energy%27%29 %2834%2C %27Economy-wide%27%29 %2835%2C %27Economy-wide%27%29 %2835%2C %27Coastal zones%27%29 %2835%2C %27Adaptation%27%29 %2836%2C %27LULUCF%27%29 %2836%2C %27Energy%27%29 %2836%2C %27Economy-wide%27%29 %2837%2C %27LULUCF%27%29 %2838%2C %27Environment%27%29 %2839%2C %27LULUCF%27%29 %2839%2C %27Energy%27%29 %2840%2C %27Industry%27%29 %2840%2C %27Health%27%29 %2840%2C %27Economy-wide%27%29 %2840%2C %27Coastal zones%27%29 %2840%2C %27Buildings%27%29 %2841%2C %27Urban%27%29 %2841%2C %27Energy%27%29 %2842%2C %27Water%27%29 %2842%2C %27Cross Cutting Area%27%29 %2843%2C %27Economy-wide%27%29 %2844%2C %27Transportation%27%29 %2844%2C %27Public Sector%27%29 %2844%2C %27Buildings%27%29 %2845%2C %27Energy%27%29 %2846%2C %27Urban%27%29 %2846%2C %27LULUCF%27%29 %2846%2C %27Agriculture%27%29 %2847%2C %27Environment%27%29 %2848%2C %27LULUCF%27%29 %2849%2C %27Energy%27%29 %2849%2C %27Economy-wide%27%29 %2850%2C %27Residential and Commercial%27%29 %2850%2C %27Buildings%27%29 %2851%2C %27LULUCF%27%29 %2852%2C %27Economy-wide%27%29 %2853%2C %27Economy-wide%27%29 %2854%2C %27Economy-wide%27%29 %2855%2C %27Energy%27%29 %2856%2C %27Energy%27%29 %2857%2C %27Economy-wide%27%29 %2858%2C %27Economy-wide%27%29 %2859%2C %27Economy-wide%27%29 %2860%2C %27Economy-wide%27%29 %2861%2C %27Economy-wide%27%29 %2862%2C %27Transportation%27%29 %2863%2C %27Economy-wide%27%29 %2864%2C %27Economy-wide%27%29 %2865%2C %27Energy%27%29 %2866%2C %27Energy%27%29 %2867%2C %27Economy-wide%27%29 %2868%2C %27Transportation%27%29 %2869%2C %27Economy-wide%27%29" isContainer="True" shape="(4675,)" />
<var name="load_hobbies" type="function" qualifier="builtins" value="%3Cfunction load_hobbies at 0x7fdf1b790700&gt;" isContainer="True" />
<var name="logger" type="RootLogger" qualifier="logging" value="%3CRootLogger root %28CRITICAL%29&gt;" isContainer="True" />
<var name="logging" type="module" qualifier="builtins" value="%3Cmodule %27logging%27 from %27/home/stefan/anaconda3/envs/multi-label-classification-climate/lib/python3.9/logging/__init__.py%27&gt;" isContainer="True" />
<var name="make_scorer" type="function" qualifier="builtins" value="%3Cfunction make_scorer at 0x7fdf48eac670&gt;" isContainer="True" />
<var name="make_subplots" type="function" qualifier="builtins" value="%3Cfunction make_subplots at 0x7fdf1a24e790&gt;" isContainer="True" />
<var name="math" type="module" qualifier="builtins" value="%3Cmodule %27math%27 from %27/home/stefan/anaconda3/envs/multi-label-classification-climate/lib/python3.9/lib-dynload/math.cpython-39-x86_64-linux-gnu.so%27&gt;" isContainer="True" />
<var name="mlb" type="MultiLabelBinarizer" qualifier="sklearn.preprocessing._label" value="MultiLabelBinarizer%28%29" isContainer="True" />
<var name="n_unique_labels" type="int" qualifier="builtins" value="23" />
<var name="np" type="module" qualifier="builtins" value="%3Cmodule %27numpy%27 from %27/home/stefan/anaconda3/envs/multi-label-classification-climate/lib/python3.9/site-packages/numpy/__init__.py%27&gt;" isContainer="True" />
<var name="num_instances_each_label" type="Series" qualifier="pandas.core.series" value="%28%27Energy%27%2C 1143%29 %28%27Transportation%27%2C 761%29 %28%27LULUCF%27%2C 398%29 %28%27Economy-wide%27%2C 366%29 %28%27Residential and Commercial%27%2C 351%29 %28%27Agriculture%27%2C 305%29 %28%27Water%27%2C 297%29 %28%27Industry%27%2C 238%29 %28%27Waste%27%2C 177%29 %28%27Health%27%2C 158%29 %28%27Environment%27%2C 127%29 %28%27Urban%27%2C 73%29 %28%27Buildings%27%2C 65%29 %28%27Tourism%27%2C 52%29 %28%27Social development%27%2C 45%29 %28%27Disaster Risk Management %28Drm%29%27%2C 33%29 %28%27Coastal zones%27%2C 28%29 %28%27Rural%27%2C 19%29 %28%27Adaptation%27%2C 11%29 %28%27Cross Cutting Area%27%2C 9%29 %28%27Public Sector%27%2C 8%29 %28%27Other%27%2C 6%29 %28%27Finance%27%2C 5%29" isContainer="True" shape="(23,)" />
<var name="os" type="module" qualifier="builtins" value="%3Cmodule %27os%27 from %27/home/stefan/anaconda3/envs/multi-label-classification-climate/lib/python3.9/os.py%27&gt;" isContainer="True" />
<var name="param_grid_random_forest" type="dict" qualifier="builtins" value="%7B%27clf__classifier__n_estimators%27%3A %5B100%2C 200%5D%7D" isContainer="True" shape="1" />
<var name="pd" type="module" qualifier="builtins" value="%3Cmodule %27pandas%27 from %27/home/stefan/anaconda3/envs/multi-label-classification-climate/lib/python3.9/site-packages/pandas/__init__.py%27&gt;" isContainer="True" />
<var name="plt" type="module" qualifier="builtins" value="%3Cmodule %27matplotlib.pyplot%27 from %27/home/stefan/anaconda3/envs/multi-label-classification-climate/lib/python3.9/site-packages/matplotlib/pyplot.py%27&gt;" isContainer="True" />
<var name="print_columns" type="function" qualifier="builtins" value="%3Cfunction print_columns at 0x7fde80473550&gt;" isContainer="True" />
<var name="px" type="module" qualifier="builtins" value="%3Cmodule %27plotly.express%27 from %27/home/stefan/anaconda3/envs/multi-label-classification-climate/lib/python3.9/site-packages/plotly/express/__init__.py%27&gt;" isContainer="True" />
<var name="pydev_jupyter_vars" type="module" qualifier="builtins" value="%3Cmodule %27pydev_jupyter_vars%27 from %27/snap/pycharm-professional/290/plugins/python/helpers-pro/jupyter_debug/pydev_jupyter_vars.py%27&gt;" isContainer="True" />
<var name="quit" type="ZMQExitAutocall" qualifier="IPython.core.autocall" value="%3CIPython.core.autocall.ZMQExitAutocall object at 0x7fdf59b7a1c0&gt;" isContainer="True" isIPythonHidden="True" />
<var name="remove_imported_pydev_package" type="function" qualifier="builtins" value="%3Cfunction remove_imported_pydev_package at 0x7fdf1cd905e0&gt;" isContainer="True" />
<var name="select_col" type="function" qualifier="builtins" value="%3Cfunction select_col at 0x7fdeab42f0d0&gt;" isContainer="True" />
<var name="simple_feature_engineering" type="function" qualifier="builtins" value="%3Cfunction simple_feature_engineering at 0x7fdf1cb21af0&gt;" isContainer="True" />
<var name="sns" type="module" qualifier="builtins" value="%3Cmodule %27seaborn%27 from %27/home/stefan/anaconda3/envs/multi-label-classification-climate/lib/python3.9/site-packages/seaborn/__init__.py%27&gt;" isContainer="True" />
<var name="subplot_helper" type="function" qualifier="builtins" value="%3Cfunction subplot_helper at 0x7fdf0eee9f70&gt;" isContainer="True" />
<var name="sys" type="module" qualifier="builtins" value="%3Cmodule %27sys%27 %28built-in%29&gt;" isContainer="True" />
<var name="text_cols" type="list" qualifier="builtins" value="%5B%27description_text%27%2C %27policy_title%27%2C %27full_text%27%5D" isContainer="True" shape="3" />
<var name="text_cols_n_tokens" type="list" qualifier="builtins" value="%5B%27description_text_ntokens%27%2C %27policy_title_ntokens%27%2C %27full_text_ntokens%27%5D" isContainer="True" shape="3" />
<var name="text_cols_n_words" type="list" qualifier="builtins" value="%5B%27description_text_nwords%27%2C %27policy_title_nwords%27%2C %27full_text_nwords%27%5D" isContainer="True" shape="3" />
<var name="time" type="type" qualifier="builtins" value="%3Cclass %27datetime.time%27&gt;" isContainer="True" />
<var name="tokenizer" type="DistilBertTokenizerFast" qualifier="transformers.models.distilbert.tokenization_distilbert_fast" value="PreTrainedTokenizerFast%28name_or_path=%27distilbert-base-cased%27%2C vocab_size=28996%2C model_max_len=512%2C is_fast=True%2C padding_side=%27right%27%2C truncation_side=%27right%27%2C special_tokens=%7B%27unk_token%27%3A %27%5BUNK%5D%27%2C %27sep_token%27%3A %27%5BSEP%5D%27%2C %27pad_token%27%3A %27%5BPAD%5D%27%2C %27cls_token%27%3A %27%5BCLS%5D%27%2C %27mask_token%27%3A %27%5BMASK%5D%27%7D%29" isContainer="True" shape="28996" />
<var name="total_positive_labels" type="int64" qualifier="numpy" value="4675" isContainer="True" shape="()" />
<var name="train_test_split" type="function" qualifier="builtins" value="%3Cfunction train_test_split at 0x7fdf1c8fb790&gt;" isContainer="True" />
<var name="tsne_plot" type="function" qualifier="builtins" value="%3Cfunction tsne_plot at 0x7fdf195f7dc0&gt;" isContainer="True" />
<var name="underrepresented_labels" type="Index" qualifier="pandas.core.indexes.base" value="Index%28%5B%27Urban%27%2C %27Buildings%27%2C %27Tourism%27%2C %27Social development%27%2C%0A       %27Disaster Risk Management %28Drm%29%27%2C %27Coastal zones%27%2C %27Rural%27%2C%0A       %27Adaptation%27%2C %27Cross Cutting Area%27%2C %27Public Sector%27%2C %27Other%27%2C%0A       %27Finance%27%5D%2C%0A      dtype=%27object%27%29" isContainer="True" shape="(12,)" />
<var name="unique_labels" type="ndarray" qualifier="numpy" value="%5B%27Industry%27 %27Agriculture%27 %27Economy-wide%27 %27Transportation%27 %27Rural%27 %27LULUCF%27%2C %27Energy%27 %27Social development%27 %27Adaptation%27 %27Health%27 %27Buildings%27 %27Tourism%27%2C %27Environment%27 %27Coastal zones%27 %27Urban%27 %27Water%27 %27Cross Cutting Area%27%2C %27Public Sector%27 %27Residential and Commercial%27 %27Finance%27 %27Waste%27 %27Other%27%2C %27Disaster Risk Management %28Drm%29%27%5D" isContainer="True" shape="(23,)" />
<var name="wandb" type="module" qualifier="builtins" value="%3Cmodule %27wandb%27 from %27/home/stefan/anaconda3/envs/multi-label-classification-climate/lib/python3.9/site-packages/wandb/__init__.py%27&gt;" isContainer="True" />
<var name="y" type="ndarray" qualifier="numpy" value="%5B%5B1 1 0 0 1 0 0 0 0 0%5D%2C %5B0 0 0 0 0 1 0 0 0 0%5D%2C %5B0 0 1 0 0 0 0 0 0 0%5D%2C %5B0 1 0 0 0 0 0 0 0 0%5D%2C %5B0 0 0 0 0 0 0 1 0 0%5D%2C %5B0 1 0 0 0 0 0 0 0 0%5D%2C %5B0 1 0 0 0 0 0 0 0 0%5D%2C %5B0 1 0 0 0 0 0 0 0 0%5D%2C %5B0 1 0 0 0 1 0 0 0 0%5D%2C %5B1 0 0 0 0 0 0 0 0 0%5D%2C %5B0 1 1 0 0 0 0 0 0 0%5D%2C %5B0 1 0 0 0 0 0 0 0 0%5D%2C %5B0 1 1 0 0 0 0 0 0 0%5D%2C %5B0 0 0 0 0 0 0 1 0 0%5D%2C %5B0 1 1 0 0 0 0 0 0 0%5D%2C %5B0 1 1 0 0 1 0 0 0 0%5D%2C %5B0 0 0 0 0 1 0 0 0 0%5D%2C %5B0 0 1 0 0 1 0 0 0 0%5D%2C %5B0 0 0 0 0 0 0 0 0 1%5D%2C %5B0 1 0 0 0 0 0 0 0 0%5D%2C %5B0 0 1 0 0 0 0 0 0 0%5D%2C %5B0 0 0 0 0 0 1 0 0 0%5D%2C %5B0 0 0 0 0 1 0 0 0 0%5D%2C %5B0 1 0 0 0 0 0 0 0 0%5D%2C %5B0 1 0 0 0 0 0 0 0 0%5D%2C %5B0 0 1 0 0 0 0 0 0 0%5D%2C %5B0 1 0 0 0 0 0 0 0 0%5D%2C %5B0 1 0 0 0 0 0 0 0 0%5D%2C %5B0 0 0 0 0 0 0 1 0 0%5D%2C %5B0 1 0 0 0 0 0 0 0 0%5D%2C %5B0 0 1 0 0 0 0 0 0 0%5D%2C %5B0 1 0 0 0 0 0 0 0 0%5D%2C %5B0 1 0 0 0 0 0 0 0 0%5D%2C %5B0 0 1 0 0 0 0 0 0 0%5D%2C %5B0 1 0 0 0 0 0 0 0 0%5D%2C %5B0 0 1 0 0 0 0 0 0 0%5D%2C %5B0 1 0 0 0 0 0 0 0 0%5D%2C %5B0 1 1 0 0 0 0 0 0 0%5D%2C %5B0 0 1 0 0 0 0 0 0 0%5D%2C %5B0 0 1 0 0 0 0 0 0 0%5D%2C %5B0 0 1 0 0 0 0 1 0 0%5D%2C %5B0 0 1 0 0 0 0 0 0 0%5D%2C %5B0 0 1 0 0 0 1 1 0 0%5D%2C %5B1 0 0 0 0..." isContainer="True" shape="(1680, 10)" />
<var name="y_eda" type="ndarray" qualifier="numpy" value="%5B%5B1 1 0 0 1 0 0 0 0 0%5D%2C %5B0 0 0 0 0 1 0 0 0 0%5D%2C %5B0 0 1 0 0 0 0 0 0 0%5D%2C %5B0 1 0 0 0 0 0 0 0 0%5D%2C %5B0 0 0 0 0 0 0 1 0 0%5D%2C %5B0 1 0 0 0 0 0 0 0 0%5D%2C %5B0 1 0 0 0 0 0 0 0 0%5D%2C %5B0 1 0 0 0 0 0 0 0 0%5D%2C %5B0 1 0 0 0 1 0 0 0 0%5D%2C %5B1 0 0 0 0 0 0 0 0 0%5D%2C %5B0 1 1 0 0 0 0 0 0 0%5D%2C %5B0 1 0 0 0 0 0 0 0 0%5D%2C %5B0 1 1 0 0 0 0 0 0 0%5D%2C %5B0 0 0 0 0 0 0 1 0 0%5D%2C %5B0 1 1 0 0 0 0 0 0 0%5D%2C %5B0 1 1 0 0 1 0 0 0 0%5D%2C %5B0 0 0 0 0 1 0 0 0 0%5D%2C %5B0 0 1 0 0 1 0 0 0 0%5D%2C %5B0 0 0 0 0 0 0 0 0 1%5D%2C %5B0 1 0 0 0 0 0 0 0 0%5D%2C %5B0 0 1 0 0 0 0 0 0 0%5D%2C %5B0 0 0 0 0 0 1 0 0 0%5D%2C %5B0 0 0 0 0 1 0 0 0 0%5D%2C %5B0 1 0 0 0 0 0 0 0 0%5D%2C %5B0 1 0 0 0 0 0 0 0 0%5D%2C %5B0 0 1 0 0 0 0 0 0 0%5D%2C %5B0 1 0 0 0 0 0 0 0 0%5D%2C %5B0 1 0 0 0 0 0 0 0 0%5D%2C %5B0 0 0 0 0 0 0 1 0 0%5D%2C %5B0 1 0 0 0 0 0 0 0 0%5D%2C %5B0 0 1 0 0 0 0 0 0 0%5D%2C %5B0 1 0 0 0 0 0 0 0 0%5D%2C %5B0 1 0 0 0 0 0 0 0 0%5D%2C %5B0 0 1 0 0 0 0 0 0 0%5D%2C %5B0 1 0 0 0 0 0 0 0 0%5D%2C %5B0 0 1 0 0 0 0 0 0 0%5D%2C %5B0 1 0 0 0 0 0 0 0 0%5D%2C %5B0 1 1 0 0 0 0 0 0 0%5D%2C %5B0 0 1 0 0 0 0 0 0 0%5D%2C %5B0 0 1 0 0 0 0 0 0 0%5D%2C %5B0 0 1 0 0 0 0 1 0 0%5D%2C %5B0 0 1 0 0 0 0 0 0 0%5D%2C %5B0 0 1 0 0 0 1 1 0 0%5D%2C %5B1 0 0 0 0..." isContainer="True" shape="(1680, 10)" />
<var name="y_eda_df" type="DataFrame" qualifier="pandas.core.frame" value="Agriculture  Economy-wide  Energy  Health  Industry  LULUCF  %5C %5B0               1             1       0       0         1       0   %5D %5B1               0             0       0       0         0       1   %5D %5B2               0             0       1       0         0       0   %5D %5B3               0             1       0       0         0       0   %5D %5B4               0             0       0       0         0       0   %5D %5B...           ...           ...     ...     ...       ...     ...   %5D %5B1675            0             0       1       1         0       0   %5D %5B1676            0             0       0       0         0       0   %5D %5B1677            0             0       1       0         0       1   %5D %5B1678            0             0       1       0         0       0   %5D %5B1679            0             0       0       0         0       0   %5D %5B%5D %5B      Residential and Commercial  Transportation  Waste  Water  %5D %5B0                              0               0      0      0  %5D %5B1                              0         ...%5D" isContainer="True" shape="(1680, 10)" />
<var name="y_test" type="Series" qualifier="pandas.core.series" value="%281497%2C %27Energy%27%29 %281517%2C %27Economy-wide%27%29 %281244%2C %27Energy%27%29 %28249%2C %27Transportation%27%29 %28698%2C %27Energy%27%29 %281002%2C %27Economy-wide%27%29 %281757%2C %27Transportation%27%29 %28765%2C %27Energy%27%29 %281958%2C %27Energy%27%29 %281738%2C %27Economy-wide%27%29 %281091%2C %27Energy%27%29 %28893%2C %27Energy%27%29 %281328%2C %27LULUCF%27%29 %281869%2C %27Energy%27%29 %281257%2C %27Economy-wide%27%29 %28398%2C %27Transportation%27%29 %281326%2C %27Energy%27%29 %281550%2C %27Transportation%27%29 %28375%2C %27LULUCF%27%29 %28666%2C %27Energy%27%29 %281201%2C %27Energy%27%29 %281010%2C %27Energy%27%29 %281570%2C %27Transportation%27%29 %281199%2C %27Energy%27%29 %28979%2C %27Energy%27%29 %28112%2C %27Energy%27%29 %281928%2C %27Economy-wide%27%29 %28697%2C %27Residential and Commercial%27%29 %281112%2C %27Energy%27%29 %28583%2C %27LULUCF%27%29 %28484%2C %27Residential and Commercial%27%29 %281059%2C %27Energy%27%29 %281908%2C %27Energy%27%29 %28708%2C %27Economy-wide%27%29 %281953%2C %27Agriculture%27%29 %281214%2C %27Energy%27%29 %28438%2C %27Transportation%27%29 %28951%2C %27Energy%27%29 %281448%2C %27Transportation%27%29 %28762%2C %27Energy%27%29 %28795%2C %27Energy%27%29 %28918%2C %27Transportation%27%29 %281914%2C %27Energy%27%29 %281544%2C %27Agriculture%27%29 %28953%2C %27Economy-wide%27%29 %2895%2C %27Agriculture%27%29 %28700%2C %27LULUCF%27%29 %281222%2C %27Energy%27%29 %28294%2C %27Agriculture%27%29 %281100%2C %27Energy%27%29 %281217%2C %27Transportation%27%29 %281526%2C %27Transportation%27%29 %281041%2C %27Transportation%27%29 %281644%2C %27Energy%27%29 %2837%2C %27LULUCF%27%29 %28554%2C %27Energy%27%29 %281065%2C %27Energy%27%29 %2888%2C %27Energy%27%29 %281109%2C %27Energy%27%29 %28590%2C %27Energy%27%29 %28574%2C %27Energy%27%29 %28252%2C %27Agriculture%27%29 %28203%2C %27Water%27%29 %28165%2C %27LULUCF%27%29 %28619%2C %27Water%27%29 %281039%2C %27Economy-wide%27%29 %281237%2C %27Economy-wide%27%29 %28823%2C %27Energy%27%29 %28199%2C %27Energy%27%29 %28839%2C %27Energy%27%29 %281915%2C %27Energy%27%29 %281123%2C %27Economy-wide%27%29 %281489%2C %27Energy%27%29 %28964%2C %27Energy%27%29 %281139%2C %27Residential and Commercial%27%29 %28827%2C %27Health%27%29 %281725%2C %27Energy%27%29 %28247%2C %27Transportation%27%29 %281820%2C %27Transportation%27%29 %28232%2C %27Residential and Commercial%27%29 %28702%2C %27LULUCF%27%29 %281221%2C %27Transportation%27%29 %28602%2C %27Transportation%27%29 %28196%2C %27Transportation%27%29 %281624%2C %27Economy-wide%27%29 %28782%2C %27Economy-wide%27%29 %28145%2C %27Residential and Commercial%27%29 %28971%2C %27Energy%27%29 %28990%2C %27Energy%27%29 %28842%2C %27Energy%27%29 %281424%2C %27Economy-wide%27%29 %28502%2C %27Water%27%29 %28769%2C %27Economy-wide%27%29 %2819%2C %27Agriculture%27%29 %28671%2C %27Transportation%27%29 %2866%2C %27Energy%27%29 %281147%2C %27LULUCF%27%29 %281950%2C %27Economy-wide%27%29 %281656%2C %27Economy-wide%27%29 %28725%2C %27Energy%27%29" isContainer="True" shape="(249,)" />
<var name="y_train" type="Series" qualifier="pandas.core.series" value="%28946%2C %27Energy%27%29 %281077%2C %27Energy%27%29 %28753%2C %27Energy%27%29 %28917%2C %27Energy%27%29 %28966%2C %27Economy-wide%27%29 %281563%2C %27Transportation%27%29 %28420%2C %27Transportation%27%29 %28470%2C %27Transportation%27%29 %28776%2C %27Energy%27%29 %28347%2C %27Transportation%27%29 %28329%2C %27LULUCF%27%29 %281004%2C %27Energy%27%29 %281151%2C %27Economy-wide%27%29 %281780%2C %27Transportation%27%29 %281745%2C %27Economy-wide%27%29 %281115%2C %27LULUCF%27%29 %2842%2C %27Water%27%29 %28130%2C %27Energy%27%29 %28125%2C %27LULUCF%27%29 %28607%2C %27Energy%27%29 %281670%2C %27Transportation%27%29 %281541%2C %27Energy%27%29 %281102%2C %27Energy%27%29 %28631%2C %27Energy%27%29 %281225%2C %27Energy%27%29 %281641%2C %27Transportation%27%29 %28630%2C %27Energy%27%29 %281308%2C %27Energy%27%29 %281319%2C %27LULUCF%27%29 %28774%2C %27Economy-wide%27%29 %281243%2C %27Energy%27%29 %281899%2C %27Energy%27%29 %2851%2C %27LULUCF%27%29 %281155%2C %27Energy%27%29 %28771%2C %27Energy%27%29 %28904%2C %27Energy%27%29 %281189%2C %27Economy-wide%27%29 %28824%2C %27Energy%27%29 %281298%2C %27Transportation%27%29 %281209%2C %27Agriculture%27%29 %281335%2C %27Transportation%27%29 %281832%2C %27Energy%27%29 %2833%2C %27Transportation%27%29 %28764%2C %27Energy%27%29 %2863%2C %27Economy-wide%27%29 %28709%2C %27Economy-wide%27%29 %281291%2C %27Transportation%27%29 %281900%2C %27Energy%27%29 %281909%2C %27Transportation%27%29 %281044%2C %27Energy%27%29 %281579%2C %27Energy%27%29 %28680%2C %27Energy%27%29 %281743%2C %27Transportation%27%29 %28350%2C %27Energy%27%29 %28962%2C %27Energy%27%29 %28882%2C %27Industry%27%29 %281145%2C %27Industry%27%29 %28807%2C %27Energy%27%29 %28644%2C %27Energy%27%29 %281542%2C %27Transportation%27%29 %28956%2C %27Agriculture%27%29 %28580%2C %27LULUCF%27%29 %28246%2C %27Water%27%29 %281253%2C %27Energy%27%29 %28798%2C %27Energy%27%29 %28215%2C %27Water%27%29 %281150%2C %27Energy%27%29 %28650%2C %27Energy%27%29 %28790%2C %27Economy-wide%27%29 %28736%2C %27Energy%27%29 %28327%2C %27Agriculture%27%29 %281615%2C %27Energy%27%29 %28483%2C %27LULUCF%27%29 %28523%2C %27Transportation%27%29 %281566%2C %27Economy-wide%27%29 %28815%2C %27Energy%27%29 %28738%2C %27Energy%27%29 %283%2C %27LULUCF%27%29 %281927%2C %27Economy-wide%27%29 %28938%2C %27Economy-wide%27%29 %281655%2C %27LULUCF%27%29 %281067%2C %27Energy%27%29 %28800%2C %27Economy-wide%27%29 %281501%2C %27Transportation%27%29 %28477%2C %27Transportation%27%29 %28719%2C %27Energy%27%29 %28989%2C %27LULUCF%27%29 %281013%2C %27Agriculture%27%29 %28794%2C %27Economy-wide%27%29 %28892%2C %27Health%27%29 %281302%2C %27Transportation%27%29 %28569%2C %27Economy-wide%27%29 %281508%2C %27Energy%27%29 %281491%2C %27LULUCF%27%29 %281729%2C %27Energy%27%29 %281393%2C %27LULUCF%27%29 %28786%2C %27Transportation%27%29 %281331%2C %27Transportation%27%29 %28859%2C %27Energy%27%29 %28863%2C %27Transportation%27%29" isContainer="True" shape="(503,)" />
</xml>
<xml><var name="AutoTokenizer" type="type" qualifier="builtins" value="%3Cclass %27transformers.models.auto.tokenization_auto.AutoTokenizer%27&gt;" isContainer="True" />
<var name="BATCH_SIZE" type="int" qualifier="builtins" value="16" />
<var name="ClassifierChain" type="type" qualifier="builtins" value="%3Cclass %27skmultilearn.problem_transform.cc.ClassifierChain%27&gt;" isContainer="True" />
<var name="CountVectorizer" type="type" qualifier="builtins" value="%3Cclass %27sklearn.feature_extraction.text.CountVectorizer%27&gt;" isContainer="True" />
<var name="DataFrame" type="type" qualifier="builtins" value="%3Cclass %27pandas.core.frame.DataFrame%27&gt;" isContainer="True" />
<var name="DummyClassifier" type="type" qualifier="builtins" value="%3Cclass %27sklearn.dummy.DummyClassifier%27&gt;" isContainer="True" />
<var name="GradientBoostingClassifier" type="ABCMeta" qualifier="abc" value="%3Cclass %27sklearn.ensemble._gb.GradientBoostingClassifier%27&gt;" isContainer="True" />
<var name="GridSearchCV" type="ABCMeta" qualifier="abc" value="%3Cclass %27sklearn.model_selection._search.GridSearchCV%27&gt;" isContainer="True" />
<var name="HOLD_OUT_PERCENTAGE" type="int" qualifier="builtins" value="10" />
<var name="HUGGINGFACE_CONFIG" type="str" qualifier="builtins" value="distilbert-base-cased" />
<var name="ITERATIVE_STRAT_ORDER" type="int" qualifier="builtins" value="1" />
<var name="In" type="list" qualifier="builtins" value="%5B%27%27%2C %22import sys%5Cn%5Cn%5Cn%5Cnget_ipython%28%29.run_line_magic%28%27load_ext%27%2C %27autoreload%27%29%5Cnget_ipython%28%29.run_line_magic%28%27autoreload%27%2C %272%27%29%22%2C %27from src.sklearn_utils import iter_train_test_split%2C simple_feature_engineering%5Cnfrom sklearn.ensemble import GradientBoostingClassifier%27%2C %27import pandas as pd%5Cnimport numpy as np%5Cnimport os%5Cnimport plotly.express as px%5Cnfrom skmultilearn.model_selection import IterativeStratification%5Cnfrom sklearn.model_selection import train_test_split%5Cnfrom sklearn.preprocessing import MultiLabelBinarizer%5Cnfrom sklearn.dummy import DummyClassifier%5Cnfrom sklearn.metrics import hamming_loss%5Cnimport seaborn as sns%5Cn%5Cnfrom sklearn.feature_extraction.text import TfidfVectorizer%5Cn%5Cnfrom yellowbrick.text import TSNEVisualizer%5Cnfrom yellowbrick.datasets import load_hobbies%5Cn%23 import tensorflow_addons as tfa%5Cnfrom sklearn.metrics import hamming_loss%5Cn%5Cnfrom skmultilearn.problem_transform import ClassifierChain%5Cnfrom sklearn.metrics import hamming_loss%2C accuracy_score%2C make_scorer..." isContainer="True" shape="34" isIPythonHidden="True" />
<var name="IterativeStratification" type="ABCMeta" qualifier="abc" value="%3Cclass %27skmultilearn.model_selection.iterative_stratification.IterativeStratification%27&gt;" isContainer="True" />
<var name="KEEP_MOST_COMMON_LABELS" type="int" qualifier="builtins" value="10" />
<var name="Lasso" type="ABCMeta" qualifier="abc" value="%3Cclass %27sklearn.linear_model._coordinate_descent.Lasso%27&gt;" isContainer="True" />
<var name="MultiIndex" type="type" qualifier="builtins" value="%3Cclass %27pandas.core.indexes.multi.MultiIndex%27&gt;" isContainer="True" />
<var name="MultiLabelBinarizer" type="type" qualifier="builtins" value="%3Cclass %27sklearn.preprocessing._label.MultiLabelBinarizer%27&gt;" isContainer="True" />
<var name="MultinomialNB" type="ABCMeta" qualifier="abc" value="%3Cclass %27sklearn.naive_bayes.MultinomialNB%27&gt;" isContainer="True" />
<var name="Out" type="dict" qualifier="builtins" value="%7B5%3A %27/home/stefan/PycharmProjects/multi-label-classification-climate/notebooks%27%2C 7%3A    policy_id                       policy_title  %5C%0A0      10088     Circular economy promotion law   %0A1      10087                14th Five-Year Plan   %0A2      10046             National Forest Policy   %0A3      10044   Suriname National REDD%2B Strategy   %0A4      10042  Policy Development Plan 2017-2021   %0A%0A                                             sectors  %5C%0A0                  Industry%3BAgriculture%3BEconomy-wide   %0A1  Transportation%3BRural%3BLULUCF%3BEnergy%3BEconomy-wid...   %0A2                                             LULUCF   %0A3                                             LULUCF   %0A4                                       Economy-wide   %0A%0A                                    description_text  %0A0  This law promotes the development of a circula...  %0A1  The 14th Five Year Plan lays down the strategy...  %0A2  This document aims at protecting the country%27s...  %0A3  This document aims to protect Suriname%27s fores......" isContainer="True" shape="13" isIPythonHidden="True" />
<var name="Path" type="type" qualifier="builtins" value="%3Cclass %27pathlib.Path%27&gt;" isContainer="True" />
<var name="Pipeline" type="ABCMeta" qualifier="abc" value="%3Cclass %27sklearn.pipeline.Pipeline%27&gt;" isContainer="True" />
<var name="SEED" type="int" qualifier="builtins" value="42" />
<var name="TEST_SET_FRAC" type="float" qualifier="builtins" value="0.1" />
<var name="TRAIN_FRACTION" type="float" qualifier="builtins" value="0.9" />
<var name="TSNEVisualizer" type="type" qualifier="builtins" value="%3Cclass %27yellowbrick.text.tsne.TSNEVisualizer%27&gt;" isContainer="True" />
<var name="TextFeatureEngineering" type="type" qualifier="builtins" value="%3Cclass %27src.sklearn_utils.TextFeatureEngineering%27&gt;" isContainer="True" />
<var name="TfidfVectorizer" type="type" qualifier="builtins" value="%3Cclass %27sklearn.feature_extraction.text.TfidfVectorizer%27&gt;" isContainer="True" />
<var name="Tuple" type="_TupleType" qualifier="typing" value="typing.Tuple" isContainer="True" />
<var name="X" type="DataFrame" qualifier="pandas.core.frame" value="policy_id                                       policy_title  %5C %5B0         10088                     Circular economy promotion law   %5D %5B3         10044                   Suriname National REDD%2B Strategy   %5D %5B5         10049                               Energy Strategy 2050   %5D %5B6         10051                   Long-Term Climate Strategy%2C 2021   %5D %5B9         10054  Environmentally Sustainable Transport System P...   %5D %5B...         ...                                                ...   %5D %5B1955       8835  National Climate Change Strategy and Action Pl...   %5D %5B1956       9110                 National Policy for Climate Change   %5D %5B1957       9191  Presidential Decree 7/2019 establishing the na...   %5D %5B1958       8889  Act No. 28 of 1972 concerning nuclear energy a...   %5D %5B1959       8887  Natural Hazards Compensation Act %28No. 59 of 2014%29   %5D %5B%5D %5B                                       description_text  %5C%5D %5B0     This law promotes the development of a circula...   %5D %5B3     This document aims to protect Surin...%5D" isContainer="True" shape="(1680, 14)" />
<var name="X_test" type="DataFrame" qualifier="pandas.core.frame" value="description_text  %5C %5B1497  The Enemalta %28Transfer of Assets%2C Rights%2C Liab...   %5D %5B1517  The National Climate Change Policy%2C published ...   %5D %5B1244  This document sets the remuneration framework ...   %5D %5B249   This document sets the government%27s National T...   %5D %5B698   This document sets the government%27s energy pol...   %5D %5B...                                                 ...   %5D %5B1704  The goal of this regulation is to grant financ...   %5D %5B598   This law commits Ireland%27s national treasury t...   %5D %5B1533  The Democratic Republic of Congo%27s Disaster Re...   %5D %5B1903  The Small and Medium-sized Power Plant Act was...   %5D %5B240   The Strategic Investment Framework for Environ...   %5D %5B%5D %5B                                           policy_title  %5C%5D %5B1497  ACT No. XXXIV of 2014 and associated feed-in t...   %5D %5B1517            Myanmar National Climate Change Policy    %5D %5B1244  Royal Decree 960/2020 regulating the economic ...   %5D %5B249   National Transport Plan 2018-2029 %28Meld. St. 3......%5D" isContainer="True" shape="(249, 3)" />
<var name="X_train" type="DataFrame" qualifier="pandas.core.frame" value="description_text  %5C %5B946   This Act establishes the Energy Market Authori...   %5D %5B1077  This Act creates the Energy and Climate Fund. ...   %5D %5B753   This Strategy%2C developed in partnership with U...   %5D %5B917   Energy efficiency labelling requirements are s...   %5D %5B966   The law provided a legal framework to set up a...   %5D %5B...                                                 ...   %5D %5B220   South Africa%27s Sectoral Cold Spell Management ...   %5D %5B422   The Energy Efficiency Action Plan 2011%3F2020 le...   %5D %5B789   This law states that the State shall provide t...   %5D %5B1125  The Strategy aims to develop a sustainable ene...   %5D %5B404   The main objectives of Law 1391-V are to%3A %5Cn- ...   %5D %5B%5D %5B                                           policy_title  %5C%5D %5B946   Energy Market Authority of Singapore Act %28Chap...   %5D %5B1077                 Energy and Climate Fund Act %28EKFG%29   %5D %5B753   Decentralized Rural Electrification Strategy %28...   %5D %5B917   Energy Resources Regulations %28Energy labeling ......%5D" isContainer="True" shape="(503, 3)" />
<var name="_" type="dict" qualifier="builtins" value="%7B%27clf__classifier__n_estimators%27%3A 100%7D" isContainer="True" shape="1" isIPythonHidden="True" />
<var name="_11" type="DataFrame" qualifier="pandas.core.frame" value="num_labels  cumulative_positive_labels  %5C %5BEnergy                                1143                        1143   %5D %5BTransportation                         761                        1904   %5D %5BLULUCF                                 398                        2302   %5D %5BEconomy-wide                           366                        2668   %5D %5BResidential and Commercial             351                        3019   %5D %5BAgriculture                            305                        3324   %5D %5BWater                                  297                        3621   %5D %5BIndustry                               238                        3859   %5D %5BWaste                                  177                        4036   %5D %5BHealth                                 158                        4194   %5D %5BEnvironment                            127                        4321   %5D %5BUrban                                   73                        4394   %5D %5BBuildings                             ...%5D" isContainer="True" shape="(23, 3)" isIPythonHidden="True" />
<var name="_12" type="Figure" qualifier="plotly.graph_objs._figure" value="Figure%28%7B%0A    %27data%27%3A %5B%7B%27alignmentgroup%27%3A %27True%27%2C%0A              %27hovertemplate%27%3A %27index=%25%7Bx%7D%3Cbr&gt;num_labels=%25%7By%7D%3Cextra&gt;%3C/extra&gt;%27%2C%0A              %27legendgroup%27%3A %27%27%2C%0A              %27marker%27%3A %7B%27color%27%3A %27%23636efa%27%2C %27pattern%27%3A %7B%27shape%27%3A %27%27%7D%7D%2C%0A              %27name%27%3A %27%27%2C%0A              %27offsetgroup%27%3A %27%27%2C%0A              %27orientation%27%3A %27v%27%2C%0A              %27showlegend%27%3A False%2C%0A              %27textposition%27%3A %27auto%27%2C%0A              %27type%27%3A %27bar%27%2C%0A              %27x%27%3A array%28%5B%27Energy%27%2C %27Transportation%27%2C %27LULUCF%27%2C %27Economy-wide%27%2C%0A                          %27Residential and Commercial%27%2C %27Agriculture%27%2C %27Water%27%2C %27Industry%27%2C%0A                          %27Waste%27%2C %27Health%27%2C %27Environment%27%2C %27Urban%27%2C %27Buildings%27%2C %27Tourism%27%2C%0A                          %27Social development%27%2C %27Disaster Risk Management %28Drm%29%27%2C %27Coastal zones%27%2C%0A                          %27Rural%27%2C %27Adaptation%27%2C %27Cross Cutting Area%27%2C %27Public Sector%27%2C %27Other%27%2C%0A                          %27Finance%27%5D%2C dtype=object%29%2C%0A              %27xaxis%27%3A %27x%27%2C%0A              %27y%27%3A array%28%5B1143..." isContainer="True" isIPythonHidden="True" />
<var name="_13" type="AxesSubplot" qualifier="matplotlib.axes._subplots" value="AxesSubplot%280.125%2C0.125%3B0.62x0.755%29" isContainer="True" isIPythonHidden="True" />
<var name="_14" type="Figure" qualifier="plotly.graph_objs._figure" value="Figure%28%7B%0A    %27data%27%3A %5B%7B%27alignmentgroup%27%3A %27True%27%2C%0A              %27bingroup%27%3A %27x%27%2C%0A              %27hovertemplate%27%3A %27variable=sectors_list%3Cbr&gt;value=%25%7Bx%7D%3Cbr&gt;count=%25%7By%7D%3Cextra&gt;%3C/extra&gt;%27%2C%0A              %27legendgroup%27%3A %27sectors_list%27%2C%0A              %27marker%27%3A %7B%27color%27%3A %27%23636efa%27%2C %27pattern%27%3A %7B%27shape%27%3A %27%27%7D%7D%2C%0A              %27name%27%3A %27sectors_list%27%2C%0A              %27offsetgroup%27%3A %27sectors_list%27%2C%0A              %27orientation%27%3A %27v%27%2C%0A              %27showlegend%27%3A True%2C%0A              %27type%27%3A %27histogram%27%2C%0A              %27x%27%3A array%28%5B3%2C 6%2C 1%2C ...%2C 5%2C 1%2C 1%5D%29%2C%0A              %27xaxis%27%3A %27x%27%2C%0A              %27yaxis%27%3A %27y%27%7D%5D%2C%0A    %27layout%27%3A %7B%27barmode%27%3A %27relative%27%2C%0A               %27legend%27%3A %7B%27title%27%3A %7B%27text%27%3A %27variable%27%7D%2C %27tracegroupgap%27%3A 0%7D%2C%0A               %27template%27%3A %27...%27%2C%0A               %27title%27%3A %7B%27text%27%3A %27num labels per instance%27%7D%2C%0A               %27xaxis%27%3A %7B%27anchor%27%3A %27y%27%2C %27domain%27%3A %5B0.0%2C 1.0%5D%2C %27title%27%3A %7B%27text%27%3A %27value%27%7D%7D%2C%0A               %27yaxis%27%3A %7B%27anchor%27%3A %27x%27%2C %27domain%27%3A %5B0.0%2C 1.0%5D%2C %27title%27%3A %7B%27text%27%3A %27count%27%7D%7D%7D%0A%7D%29" isContainer="True" isIPythonHidden="True" />
<var name="_15" type="Series" qualifier="pandas.core.series" value="%28%27Energy%27%2C 365%29 %28%27Economy-wide%27%2C 144%29 %28%27Transportation%3BEnergy%27%2C 117%29 %28%27Transportation%27%2C 112%29 %28%27Energy%3BResidential and Commercial%27%2C 63%29 %28%27LULUCF%27%2C 58%29 %28%27Transportation%3BEnergy%3BResidential and Commercial%27%2C 30%29 %28%27Agriculture%27%2C 26%29 %28%27Transportation%3BLULUCF%27%2C 24%29 %28%27Industry%3BEnergy%27%2C 24%29" isContainer="True" shape="(10,)" isIPythonHidden="True" />
<var name="_18" type="AxesSubplot" qualifier="matplotlib.axes._subplots" value="AxesSubplot%280.125%2C0.125%3B0.62x0.755%29" isContainer="True" isIPythonHidden="True" />
<var name="_24" type="Run" qualifier="wandb.sdk.wandb_run" value="%3Cwandb.sdk.wandb_run.Run object at 0x7fdea06a8400&gt;" isContainer="True" isIPythonHidden="True" />
<var name="_26" type="dict" qualifier="builtins" value="%7B%27memory%27%3A None%2C %27steps%27%3A %5B%28%27features%27%2C FeatureUnion%28transformer_list=%5B%28%27pipeline_text%27%2C%0A                                Pipeline%28steps=%5B%28%27select_text_col%27%2C%0A                                                 FunctionTransformer%28func=%3Cfunction select_col at 0x7fdf1be14310&gt;%29%29%2C%0A                                                %28%27tfidf%27%2C%0A                                                 TfidfVectorizer%28lowercase=False%2C%0A                                                                 max_df=0.5%2C%0A                                                                 stop_words=%27english%27%29%29%5D%29%29%2C%0A                               %28%27feature_engineering%27%2C%0A                                TextFeatureEngineering%28%29%29%5D%29%29%2C %28%27clf%27%2C ClassifierChain%28classifier=RandomForestClassifier%28%29%2C require_dense=%5BTrue%2C True%5D%29%29%5D%2C %27verbose%27%3A False%2C %27features%27%3A FeatureUnion%28transformer_list=%5B%28%27pipeline_text%27%2C%0A                                Pipeline%28steps=%5B%28%27select_text_col%27%2C%0A                                                 FunctionTran..." isContainer="True" shape="66" isIPythonHidden="True" />
<var name="_27" type="dict" qualifier="builtins" value="%7B%27classifier%27%3A RandomForestClassifier%28%29%2C %27classifier__bootstrap%27%3A True%2C %27classifier__ccp_alpha%27%3A 0.0%2C %27classifier__class_weight%27%3A None%2C %27classifier__criterion%27%3A %27gini%27%2C %27classifier__max_depth%27%3A None%2C %27classifier__max_features%27%3A %27auto%27%2C %27classifier__max_leaf_nodes%27%3A None%2C %27classifier__max_samples%27%3A None%2C %27classifier__min_impurity_decrease%27%3A 0.0%2C %27classifier__min_samples_leaf%27%3A 1%2C %27classifier__min_samples_split%27%3A 2%2C %27classifier__min_weight_fraction_leaf%27%3A 0.0%2C %27classifier__n_estimators%27%3A 100%2C %27classifier__n_jobs%27%3A None%2C %27classifier__oob_score%27%3A False%2C %27classifier__random_state%27%3A None%2C %27classifier__verbose%27%3A 0%2C %27classifier__warm_start%27%3A False%2C %27require_dense%27%3A %5BTrue%2C True%5D%2C %27order%27%3A None%7D" isContainer="True" shape="21" isIPythonHidden="True" />
<var name="_29" type="float64" qualifier="numpy" value="0.1382738095238095" shape="()" isIPythonHidden="True" />
<var name="_31" type="dict" qualifier="builtins" value="%7B%27clf__classifier__n_estimators%27%3A 100%7D" isContainer="True" shape="1" isIPythonHidden="True" />
<var name="_5" type="str" qualifier="builtins" value="/home/stefan/PycharmProjects/multi-label-classification-climate/notebooks" isIPythonHidden="True" />
<var name="_7" type="DataFrame" qualifier="pandas.core.frame" value="policy_id                       policy_title  %5C %5B0      10088     Circular economy promotion law   %5D %5B1      10087                14th Five-Year Plan   %5D %5B2      10046             National Forest Policy   %5D %5B3      10044   Suriname National REDD%2B Strategy   %5D %5B4      10042  Policy Development Plan 2017-2021   %5D %5B%5D %5B                                             sectors  %5C%5D %5B0                  Industry%3BAgriculture%3BEconomy-wide   %5D %5B1  Transportation%3BRural%3BLULUCF%3BEnergy%3BEconomy-wid...   %5D %5B2                                             LULUCF   %5D %5B3                                             LULUCF   %5D %5B4                                       Economy-wide   %5D %5B%5D %5B                                    description_text  %5D %5B0  This law promotes the development of a circula...  %5D %5B1  The 14th Five Year Plan lays down the strategy...  %5D %5B2  This document aims at protecting the country%27s...  %5D %5B3  This document aims to protect Suriname%27s fores...  %5D %5B4  This document lays out the country%27s developme...  %5D" isContainer="True" shape="(5, 4)" isIPythonHidden="True" />
<var name="__" type="float64" qualifier="numpy" value="0.1382738095238095" shape="()" isIPythonHidden="True" />
<var name="___" type="dict" qualifier="builtins" value="%7B%27classifier%27%3A RandomForestClassifier%28%29%2C %27classifier__bootstrap%27%3A True%2C %27classifier__ccp_alpha%27%3A 0.0%2C %27classifier__class_weight%27%3A None%2C %27classifier__criterion%27%3A %27gini%27%2C %27classifier__max_depth%27%3A None%2C %27classifier__max_features%27%3A %27auto%27%2C %27classifier__max_leaf_nodes%27%3A None%2C %27classifier__max_samples%27%3A None%2C %27classifier__min_impurity_decrease%27%3A 0.0%2C %27classifier__min_samples_leaf%27%3A 1%2C %27classifier__min_samples_split%27%3A 2%2C %27classifier__min_weight_fraction_leaf%27%3A 0.0%2C %27classifier__n_estimators%27%3A 100%2C %27classifier__n_jobs%27%3A None%2C %27classifier__oob_score%27%3A False%2C %27classifier__random_state%27%3A None%2C %27classifier__verbose%27%3A 0%2C %27classifier__warm_start%27%3A False%2C %27require_dense%27%3A %5BTrue%2C True%5D%2C %27order%27%3A None%7D" isContainer="True" shape="21" isIPythonHidden="True" />
<var name="__builtin__" type="module" qualifier="builtins" value="%3Cmodule %27builtins%27 %28built-in%29&gt;" isContainer="True" isIPythonHidden="True" />
<var name="__builtins__" type="module" qualifier="builtins" value="%3Cmodule %27builtins%27 %28built-in%29&gt;" isContainer="True" isIPythonHidden="True" />
<var name="__doc__" type="str" qualifier="builtins" value="Automatically created module for IPython interactive environment" isIPythonHidden="True" />
<var name="__loader__" type="NoneType" qualifier="builtins" value="None" isIPythonHidden="True" />
<var name="__name__" type="str" qualifier="builtins" value="__main__" isIPythonHidden="True" />
<var name="__package__" type="NoneType" qualifier="builtins" value="None" isIPythonHidden="True" />
<var name="__spec__" type="NoneType" qualifier="builtins" value="None" isIPythonHidden="True" />
<var name="_dh" type="list" qualifier="builtins" value="%5BPosixPath%28%27/home/stefan/PycharmProjects/multi-label-classification-climate/notebooks%27%29%5D" isContainer="True" shape="1" isIPythonHidden="True" />
<var name="_i" type="str" qualifier="builtins" value="wandb.log%28%7B%27grid_score%27%3A grid.best_score_%2C %27grid_std%27%3A grid.cv_results_%5B%27std_test_score%27%5D%5Bgrid.best_index_%5D%2C %27grid_params%27%3A grid.best_params_%7D%29" isIPythonHidden="True" />
<var name="_i1" type="str" qualifier="builtins" value="import sys%0A%0A%0A%0A%25load_ext autoreload%0A%25autoreload 2" isIPythonHidden="True" />
<var name="_i10" type="str" qualifier="builtins" value="%23 Let%27s analyse the labels.%0Alabels_flattened=df%5B%27sectors_list%27%5D.explode%28%29%0Aunique_labels=labels_flattened.unique%28%29%0An_unique_labels=len%28unique_labels%29%0Aprint%28f%22There are %7Bn_unique_labels%7D classes with possible labels%3A %5Cn %7Bunique_labels%7D%22%29" isIPythonHidden="True" />
<var name="_i11" type="str" qualifier="builtins" value="%23 What are the cumulative totals for each label%3F%0Anum_instances_each_label=labels_flattened.value_counts%28%29%0Atotal_positive_labels=num_instances_each_label.sum%28%29%0Acumulative_sum=num_instances_each_label.cumsum%28%29%0Afraction_dataset_covered=cumulative_sum/total_positive_labels%0Adf_labels=pd.DataFrame%28%7B%27num_labels%27%3A num_instances_each_label%2C%0A                        %27cumulative_positive_labels%27%3A cumulative_sum%2C %0A                        %27cumulative_fraction_dataset_covered%27%3A fraction_dataset_covered%7D%29%0Adf_labels" isIPythonHidden="True" />
<var name="_i12" type="str" qualifier="builtins" value="px.bar%28df_labels%2C x=df_labels.index%2C y=%27num_labels%27%2C title=%27label distribution%27%29" isIPythonHidden="True" />
<var name="_i13" type="str" qualifier="builtins" value="%23 12 most under represented labels.%0Aunderrepresented_labels=df_labels%5B11%3A%5D.index%0A%0Amlb=MultiLabelBinarizer%28%29%0Ay = mlb.fit_transform%28df%5B%27sectors_list%27%5D%29%0A%23 Now let%27s look at the correlations between labels.%0Asns.heatmap%28pd.DataFrame%28y%2C columns=mlb.classes_%29.corr%28%29.loc%5Bunderrepresented_labels%5D%29" isIPythonHidden="True" />
<var name="_i14" type="str" qualifier="builtins" value="px.histogram%28df%5B%27sectors_list%27%5D.apply%28len%29%2C title=%27num labels per instance%27%29" isIPythonHidden="True" />
<var name="_i15" type="str" qualifier="builtins" value="%23 Let%27s also check if there are any labels with an especially high number of classes such that we could change this to a multi-class problem%0A%23 instead of a multi-label problem.%0Adf%5B%27sectors%27%5D.value_counts%28%29.head%2810%29" isIPythonHidden="True" />
<var name="_i16" type="str" qualifier="builtins" value="common_labels=df_labels.index%5B0%3AKEEP_MOST_COMMON_LABELS%5D%0A%0A%23 Only keep sectors in top n labels%0Adf%5B%27sectors_list%27%5D = df%5B%27sectors_list%27%5D.apply%28lambda x%3A %5Btag for tag in x if tag in common_labels%5D%29%0Adf_filtered = df.copy%28%29%5Bdf%5B%27sectors_list%27%5D.str.len%28%29&gt;0%5D%0Adf_filtered.drop%28columns=%27sectors%27%2Cinplace=True%29" isIPythonHidden="True" />
<var name="_i17" type="str" qualifier="builtins" value="y = mlb.fit_transform%28df_filtered%5B%27sectors_list%27%5D%29%0A%0A%23 Split%0Adf_eda%2C df_test%2C y_eda%2C y_test = iter_train_test_split%28%0A    df_filtered%2C y%2C train_size=1-TEST_SET_FRAC%29%0A%0A%0Ay_eda_df = pd.DataFrame%28y_eda%2C columns = mlb.classes_%29" isIPythonHidden="True" />
<var name="_i18" type="str" qualifier="builtins" value="%23 Now let%27s look at the correlations between labels.%0Asns.heatmap%28y_eda_df.corr%28%29%29" isIPythonHidden="True" />
<var name="_i19" type="str" qualifier="builtins" value="%23 Let%27s do a quick analysis of a bunch of statistics from the text columns. %0A%0Adf_eda=df_eda.copy%28%29 %23 Suppress warnings%0Adf_eda%5B%27full_text%27%5D= df_eda%5B%27policy_title%27%5D%2B%27%3A %27%2Bdf_eda%5B%27description_text%27%5D %23 Concat text columns%0A%0Atext_cols=%5B%27description_text%27%2C %27policy_title%27%2C %27full_text%27%5D%0Atext_cols_n_words = %5Bf%27%7Bx%7D_nwords%27 for x in text_cols%5D%0Afor col in text_cols%3A%0A    df_eda%5Bf%27%7Bcol%7D_nwords%27%5D=df_eda%5Bcol%5D.str.split%28%29.str.len%28%29%0A    %0Adef subplot_helper%28cols%3A list%29 -&gt; None%3A%0A    fig=make_subplots%283%2C1%2C subplot_titles=cols%29%0A    for i%2C col in enumerate%28cols%29%3A%0A        trace=go.Histogram%28x=df_eda%5Bcol%5D%29%0A        fig.append_trace%28trace%2C i%2B1%2C1%29%0A    %0A    fig.update_layout%28height=700%2C width=800%29%0A    fig.show%28%29%0A%0Asubplot_helper%28text_cols_n_words%29" isIPythonHidden="True" />
<var name="_i2" type="str" qualifier="builtins" value="from src.sklearn_utils import iter_train_test_split%2C simple_feature_engineering%0Afrom sklearn.ensemble import GradientBoostingClassifier" isIPythonHidden="True" />
<var name="_i20" type="str" qualifier="builtins" value="tokenizer = AutoTokenizer.from_pretrained%28%27distilbert-base-cased%27%29%0Afor col in text_cols%3A%0A    df_eda%5Bf%27%7Bcol%7D_tokens%27%5D=df_eda%5Bcol%5D.apply%28lambda x%3A tokenizer.tokenize%28x%29%29%0A    df_eda%5Bf%27%7Bcol%7D_ntokens%27%5D=df_eda%5Bf%27%7Bcol%7D_tokens%27%5D.str.len%28%29%0A%0Atext_cols_n_tokens = %5Bf%27%7Bx%7D_ntokens%27 for x in text_cols%5D%0Asubplot_helper%28text_cols_n_tokens%29" isIPythonHidden="True" />
<var name="_i21" type="str" qualifier="builtins" value="%23 Let%27s see what happens if we subset the dataset so that it only contains rows with a single label%0A%23 and visualise the separation between classes to get%0Adf_single_label=df_eda%5Bdf_eda%5B%27sectors_list%27%5D.apply%28len%29==1%5D%0AX%2C y = df_single_label%5B%5B%27description_text%27%2C%27policy_title%27%2C%27full_text%27%5D%5D%2C df_single_label%5B%27sectors_list%27%5D.apply%28lambda x%3A x%5B0%5D%29%0AX_train%2C X_test%2C y_train%2C y_test = train_test_split%28%0A     X%2C y%2C test_size=0.33%2C random_state=SEED%29%0A%0Adef tsne_plot%28X_train%2C X_test%2C y_train%2C y_test%2C col%3A str%29%3A%0A    %22%22%22%0A    Helper to plot tsne visualisations on train and test set for a tfidf transformed column.%0A    %22%22%22%0A    tfidf = TfidfVectorizer%28%29%0A    tfidf.fit_transform%28X_train%5Bcol%5D%29%0A    train_features = tfidf.transform%28X_train%5Bcol%5D%29%0A    test_features = tfidf.transform%28X_test%5Bcol%5D%29%0A    tsne_train = TSNEVisualizer%28decompose_by=24%2C title=f%27Train set%3A %7Bcol%7D%27%29%0A    tsne_train.fit%28train_features%2C y_train%29%0A    tsne_train.show%28%29%0A    tsne_test = TSNEVisualizer%28decompose_by=24%2C title=f%27Test set%3A %7Bcol%7D%27%29%0A    ts..." isIPythonHidden="True" />
<var name="_i22" type="str" qualifier="builtins" value="from src.sklearn_utils import TextFeatureEngineering%2C select_col%2C construct_pipeline" isIPythonHidden="True" />
<var name="_i23" type="str" qualifier="builtins" value="X%2C y = df_eda%2C mlb.fit_transform%28df_eda%5B%27sectors_list%27%5D%29" isIPythonHidden="True" />
<var name="_i24" type="str" qualifier="builtins" value="import wandb%0Awandb.init%28project=%22climate-multi-label-classification%22%2C entity=%22stefl14%22%29" isIPythonHidden="True" />
<var name="_i25" type="str" qualifier="builtins" value="def select_col%28df%2C col=%27full_text%27%29%3A %23 lambda%27s not picklable%2C hence this one liner.%0A    return df%5Bcol%5D%0A%0Afull_pipe_rf=construct_pipeline%28%29%0Afull_pipe_gb=construct_pipeline%28clf=GradientBoostingClassifier%28%29%29%0A%0A%23 cv_score=cross_val_score%28full_pipe_rf%2C X%2C y%2C scoring=make_scorer%28hamming_loss%29%2C cv=5%2C error_score=%27raise%27%29%0A%23%0A%23 %23 fit full_pipe and log the results.%0A%23 full_pipe_rf.fit%28X%2C y%29%0A%23 wandb.log%28%7B%27cv_score%27%3A cv_score.mean%28%29%2C %27cv_std%27%3A cv_score.std%28%29%7D%29" isIPythonHidden="True" />
<var name="_i26" type="str" qualifier="builtins" value="full_pipe_rf.get_params%28%29" isIPythonHidden="True" />
<var name="_i27" type="str" qualifier="builtins" value="full_pipe_rf.named_steps%5B%27clf%27%5D.get_params%28%29" isIPythonHidden="True" />
<var name="_i28" type="str" qualifier="builtins" value="from sklearn.model_selection import GridSearchCV%0A%0Aparam_grid_random_forest = %7B%27clf__classifier__n_estimators%27%3A%5B100%2C 200%5D%7D%0Agrid = GridSearchCV%28full_pipe_rf%2C param_grid=param_grid_random_forest%2C scoring=make_scorer%28hamming_loss%29%2C cv=5%2C error_score=%27raise%27%29%0A%23 Do grid search and log the results.%0Agrid.fit%28X%2C y%29%0Awandb.log%28%7B%27grid_score%27%3A grid.best_score_%2C %27grid_std%27%3A grid.cv_results_%5B%27std_test_score%27%5D%5Bgrid.best_index_%5D%7D%29" isIPythonHidden="True" />
<var name="_i29" type="str" qualifier="builtins" value="grid.best_score_" isIPythonHidden="True" />
<var name="_i3" type="str" qualifier="builtins" value="import pandas as pd%0Aimport numpy as np%0Aimport os%0Aimport plotly.express as px%0Afrom skmultilearn.model_selection import IterativeStratification%0Afrom sklearn.model_selection import train_test_split%0Afrom sklearn.preprocessing import MultiLabelBinarizer%0Afrom sklearn.dummy import DummyClassifier%0Afrom sklearn.metrics import hamming_loss%0Aimport seaborn as sns%0A%0Afrom sklearn.feature_extraction.text import TfidfVectorizer%0A%0Afrom yellowbrick.text import TSNEVisualizer%0Afrom yellowbrick.datasets import load_hobbies%0A%23 import tensorflow_addons as tfa%0Afrom sklearn.metrics import hamming_loss%0A%0Afrom skmultilearn.problem_transform import ClassifierChain%0Afrom sklearn.metrics import hamming_loss%2C accuracy_score%2C make_scorer%0Afrom sklearn.feature_extraction.text import CountVectorizer%2C TfidfVectorizer%0Afrom sklearn.naive_bayes import MultinomialNB%0Afrom sklearn.pipeline import Pipeline%0Afrom sklearn.linear_model import Lasso%0Afrom sklearn.model_selection import cross_val_score%0Afrom datetime import time%0A%0Afrom trans..." isIPythonHidden="True" />
<var name="_i30" type="str" qualifier="builtins" value="from sklearn.model_selection import GridSearchCV%0A%0Aparam_grid_random_forest = %7B%27clf__classifier__n_estimators%27%3A%5B100%2C 200%5D%7D%0Agrid = GridSearchCV%28full_pipe_rf%2C param_grid=param_grid_random_forest%2C scoring=make_scorer%28hamming_loss%29%2C cv=5%2C error_score=%27raise%27%29%0A%23 Do grid search and log the results.%0Agrid.fit%28X%2C y%29%0Awandb.log%28%7B%27grid_score%27%3A grid.best_score_%2C %27grid_std%27%3A grid.cv_results_%5B%27std_test_score%27%5D%5Bgrid.best_index_%5D%2C %27grid_params%27%3A grid.best_params_%7D%29" isIPythonHidden="True" />
<var name="_i31" type="str" qualifier="builtins" value="grid.best_params_" isIPythonHidden="True" />
<var name="_i32" type="str" qualifier="builtins" value="wandb.log%28%7B%27grid_score%27%3A grid.best_score_%2C %27grid_std%27%3A grid.cv_results_%5B%27std_test_score%27%5D%5Bgrid.best_index_%5D%2C %27grid_params%27%3A grid.best_params_%7D%29" isIPythonHidden="True" />
<var name="_i33" type="str" qualifier="builtins" value="from sklearn.model_selection import GridSearchCV%0A%0Aparam_grid_random_forest = %7B%27clf__classifier__n_estimators%27%3A%5B10%2C 100%2C 1000%5D%7D%0Agrid = GridSearchCV%28full_pipe_rf%2C param_grid=param_grid_random_forest%2C scoring=make_scorer%28hamming_loss%29%2C cv=5%2C error_score=%27raise%27%29%0A%23 Do grid search and log the results.%0Agrid.fit%28X%2C y%29%0Awandb.log%28%7B%27grid_score%27%3A grid.best_score_%2C %27grid_std%27%3A grid.cv_results_%5B%27std_test_score%27%5D%5Bgrid.best_index_%5D%2C %27grid_params%27%3A grid.best_params_%7D%29" isIPythonHidden="True" />
<var name="_i4" type="str" qualifier="builtins" value="def create_tokenized_ds%28%0A    X%2C y%2C text_column=%22description_text%22%2C model_name=%22bert-base-cased%22%2C batch_size=16%0A%29%3A%0A    y = np.array%28y%2C dtype=%22int32%22%29%0A    X = X%5Btext_column%5D%0A    tokens = tokenizer%28%0A        list%28X%29%2C%0A        padding=%22max_length%22%2C%0A        truncation=True%2C%0A        return_tensors=%22tf%22%2C%0A        return_token_type_ids=False%2C%0A    %29%0A    tokens_w_labels = tokens.copy%28%29%0A    tokens_w_labels%5B%22target%22%5D = y%0A    tf_dataset = tf.data.Dataset.from_tensor_slices%28%28dict%28tokens_w_labels%29%2C y%29%29%0A    tf_dataset = tf_dataset.shuffle%28len%28tf_dataset%29%29.batch%28batch_size%29%0A    return tf_dataset%0A%0A%0Aimport keras%0A%0AK = keras.backend%0A%0A%0Aclass ExponentialLearningRate%28keras.callbacks.Callback%29%3A%0A    def __init__%28self%2C factor%29%3A%0A        self.factor = factor%0A        self.rates = %5B%5D%0A        self.losses = %5B%5D%0A%0A    def on_batch_end%28self%2C batch%2C logs%29%3A%0A        self.rates.append%28K.get_value%28self.model.optimizer.learning_rate%29%29%0A        self.losses.append%28logs%5B%22loss%22%5D%29%0A        K.set_value%28%0A            self.model.optimizer.le..." isIPythonHidden="True" />
<var name="_i5" type="str" qualifier="builtins" value="os.getcwd%28%29" isIPythonHidden="True" />
<var name="_i6" type="str" qualifier="builtins" value="%23 Constants%0ASEED=42%0AHOLD_OUT_PERCENTAGE=10%0AITERATIVE_STRAT_ORDER=1%0AKEEP_MOST_COMMON_LABELS=10%0ABATCH_SIZE=16%0ATRAIN_FRACTION=0.9%0AHUGGINGFACE_CONFIG=%27distilbert-base-cased%27%0ATEST_SET_FRAC=.1" isIPythonHidden="True" />
<var name="_i7" type="str" qualifier="builtins" value="data_path = Path%28os.path.abspath%28%27%27%29%29.parent / %27data%27 / %27recruitment-task_1-full.csv%27%0A%0Adf=pd.read_csv%28%27/home/stefan/PycharmProjects/multi-label-classification-climate/data/recruitment-task_1-full.csv%27%29%0Adf.head%28%29" isIPythonHidden="True" />
<var name="_i8" type="str" qualifier="builtins" value="df.info%28%29" isIPythonHidden="True" />
<var name="_i9" type="str" qualifier="builtins" value="%23 Parse labels into a list.%0Adf%5B%27sectors_list%27%5D=df%5B%27sectors%27%5D.str.split%28%22%3B%22%29%0Adf=df%5B~df.description_text.duplicated%28%29%5D %23 Found a duplicated entry" isIPythonHidden="True" />
<var name="_ih" type="list" qualifier="builtins" value="%5B%27%27%2C %22import sys%5Cn%5Cn%5Cn%5Cnget_ipython%28%29.run_line_magic%28%27load_ext%27%2C %27autoreload%27%29%5Cnget_ipython%28%29.run_line_magic%28%27autoreload%27%2C %272%27%29%22%2C %27from src.sklearn_utils import iter_train_test_split%2C simple_feature_engineering%5Cnfrom sklearn.ensemble import GradientBoostingClassifier%27%2C %27import pandas as pd%5Cnimport numpy as np%5Cnimport os%5Cnimport plotly.express as px%5Cnfrom skmultilearn.model_selection import IterativeStratification%5Cnfrom sklearn.model_selection import train_test_split%5Cnfrom sklearn.preprocessing import MultiLabelBinarizer%5Cnfrom sklearn.dummy import DummyClassifier%5Cnfrom sklearn.metrics import hamming_loss%5Cnimport seaborn as sns%5Cn%5Cnfrom sklearn.feature_extraction.text import TfidfVectorizer%5Cn%5Cnfrom yellowbrick.text import TSNEVisualizer%5Cnfrom yellowbrick.datasets import load_hobbies%5Cn%23 import tensorflow_addons as tfa%5Cnfrom sklearn.metrics import hamming_loss%5Cn%5Cnfrom skmultilearn.problem_transform import ClassifierChain%5Cnfrom sklearn.metrics import hamming_loss%2C accuracy_score%2C make_scorer..." isContainer="True" shape="34" isIPythonHidden="True" />
<var name="_ii" type="str" qualifier="builtins" value="grid.best_params_" isIPythonHidden="True" />
<var name="_iii" type="str" qualifier="builtins" value="from sklearn.model_selection import GridSearchCV%0A%0Aparam_grid_random_forest = %7B%27clf__classifier__n_estimators%27%3A%5B100%2C 200%5D%7D%0Agrid = GridSearchCV%28full_pipe_rf%2C param_grid=param_grid_random_forest%2C scoring=make_scorer%28hamming_loss%29%2C cv=5%2C error_score=%27raise%27%29%0A%23 Do grid search and log the results.%0Agrid.fit%28X%2C y%29%0Awandb.log%28%7B%27grid_score%27%3A grid.best_score_%2C %27grid_std%27%3A grid.cv_results_%5B%27std_test_score%27%5D%5Bgrid.best_index_%5D%2C %27grid_params%27%3A grid.best_params_%7D%29" isIPythonHidden="True" />
<var name="_oh" type="dict" qualifier="builtins" value="%7B5%3A %27/home/stefan/PycharmProjects/multi-label-classification-climate/notebooks%27%2C 7%3A    policy_id                       policy_title  %5C%0A0      10088     Circular economy promotion law   %0A1      10087                14th Five-Year Plan   %0A2      10046             National Forest Policy   %0A3      10044   Suriname National REDD%2B Strategy   %0A4      10042  Policy Development Plan 2017-2021   %0A%0A                                             sectors  %5C%0A0                  Industry%3BAgriculture%3BEconomy-wide   %0A1  Transportation%3BRural%3BLULUCF%3BEnergy%3BEconomy-wid...   %0A2                                             LULUCF   %0A3                                             LULUCF   %0A4                                       Economy-wide   %0A%0A                                    description_text  %0A0  This law promotes the development of a circula...  %0A1  The 14th Five Year Plan lays down the strategy...  %0A2  This document aims at protecting the country%27s...  %0A3  This document aims to protect Suriname%27s fores......" isContainer="True" shape="13" isIPythonHidden="True" />
<var name="_pydevd_bundle" type="module" qualifier="builtins" value="%3Cmodule %27_pydevd_bundle%27 from %27/snap/pycharm-professional/290/plugins/python/helpers/pydev/_pydevd_bundle/__init__.py%27&gt;" isContainer="True" />
<var name="accuracy_score" type="function" qualifier="builtins" value="%3Cfunction accuracy_score at 0x7fdf48fbb8b0&gt;" isContainer="True" />
<var name="col" type="str" qualifier="builtins" value="full_text" />
<var name="common_labels" type="Index" qualifier="pandas.core.indexes.base" value="Index%28%5B%27Energy%27%2C %27Transportation%27%2C %27LULUCF%27%2C %27Economy-wide%27%2C%0A       %27Residential and Commercial%27%2C %27Agriculture%27%2C %27Water%27%2C %27Industry%27%2C%0A       %27Waste%27%2C %27Health%27%5D%2C%0A      dtype=%27object%27%29" isContainer="True" shape="(10,)" />
<var name="construct_pipeline" type="function" qualifier="builtins" value="%3Cfunction construct_pipeline at 0x7fdf1be14a60&gt;" isContainer="True" />
<var name="create_tokenized_ds" type="function" qualifier="builtins" value="%3Cfunction create_tokenized_ds at 0x7fdf196f1790&gt;" isContainer="True" />
<var name="cross_val_score" type="function" qualifier="builtins" value="%3Cfunction cross_val_score at 0x7fdf48eb9b80&gt;" isContainer="True" />
<var name="cumulative_sum" type="Series" qualifier="pandas.core.series" value="%28%27Energy%27%2C 1143%29 %28%27Transportation%27%2C 1904%29 %28%27LULUCF%27%2C 2302%29 %28%27Economy-wide%27%2C 2668%29 %28%27Residential and Commercial%27%2C 3019%29 %28%27Agriculture%27%2C 3324%29 %28%27Water%27%2C 3621%29 %28%27Industry%27%2C 3859%29 %28%27Waste%27%2C 4036%29 %28%27Health%27%2C 4194%29 %28%27Environment%27%2C 4321%29 %28%27Urban%27%2C 4394%29 %28%27Buildings%27%2C 4459%29 %28%27Tourism%27%2C 4511%29 %28%27Social development%27%2C 4556%29 %28%27Disaster Risk Management %28Drm%29%27%2C 4589%29 %28%27Coastal zones%27%2C 4617%29 %28%27Rural%27%2C 4636%29 %28%27Adaptation%27%2C 4647%29 %28%27Cross Cutting Area%27%2C 4656%29 %28%27Public Sector%27%2C 4664%29 %28%27Other%27%2C 4670%29 %28%27Finance%27%2C 4675%29" isContainer="True" shape="(23,)" />
<var name="data_path" type="PosixPath" qualifier="pathlib" value="/home/stefan/PycharmProjects/multi-label-classification-climate/data/recruitment-task_1-full.csv" isContainer="True" />
<var name="df" type="DataFrame" qualifier="pandas.core.frame" value="policy_id                                       policy_title  %5C %5B0         10088                     Circular economy promotion law   %5D %5B1         10087                                14th Five-Year Plan   %5D %5B2         10046                             National Forest Policy   %5D %5B3         10044                   Suriname National REDD%2B Strategy   %5D %5B4         10042                  Policy Development Plan 2017-2021   %5D %5B...         ...                                                ...   %5D %5B1955       8835  National Climate Change Strategy and Action Pl...   %5D %5B1956       9110                 National Policy for Climate Change   %5D %5B1957       9191  Presidential Decree 7/2019 establishing the na...   %5D %5B1958       8889  Act No. 28 of 1972 concerning nuclear energy a...   %5D %5B1959       8887  Natural Hazards Compensation Act %28No. 59 of 2014%29   %5D %5B%5D %5B                                                sectors  %5C%5D %5B0                     Industry%3BAgriculture%3BEconomy-wide   %5D %5B1     Transportation%3BRural%3BLULUCF%3BEnergy%3B...%5D" isContainer="True" shape="(1959, 5)" />
<var name="df_eda" type="DataFrame" qualifier="pandas.core.frame" value="policy_id                                       policy_title  %5C %5B0         10088                     Circular economy promotion law   %5D %5B3         10044                   Suriname National REDD%2B Strategy   %5D %5B5         10049                               Energy Strategy 2050   %5D %5B6         10051                   Long-Term Climate Strategy%2C 2021   %5D %5B9         10054  Environmentally Sustainable Transport System P...   %5D %5B...         ...                                                ...   %5D %5B1955       8835  National Climate Change Strategy and Action Pl...   %5D %5B1956       9110                 National Policy for Climate Change   %5D %5B1957       9191  Presidential Decree 7/2019 establishing the na...   %5D %5B1958       8889  Act No. 28 of 1972 concerning nuclear energy a...   %5D %5B1959       8887  Natural Hazards Compensation Act %28No. 59 of 2014%29   %5D %5B%5D %5B                                       description_text  %5C%5D %5B0     This law promotes the development of a circula...   %5D %5B3     This document aims to protect Surin...%5D" isContainer="True" shape="(1680, 14)" />
<var name="df_filtered" type="DataFrame" qualifier="pandas.core.frame" value="policy_id                                       policy_title  %5C %5B0         10088                     Circular economy promotion law   %5D %5B1         10087                                14th Five-Year Plan   %5D %5B2         10046                             National Forest Policy   %5D %5B3         10044                   Suriname National REDD%2B Strategy   %5D %5B4         10042                  Policy Development Plan 2017-2021   %5D %5B...         ...                                                ...   %5D %5B1955       8835  National Climate Change Strategy and Action Pl...   %5D %5B1956       9110                 National Policy for Climate Change   %5D %5B1957       9191  Presidential Decree 7/2019 establishing the na...   %5D %5B1958       8889  Act No. 28 of 1972 concerning nuclear energy a...   %5D %5B1959       8887  Natural Hazards Compensation Act %28No. 59 of 2014%29   %5D %5B%5D %5B                                       description_text  %5C%5D %5B0     This law promotes the development of a circula...   %5D %5B1     The 14th Five Year Plan lays down t...%5D" isContainer="True" shape="(1879, 4)" />
<var name="df_labels" type="DataFrame" qualifier="pandas.core.frame" value="num_labels  cumulative_positive_labels  %5C %5BEnergy                                1143                        1143   %5D %5BTransportation                         761                        1904   %5D %5BLULUCF                                 398                        2302   %5D %5BEconomy-wide                           366                        2668   %5D %5BResidential and Commercial             351                        3019   %5D %5BAgriculture                            305                        3324   %5D %5BWater                                  297                        3621   %5D %5BIndustry                               238                        3859   %5D %5BWaste                                  177                        4036   %5D %5BHealth                                 158                        4194   %5D %5BEnvironment                            127                        4321   %5D %5BUrban                                   73                        4394   %5D %5BBuildings                             ...%5D" isContainer="True" shape="(23, 3)" />
<var name="df_single_label" type="DataFrame" qualifier="pandas.core.frame" value="policy_id                                       policy_title  %5C %5B3         10044                   Suriname National REDD%2B Strategy   %5D %5B5         10049                               Energy Strategy 2050   %5D %5B6         10051                   Long-Term Climate Strategy%2C 2021   %5D %5B9         10054  Environmentally Sustainable Transport System P...   %5D %5B10        10061  Uganda Green Growth Development Strategy 2017/...   %5D %5B...         ...                                                ...   %5D %5B1950       8704  National Strategy for Adaptation to Climate Ch...   %5D %5B1953       8766  Priority Framework for Action%3A Climate Change ...   %5D %5B1956       9110                 National Policy for Climate Change   %5D %5B1958       8889  Act No. 28 of 1972 concerning nuclear energy a...   %5D %5B1959       8887  Natural Hazards Compensation Act %28No. 59 of 2014%29   %5D %5B%5D %5B                                       description_text      sectors_list  %5C%5D %5B3     This document aims to protect Suriname%27s fores...          %5BLULUCF%5D   %5D %5B5    ...%5D" isContainer="True" shape="(752, 14)" />
<var name="df_test" type="DataFrame" qualifier="pandas.core.frame" value="policy_id                                       policy_title  %5C %5B1        10087                                14th Five-Year Plan   %5D %5B2        10046                             National Forest Policy   %5D %5B4        10042                  Policy Development Plan 2017-2021   %5D %5B7        10052                 Switzerland%E2%80%99s climate policy%2C 2018   %5D %5B8        10053       Smart Grid Development Master Plan 2015-2036   %5D %5B..         ...                                                ...   %5D %5B549       9133                     Law No. 293-Z on energy saving   %5D %5B552       9045                  Law No. 1136-XIV on energy saving   %5D %5B588       8784  Industrial Sector Plan for mitigation and Adap...   %5D %5B616       8687                              Pollution Control Act   %5D %5B760       4313          Second National Environmental Action Plan   %5D %5B%5D %5B                                      description_text  %5C%5D %5B1    The 14th Five Year Plan lays down the strategy...   %5D %5B2    This document aims at protecting the country%27s... ...%5D" isContainer="True" shape="(199, 4)" />
<var name="exit" type="ZMQExitAutocall" qualifier="IPython.core.autocall" value="%3CIPython.core.autocall.ZMQExitAutocall object at 0x7fdf59b7a1c0&gt;" isContainer="True" isIPythonHidden="True" />
<var name="fraction_dataset_covered" type="Series" qualifier="pandas.core.series" value="%28%27Energy%27%2C 0.24449197860962568%29 %28%27Transportation%27%2C 0.4072727272727273%29 %28%27LULUCF%27%2C 0.4924064171122995%29 %28%27Economy-wide%27%2C 0.5706951871657754%29 %28%27Residential and Commercial%27%2C 0.6457754010695187%29 %28%27Agriculture%27%2C 0.7110160427807487%29 %28%27Water%27%2C 0.7745454545454545%29 %28%27Industry%27%2C 0.8254545454545454%29 %28%27Waste%27%2C 0.8633155080213903%29 %28%27Health%27%2C 0.8971122994652406%29 %28%27Environment%27%2C 0.9242780748663102%29 %28%27Urban%27%2C 0.9398930481283423%29 %28%27Buildings%27%2C 0.9537967914438503%29 %28%27Tourism%27%2C 0.9649197860962567%29 %28%27Social development%27%2C 0.9745454545454545%29 %28%27Disaster Risk Management %28Drm%29%27%2C 0.9816042780748663%29 %28%27Coastal zones%27%2C 0.9875935828877005%29 %28%27Rural%27%2C 0.9916577540106952%29 %28%27Adaptation%27%2C 0.9940106951871658%29 %28%27Cross Cutting Area%27%2C 0.9959358288770054%29 %28%27Public Sector%27%2C 0.9976470588235294%29 %28%27Other%27%2C 0.9989304812834224%29 %28%27Finance%27%2C 1.0%29" isContainer="True" shape="(23,)" />
<var name="full_pipe_gb" type="Pipeline" qualifier="sklearn.pipeline" value="Pipeline%28steps=%5B%28%27features%27%2C%0A                 FeatureUnion%28transformer_list=%5B%28%27pipeline_text%27%2C%0A                                                 Pipeline%28steps=%5B%28%27select_text_col%27%2C%0A                                                                  FunctionTransformer%28func=%3Cfunction select_col at 0x7fdf1be14310&gt;%29%29%2C%0A                                                                 %28%27tfidf%27%2C%0A                                                                  TfidfVectorizer%28lowercase=False%2C%0A                                                                                  max_df=0.5%2C%0A                                                                                  stop_words=%27english%27%29%29%5D%29%29%2C%0A                                                %28%27feature_engineering%27%2C%0A                                                 TextFeatureEngineering%28%29%29%5D%29%29%2C%0A                %28%27clf%27%2C%0A                 ClassifierChain%28classifier=GradientBoostingClassifier%28%29%2C%0A                                 require_dense=%5BTrue%2C True%5D%29..." isContainer="True" shape="2" />
<var name="full_pipe_rf" type="Pipeline" qualifier="sklearn.pipeline" value="Pipeline%28steps=%5B%28%27features%27%2C%0A                 FeatureUnion%28transformer_list=%5B%28%27pipeline_text%27%2C%0A                                                 Pipeline%28steps=%5B%28%27select_text_col%27%2C%0A                                                                  FunctionTransformer%28func=%3Cfunction select_col at 0x7fdf1be14310&gt;%29%29%2C%0A                                                                 %28%27tfidf%27%2C%0A                                                                  TfidfVectorizer%28lowercase=False%2C%0A                                                                                  max_df=0.5%2C%0A                                                                                  stop_words=%27english%27%29%29%5D%29%29%2C%0A                                                %28%27feature_engineering%27%2C%0A                                                 TextFeatureEngineering%28%29%29%5D%29%29%2C%0A                %28%27clf%27%2C%0A                 ClassifierChain%28classifier=RandomForestClassifier%28%29%2C%0A                                 require_dense=%5BTrue%2C True%5D%29%29%5D%29" isContainer="True" shape="2" />
<var name="get_ipython" type="method" qualifier="builtins" value="%3Cbound method InteractiveShell.get_ipython of %3Cipykernel.zmqshell.ZMQInteractiveShell object at 0x7fdf59b5e520&gt;&gt;" isContainer="True" isIPythonHidden="True" />
<var name="go" type="module" qualifier="builtins" value="%3Cmodule %27plotly.graph_objects%27 from %27/home/stefan/anaconda3/envs/multi-label-classification-climate/lib/python3.9/site-packages/plotly/graph_objects/__init__.py%27&gt;" isContainer="True" />
<var name="grid" type="GridSearchCV" qualifier="sklearn.model_selection._search" value="GridSearchCV%28cv=5%2C error_score=%27raise%27%2C%0A             estimator=Pipeline%28steps=%5B%28%27features%27%2C%0A                                        FeatureUnion%28transformer_list=%5B%28%27pipeline_text%27%2C%0A                                                                        Pipeline%28steps=%5B%28%27select_text_col%27%2C%0A                                                                                         FunctionTransformer%28func=%3Cfunction select_col at 0x7fdf1be14310&gt;%29%29%2C%0A                                                                                        %28%27tfidf%27%2C%0A                                                                                         TfidfVectorizer%28lowercase=False%2C%0A                                                                                                         max_df=0.5%2C%0A                                                                                                         stop_words=%27english%27%29%29%5D%29%29%2C%0A                                                                       %28%27feature_engi..." isContainer="True" />
<var name="hamming_loss" type="function" qualifier="builtins" value="%3Cfunction hamming_loss at 0x7fdf48fc2280&gt;" isContainer="True" />
<var name="iter_train_test_split" type="function" qualifier="builtins" value="%3Cfunction iter_train_test_split at 0x7fdf1cce23a0&gt;" isContainer="True" />
<var name="joblib" type="module" qualifier="builtins" value="%3Cmodule %27joblib%27 from %27/home/stefan/anaconda3/envs/multi-label-classification-climate/lib/python3.9/site-packages/joblib/__init__.py%27&gt;" isContainer="True" />
<var name="labels_flattened" type="Series" qualifier="pandas.core.series" value="%280%2C %27Industry%27%29 %280%2C %27Agriculture%27%29 %280%2C %27Economy-wide%27%29 %281%2C %27Transportation%27%29 %281%2C %27Rural%27%29 %281%2C %27LULUCF%27%29 %281%2C %27Energy%27%29 %281%2C %27Economy-wide%27%29 %281%2C %27Agriculture%27%29 %282%2C %27LULUCF%27%29 %283%2C %27LULUCF%27%29 %284%2C %27Economy-wide%27%29 %285%2C %27Energy%27%29 %286%2C %27Economy-wide%27%29 %287%2C %27Economy-wide%27%29 %288%2C %27Energy%27%29 %289%2C %27Transportation%27%29 %2810%2C %27Economy-wide%27%29 %2811%2C %27Economy-wide%27%29 %2812%2C %27Economy-wide%27%29 %2813%2C %27Economy-wide%27%29 %2814%2C %27Economy-wide%27%29 %2815%2C %27Economy-wide%27%29 %2816%2C %27Social development%27%29 %2816%2C %27LULUCF%27%29 %2816%2C %27Economy-wide%27%29 %2817%2C %27Industry%27%29 %2818%2C %27Economy-wide%27%29 %2819%2C %27Agriculture%27%29 %2821%2C %27Energy%27%29 %2821%2C %27Economy-wide%27%29 %2821%2C %27Adaptation%27%29 %2822%2C %27Health%27%29 %2823%2C %27Economy-wide%27%29 %2824%2C %27Economy-wide%27%29 %2825%2C %27Transportation%27%29 %2826%2C %27LULUCF%27%29 %2827%2C %27Economy-wide%27%29 %2828%2C %27Adaptation%27%29 %2829%2C %27Buildings%27%29 %2830%2C %27Tourism%27%29 %2831%2C %27Environment%27%29 %2831%2C %27Energy%27%29 %2831%2C %27Economy-wide%27%29 %2832%2C %27Economy-wide%27%29 %2833%2C %27Transportation%27%29 %2834%2C %27Energy%27%29 %2834%2C %27Economy-wide%27%29 %2835%2C %27Economy-wide%27%29 %2835%2C %27Coastal zones%27%29 %2835%2C %27Adaptation%27%29 %2836%2C %27LULUCF%27%29 %2836%2C %27Energy%27%29 %2836%2C %27Economy-wide%27%29 %2837%2C %27LULUCF%27%29 %2838%2C %27Environment%27%29 %2839%2C %27LULUCF%27%29 %2839%2C %27Energy%27%29 %2840%2C %27Industry%27%29 %2840%2C %27Health%27%29 %2840%2C %27Economy-wide%27%29 %2840%2C %27Coastal zones%27%29 %2840%2C %27Buildings%27%29 %2841%2C %27Urban%27%29 %2841%2C %27Energy%27%29 %2842%2C %27Water%27%29 %2842%2C %27Cross Cutting Area%27%29 %2843%2C %27Economy-wide%27%29 %2844%2C %27Transportation%27%29 %2844%2C %27Public Sector%27%29 %2844%2C %27Buildings%27%29 %2845%2C %27Energy%27%29 %2846%2C %27Urban%27%29 %2846%2C %27LULUCF%27%29 %2846%2C %27Agriculture%27%29 %2847%2C %27Environment%27%29 %2848%2C %27LULUCF%27%29 %2849%2C %27Energy%27%29 %2849%2C %27Economy-wide%27%29 %2850%2C %27Residential and Commercial%27%29 %2850%2C %27Buildings%27%29 %2851%2C %27LULUCF%27%29 %2852%2C %27Economy-wide%27%29 %2853%2C %27Economy-wide%27%29 %2854%2C %27Economy-wide%27%29 %2855%2C %27Energy%27%29 %2856%2C %27Energy%27%29 %2857%2C %27Economy-wide%27%29 %2858%2C %27Economy-wide%27%29 %2859%2C %27Economy-wide%27%29 %2860%2C %27Economy-wide%27%29 %2861%2C %27Economy-wide%27%29 %2862%2C %27Transportation%27%29 %2863%2C %27Economy-wide%27%29 %2864%2C %27Economy-wide%27%29 %2865%2C %27Energy%27%29 %2866%2C %27Energy%27%29 %2867%2C %27Economy-wide%27%29 %2868%2C %27Transportation%27%29 %2869%2C %27Economy-wide%27%29" isContainer="True" shape="(4675,)" />
<var name="load_hobbies" type="function" qualifier="builtins" value="%3Cfunction load_hobbies at 0x7fdf1b790700&gt;" isContainer="True" />
<var name="logger" type="RootLogger" qualifier="logging" value="%3CRootLogger root %28CRITICAL%29&gt;" isContainer="True" />
<var name="logging" type="module" qualifier="builtins" value="%3Cmodule %27logging%27 from %27/home/stefan/anaconda3/envs/multi-label-classification-climate/lib/python3.9/logging/__init__.py%27&gt;" isContainer="True" />
<var name="make_scorer" type="function" qualifier="builtins" value="%3Cfunction make_scorer at 0x7fdf48eac670&gt;" isContainer="True" />
<var name="make_subplots" type="function" qualifier="builtins" value="%3Cfunction make_subplots at 0x7fdf1a24e790&gt;" isContainer="True" />
<var name="math" type="module" qualifier="builtins" value="%3Cmodule %27math%27 from %27/home/stefan/anaconda3/envs/multi-label-classification-climate/lib/python3.9/lib-dynload/math.cpython-39-x86_64-linux-gnu.so%27&gt;" isContainer="True" />
<var name="mlb" type="MultiLabelBinarizer" qualifier="sklearn.preprocessing._label" value="MultiLabelBinarizer%28%29" isContainer="True" />
<var name="n_unique_labels" type="int" qualifier="builtins" value="23" />
<var name="np" type="module" qualifier="builtins" value="%3Cmodule %27numpy%27 from %27/home/stefan/anaconda3/envs/multi-label-classification-climate/lib/python3.9/site-packages/numpy/__init__.py%27&gt;" isContainer="True" />
<var name="num_instances_each_label" type="Series" qualifier="pandas.core.series" value="%28%27Energy%27%2C 1143%29 %28%27Transportation%27%2C 761%29 %28%27LULUCF%27%2C 398%29 %28%27Economy-wide%27%2C 366%29 %28%27Residential and Commercial%27%2C 351%29 %28%27Agriculture%27%2C 305%29 %28%27Water%27%2C 297%29 %28%27Industry%27%2C 238%29 %28%27Waste%27%2C 177%29 %28%27Health%27%2C 158%29 %28%27Environment%27%2C 127%29 %28%27Urban%27%2C 73%29 %28%27Buildings%27%2C 65%29 %28%27Tourism%27%2C 52%29 %28%27Social development%27%2C 45%29 %28%27Disaster Risk Management %28Drm%29%27%2C 33%29 %28%27Coastal zones%27%2C 28%29 %28%27Rural%27%2C 19%29 %28%27Adaptation%27%2C 11%29 %28%27Cross Cutting Area%27%2C 9%29 %28%27Public Sector%27%2C 8%29 %28%27Other%27%2C 6%29 %28%27Finance%27%2C 5%29" isContainer="True" shape="(23,)" />
<var name="os" type="module" qualifier="builtins" value="%3Cmodule %27os%27 from %27/home/stefan/anaconda3/envs/multi-label-classification-climate/lib/python3.9/os.py%27&gt;" isContainer="True" />
<var name="param_grid_random_forest" type="dict" qualifier="builtins" value="%7B%27clf__classifier__n_estimators%27%3A %5B10%2C 100%2C 1000%5D%7D" isContainer="True" shape="1" />
<var name="pd" type="module" qualifier="builtins" value="%3Cmodule %27pandas%27 from %27/home/stefan/anaconda3/envs/multi-label-classification-climate/lib/python3.9/site-packages/pandas/__init__.py%27&gt;" isContainer="True" />
<var name="plt" type="module" qualifier="builtins" value="%3Cmodule %27matplotlib.pyplot%27 from %27/home/stefan/anaconda3/envs/multi-label-classification-climate/lib/python3.9/site-packages/matplotlib/pyplot.py%27&gt;" isContainer="True" />
<var name="print_columns" type="function" qualifier="builtins" value="%3Cfunction print_columns at 0x7fde80473550&gt;" isContainer="True" />
<var name="px" type="module" qualifier="builtins" value="%3Cmodule %27plotly.express%27 from %27/home/stefan/anaconda3/envs/multi-label-classification-climate/lib/python3.9/site-packages/plotly/express/__init__.py%27&gt;" isContainer="True" />
<var name="pydev_jupyter_vars" type="module" qualifier="builtins" value="%3Cmodule %27pydev_jupyter_vars%27 from %27/snap/pycharm-professional/290/plugins/python/helpers-pro/jupyter_debug/pydev_jupyter_vars.py%27&gt;" isContainer="True" />
<var name="quit" type="ZMQExitAutocall" qualifier="IPython.core.autocall" value="%3CIPython.core.autocall.ZMQExitAutocall object at 0x7fdf59b7a1c0&gt;" isContainer="True" isIPythonHidden="True" />
<var name="remove_imported_pydev_package" type="function" qualifier="builtins" value="%3Cfunction remove_imported_pydev_package at 0x7fdf1cd905e0&gt;" isContainer="True" />
<var name="select_col" type="function" qualifier="builtins" value="%3Cfunction select_col at 0x7fdeab42f0d0&gt;" isContainer="True" />
<var name="simple_feature_engineering" type="function" qualifier="builtins" value="%3Cfunction simple_feature_engineering at 0x7fdf1cb21af0&gt;" isContainer="True" />
<var name="sns" type="module" qualifier="builtins" value="%3Cmodule %27seaborn%27 from %27/home/stefan/anaconda3/envs/multi-label-classification-climate/lib/python3.9/site-packages/seaborn/__init__.py%27&gt;" isContainer="True" />
<var name="subplot_helper" type="function" qualifier="builtins" value="%3Cfunction subplot_helper at 0x7fdf0eee9f70&gt;" isContainer="True" />
<var name="sys" type="module" qualifier="builtins" value="%3Cmodule %27sys%27 %28built-in%29&gt;" isContainer="True" />
<var name="text_cols" type="list" qualifier="builtins" value="%5B%27description_text%27%2C %27policy_title%27%2C %27full_text%27%5D" isContainer="True" shape="3" />
<var name="text_cols_n_tokens" type="list" qualifier="builtins" value="%5B%27description_text_ntokens%27%2C %27policy_title_ntokens%27%2C %27full_text_ntokens%27%5D" isContainer="True" shape="3" />
<var name="text_cols_n_words" type="list" qualifier="builtins" value="%5B%27description_text_nwords%27%2C %27policy_title_nwords%27%2C %27full_text_nwords%27%5D" isContainer="True" shape="3" />
<var name="time" type="type" qualifier="builtins" value="%3Cclass %27datetime.time%27&gt;" isContainer="True" />
<var name="tokenizer" type="DistilBertTokenizerFast" qualifier="transformers.models.distilbert.tokenization_distilbert_fast" value="PreTrainedTokenizerFast%28name_or_path=%27distilbert-base-cased%27%2C vocab_size=28996%2C model_max_len=512%2C is_fast=True%2C padding_side=%27right%27%2C truncation_side=%27right%27%2C special_tokens=%7B%27unk_token%27%3A %27%5BUNK%5D%27%2C %27sep_token%27%3A %27%5BSEP%5D%27%2C %27pad_token%27%3A %27%5BPAD%5D%27%2C %27cls_token%27%3A %27%5BCLS%5D%27%2C %27mask_token%27%3A %27%5BMASK%5D%27%7D%29" isContainer="True" shape="28996" />
<var name="total_positive_labels" type="int64" qualifier="numpy" value="4675" isContainer="True" shape="()" />
<var name="train_test_split" type="function" qualifier="builtins" value="%3Cfunction train_test_split at 0x7fdf1c8fb790&gt;" isContainer="True" />
<var name="tsne_plot" type="function" qualifier="builtins" value="%3Cfunction tsne_plot at 0x7fdf195f7dc0&gt;" isContainer="True" />
<var name="underrepresented_labels" type="Index" qualifier="pandas.core.indexes.base" value="Index%28%5B%27Urban%27%2C %27Buildings%27%2C %27Tourism%27%2C %27Social development%27%2C%0A       %27Disaster Risk Management %28Drm%29%27%2C %27Coastal zones%27%2C %27Rural%27%2C%0A       %27Adaptation%27%2C %27Cross Cutting Area%27%2C %27Public Sector%27%2C %27Other%27%2C%0A       %27Finance%27%5D%2C%0A      dtype=%27object%27%29" isContainer="True" shape="(12,)" />
<var name="unique_labels" type="ndarray" qualifier="numpy" value="%5B%27Industry%27 %27Agriculture%27 %27Economy-wide%27 %27Transportation%27 %27Rural%27 %27LULUCF%27%2C %27Energy%27 %27Social development%27 %27Adaptation%27 %27Health%27 %27Buildings%27 %27Tourism%27%2C %27Environment%27 %27Coastal zones%27 %27Urban%27 %27Water%27 %27Cross Cutting Area%27%2C %27Public Sector%27 %27Residential and Commercial%27 %27Finance%27 %27Waste%27 %27Other%27%2C %27Disaster Risk Management %28Drm%29%27%5D" isContainer="True" shape="(23,)" />
<var name="wandb" type="module" qualifier="builtins" value="%3Cmodule %27wandb%27 from %27/home/stefan/anaconda3/envs/multi-label-classification-climate/lib/python3.9/site-packages/wandb/__init__.py%27&gt;" isContainer="True" />
<var name="y" type="ndarray" qualifier="numpy" value="%5B%5B1 1 0 0 1 0 0 0 0 0%5D%2C %5B0 0 0 0 0 1 0 0 0 0%5D%2C %5B0 0 1 0 0 0 0 0 0 0%5D%2C %5B0 1 0 0 0 0 0 0 0 0%5D%2C %5B0 0 0 0 0 0 0 1 0 0%5D%2C %5B0 1 0 0 0 0 0 0 0 0%5D%2C %5B0 1 0 0 0 0 0 0 0 0%5D%2C %5B0 1 0 0 0 0 0 0 0 0%5D%2C %5B0 1 0 0 0 1 0 0 0 0%5D%2C %5B1 0 0 0 0 0 0 0 0 0%5D%2C %5B0 1 1 0 0 0 0 0 0 0%5D%2C %5B0 1 0 0 0 0 0 0 0 0%5D%2C %5B0 1 1 0 0 0 0 0 0 0%5D%2C %5B0 0 0 0 0 0 0 1 0 0%5D%2C %5B0 1 1 0 0 0 0 0 0 0%5D%2C %5B0 1 1 0 0 1 0 0 0 0%5D%2C %5B0 0 0 0 0 1 0 0 0 0%5D%2C %5B0 0 1 0 0 1 0 0 0 0%5D%2C %5B0 0 0 0 0 0 0 0 0 1%5D%2C %5B0 1 0 0 0 0 0 0 0 0%5D%2C %5B0 0 1 0 0 0 0 0 0 0%5D%2C %5B0 0 0 0 0 0 1 0 0 0%5D%2C %5B0 0 0 0 0 1 0 0 0 0%5D%2C %5B0 1 0 0 0 0 0 0 0 0%5D%2C %5B0 1 0 0 0 0 0 0 0 0%5D%2C %5B0 0 1 0 0 0 0 0 0 0%5D%2C %5B0 1 0 0 0 0 0 0 0 0%5D%2C %5B0 1 0 0 0 0 0 0 0 0%5D%2C %5B0 0 0 0 0 0 0 1 0 0%5D%2C %5B0 1 0 0 0 0 0 0 0 0%5D%2C %5B0 0 1 0 0 0 0 0 0 0%5D%2C %5B0 1 0 0 0 0 0 0 0 0%5D%2C %5B0 1 0 0 0 0 0 0 0 0%5D%2C %5B0 0 1 0 0 0 0 0 0 0%5D%2C %5B0 1 0 0 0 0 0 0 0 0%5D%2C %5B0 0 1 0 0 0 0 0 0 0%5D%2C %5B0 1 0 0 0 0 0 0 0 0%5D%2C %5B0 1 1 0 0 0 0 0 0 0%5D%2C %5B0 0 1 0 0 0 0 0 0 0%5D%2C %5B0 0 1 0 0 0 0 0 0 0%5D%2C %5B0 0 1 0 0 0 0 1 0 0%5D%2C %5B0 0 1 0 0 0 0 0 0 0%5D%2C %5B0 0 1 0 0 0 1 1 0 0%5D%2C %5B1 0 0 0 0..." isContainer="True" shape="(1680, 10)" />
<var name="y_eda" type="ndarray" qualifier="numpy" value="%5B%5B1 1 0 0 1 0 0 0 0 0%5D%2C %5B0 0 0 0 0 1 0 0 0 0%5D%2C %5B0 0 1 0 0 0 0 0 0 0%5D%2C %5B0 1 0 0 0 0 0 0 0 0%5D%2C %5B0 0 0 0 0 0 0 1 0 0%5D%2C %5B0 1 0 0 0 0 0 0 0 0%5D%2C %5B0 1 0 0 0 0 0 0 0 0%5D%2C %5B0 1 0 0 0 0 0 0 0 0%5D%2C %5B0 1 0 0 0 1 0 0 0 0%5D%2C %5B1 0 0 0 0 0 0 0 0 0%5D%2C %5B0 1 1 0 0 0 0 0 0 0%5D%2C %5B0 1 0 0 0 0 0 0 0 0%5D%2C %5B0 1 1 0 0 0 0 0 0 0%5D%2C %5B0 0 0 0 0 0 0 1 0 0%5D%2C %5B0 1 1 0 0 0 0 0 0 0%5D%2C %5B0 1 1 0 0 1 0 0 0 0%5D%2C %5B0 0 0 0 0 1 0 0 0 0%5D%2C %5B0 0 1 0 0 1 0 0 0 0%5D%2C %5B0 0 0 0 0 0 0 0 0 1%5D%2C %5B0 1 0 0 0 0 0 0 0 0%5D%2C %5B0 0 1 0 0 0 0 0 0 0%5D%2C %5B0 0 0 0 0 0 1 0 0 0%5D%2C %5B0 0 0 0 0 1 0 0 0 0%5D%2C %5B0 1 0 0 0 0 0 0 0 0%5D%2C %5B0 1 0 0 0 0 0 0 0 0%5D%2C %5B0 0 1 0 0 0 0 0 0 0%5D%2C %5B0 1 0 0 0 0 0 0 0 0%5D%2C %5B0 1 0 0 0 0 0 0 0 0%5D%2C %5B0 0 0 0 0 0 0 1 0 0%5D%2C %5B0 1 0 0 0 0 0 0 0 0%5D%2C %5B0 0 1 0 0 0 0 0 0 0%5D%2C %5B0 1 0 0 0 0 0 0 0 0%5D%2C %5B0 1 0 0 0 0 0 0 0 0%5D%2C %5B0 0 1 0 0 0 0 0 0 0%5D%2C %5B0 1 0 0 0 0 0 0 0 0%5D%2C %5B0 0 1 0 0 0 0 0 0 0%5D%2C %5B0 1 0 0 0 0 0 0 0 0%5D%2C %5B0 1 1 0 0 0 0 0 0 0%5D%2C %5B0 0 1 0 0 0 0 0 0 0%5D%2C %5B0 0 1 0 0 0 0 0 0 0%5D%2C %5B0 0 1 0 0 0 0 1 0 0%5D%2C %5B0 0 1 0 0 0 0 0 0 0%5D%2C %5B0 0 1 0 0 0 1 1 0 0%5D%2C %5B1 0 0 0 0..." isContainer="True" shape="(1680, 10)" />
<var name="y_eda_df" type="DataFrame" qualifier="pandas.core.frame" value="Agriculture  Economy-wide  Energy  Health  Industry  LULUCF  %5C %5B0               1             1       0       0         1       0   %5D %5B1               0             0       0       0         0       1   %5D %5B2               0             0       1       0         0       0   %5D %5B3               0             1       0       0         0       0   %5D %5B4               0             0       0       0         0       0   %5D %5B...           ...           ...     ...     ...       ...     ...   %5D %5B1675            0             0       1       1         0       0   %5D %5B1676            0             0       0       0         0       0   %5D %5B1677            0             0       1       0         0       1   %5D %5B1678            0             0       1       0         0       0   %5D %5B1679            0             0       0       0         0       0   %5D %5B%5D %5B      Residential and Commercial  Transportation  Waste  Water  %5D %5B0                              0               0      0      0  %5D %5B1                              0         ...%5D" isContainer="True" shape="(1680, 10)" />
<var name="y_test" type="Series" qualifier="pandas.core.series" value="%281497%2C %27Energy%27%29 %281517%2C %27Economy-wide%27%29 %281244%2C %27Energy%27%29 %28249%2C %27Transportation%27%29 %28698%2C %27Energy%27%29 %281002%2C %27Economy-wide%27%29 %281757%2C %27Transportation%27%29 %28765%2C %27Energy%27%29 %281958%2C %27Energy%27%29 %281738%2C %27Economy-wide%27%29 %281091%2C %27Energy%27%29 %28893%2C %27Energy%27%29 %281328%2C %27LULUCF%27%29 %281869%2C %27Energy%27%29 %281257%2C %27Economy-wide%27%29 %28398%2C %27Transportation%27%29 %281326%2C %27Energy%27%29 %281550%2C %27Transportation%27%29 %28375%2C %27LULUCF%27%29 %28666%2C %27Energy%27%29 %281201%2C %27Energy%27%29 %281010%2C %27Energy%27%29 %281570%2C %27Transportation%27%29 %281199%2C %27Energy%27%29 %28979%2C %27Energy%27%29 %28112%2C %27Energy%27%29 %281928%2C %27Economy-wide%27%29 %28697%2C %27Residential and Commercial%27%29 %281112%2C %27Energy%27%29 %28583%2C %27LULUCF%27%29 %28484%2C %27Residential and Commercial%27%29 %281059%2C %27Energy%27%29 %281908%2C %27Energy%27%29 %28708%2C %27Economy-wide%27%29 %281953%2C %27Agriculture%27%29 %281214%2C %27Energy%27%29 %28438%2C %27Transportation%27%29 %28951%2C %27Energy%27%29 %281448%2C %27Transportation%27%29 %28762%2C %27Energy%27%29 %28795%2C %27Energy%27%29 %28918%2C %27Transportation%27%29 %281914%2C %27Energy%27%29 %281544%2C %27Agriculture%27%29 %28953%2C %27Economy-wide%27%29 %2895%2C %27Agriculture%27%29 %28700%2C %27LULUCF%27%29 %281222%2C %27Energy%27%29 %28294%2C %27Agriculture%27%29 %281100%2C %27Energy%27%29 %281217%2C %27Transportation%27%29 %281526%2C %27Transportation%27%29 %281041%2C %27Transportation%27%29 %281644%2C %27Energy%27%29 %2837%2C %27LULUCF%27%29 %28554%2C %27Energy%27%29 %281065%2C %27Energy%27%29 %2888%2C %27Energy%27%29 %281109%2C %27Energy%27%29 %28590%2C %27Energy%27%29 %28574%2C %27Energy%27%29 %28252%2C %27Agriculture%27%29 %28203%2C %27Water%27%29 %28165%2C %27LULUCF%27%29 %28619%2C %27Water%27%29 %281039%2C %27Economy-wide%27%29 %281237%2C %27Economy-wide%27%29 %28823%2C %27Energy%27%29 %28199%2C %27Energy%27%29 %28839%2C %27Energy%27%29 %281915%2C %27Energy%27%29 %281123%2C %27Economy-wide%27%29 %281489%2C %27Energy%27%29 %28964%2C %27Energy%27%29 %281139%2C %27Residential and Commercial%27%29 %28827%2C %27Health%27%29 %281725%2C %27Energy%27%29 %28247%2C %27Transportation%27%29 %281820%2C %27Transportation%27%29 %28232%2C %27Residential and Commercial%27%29 %28702%2C %27LULUCF%27%29 %281221%2C %27Transportation%27%29 %28602%2C %27Transportation%27%29 %28196%2C %27Transportation%27%29 %281624%2C %27Economy-wide%27%29 %28782%2C %27Economy-wide%27%29 %28145%2C %27Residential and Commercial%27%29 %28971%2C %27Energy%27%29 %28990%2C %27Energy%27%29 %28842%2C %27Energy%27%29 %281424%2C %27Economy-wide%27%29 %28502%2C %27Water%27%29 %28769%2C %27Economy-wide%27%29 %2819%2C %27Agriculture%27%29 %28671%2C %27Transportation%27%29 %2866%2C %27Energy%27%29 %281147%2C %27LULUCF%27%29 %281950%2C %27Economy-wide%27%29 %281656%2C %27Economy-wide%27%29 %28725%2C %27Energy%27%29" isContainer="True" shape="(249,)" />
<var name="y_train" type="Series" qualifier="pandas.core.series" value="%28946%2C %27Energy%27%29 %281077%2C %27Energy%27%29 %28753%2C %27Energy%27%29 %28917%2C %27Energy%27%29 %28966%2C %27Economy-wide%27%29 %281563%2C %27Transportation%27%29 %28420%2C %27Transportation%27%29 %28470%2C %27Transportation%27%29 %28776%2C %27Energy%27%29 %28347%2C %27Transportation%27%29 %28329%2C %27LULUCF%27%29 %281004%2C %27Energy%27%29 %281151%2C %27Economy-wide%27%29 %281780%2C %27Transportation%27%29 %281745%2C %27Economy-wide%27%29 %281115%2C %27LULUCF%27%29 %2842%2C %27Water%27%29 %28130%2C %27Energy%27%29 %28125%2C %27LULUCF%27%29 %28607%2C %27Energy%27%29 %281670%2C %27Transportation%27%29 %281541%2C %27Energy%27%29 %281102%2C %27Energy%27%29 %28631%2C %27Energy%27%29 %281225%2C %27Energy%27%29 %281641%2C %27Transportation%27%29 %28630%2C %27Energy%27%29 %281308%2C %27Energy%27%29 %281319%2C %27LULUCF%27%29 %28774%2C %27Economy-wide%27%29 %281243%2C %27Energy%27%29 %281899%2C %27Energy%27%29 %2851%2C %27LULUCF%27%29 %281155%2C %27Energy%27%29 %28771%2C %27Energy%27%29 %28904%2C %27Energy%27%29 %281189%2C %27Economy-wide%27%29 %28824%2C %27Energy%27%29 %281298%2C %27Transportation%27%29 %281209%2C %27Agriculture%27%29 %281335%2C %27Transportation%27%29 %281832%2C %27Energy%27%29 %2833%2C %27Transportation%27%29 %28764%2C %27Energy%27%29 %2863%2C %27Economy-wide%27%29 %28709%2C %27Economy-wide%27%29 %281291%2C %27Transportation%27%29 %281900%2C %27Energy%27%29 %281909%2C %27Transportation%27%29 %281044%2C %27Energy%27%29 %281579%2C %27Energy%27%29 %28680%2C %27Energy%27%29 %281743%2C %27Transportation%27%29 %28350%2C %27Energy%27%29 %28962%2C %27Energy%27%29 %28882%2C %27Industry%27%29 %281145%2C %27Industry%27%29 %28807%2C %27Energy%27%29 %28644%2C %27Energy%27%29 %281542%2C %27Transportation%27%29 %28956%2C %27Agriculture%27%29 %28580%2C %27LULUCF%27%29 %28246%2C %27Water%27%29 %281253%2C %27Energy%27%29 %28798%2C %27Energy%27%29 %28215%2C %27Water%27%29 %281150%2C %27Energy%27%29 %28650%2C %27Energy%27%29 %28790%2C %27Economy-wide%27%29 %28736%2C %27Energy%27%29 %28327%2C %27Agriculture%27%29 %281615%2C %27Energy%27%29 %28483%2C %27LULUCF%27%29 %28523%2C %27Transportation%27%29 %281566%2C %27Economy-wide%27%29 %28815%2C %27Energy%27%29 %28738%2C %27Energy%27%29 %283%2C %27LULUCF%27%29 %281927%2C %27Economy-wide%27%29 %28938%2C %27Economy-wide%27%29 %281655%2C %27LULUCF%27%29 %281067%2C %27Energy%27%29 %28800%2C %27Economy-wide%27%29 %281501%2C %27Transportation%27%29 %28477%2C %27Transportation%27%29 %28719%2C %27Energy%27%29 %28989%2C %27LULUCF%27%29 %281013%2C %27Agriculture%27%29 %28794%2C %27Economy-wide%27%29 %28892%2C %27Health%27%29 %281302%2C %27Transportation%27%29 %28569%2C %27Economy-wide%27%29 %281508%2C %27Energy%27%29 %281491%2C %27LULUCF%27%29 %281729%2C %27Energy%27%29 %281393%2C %27LULUCF%27%29 %28786%2C %27Transportation%27%29 %281331%2C %27Transportation%27%29 %28859%2C %27Energy%27%29 %28863%2C %27Transportation%27%29" isContainer="True" shape="(503,)" />
</xml>
<xml><var name="AutoTokenizer" type="type" qualifier="builtins" value="%3Cclass %27transformers.models.auto.tokenization_auto.AutoTokenizer%27&gt;" isContainer="True" />
<var name="BATCH_SIZE" type="int" qualifier="builtins" value="16" />
<var name="ClassifierChain" type="type" qualifier="builtins" value="%3Cclass %27skmultilearn.problem_transform.cc.ClassifierChain%27&gt;" isContainer="True" />
<var name="CountVectorizer" type="type" qualifier="builtins" value="%3Cclass %27sklearn.feature_extraction.text.CountVectorizer%27&gt;" isContainer="True" />
<var name="DataFrame" type="type" qualifier="builtins" value="%3Cclass %27pandas.core.frame.DataFrame%27&gt;" isContainer="True" />
<var name="DummyClassifier" type="type" qualifier="builtins" value="%3Cclass %27sklearn.dummy.DummyClassifier%27&gt;" isContainer="True" />
<var name="GradientBoostingClassifier" type="ABCMeta" qualifier="abc" value="%3Cclass %27sklearn.ensemble._gb.GradientBoostingClassifier%27&gt;" isContainer="True" />
<var name="GridSearchCV" type="ABCMeta" qualifier="abc" value="%3Cclass %27sklearn.model_selection._search.GridSearchCV%27&gt;" isContainer="True" />
<var name="HOLD_OUT_PERCENTAGE" type="int" qualifier="builtins" value="10" />
<var name="HUGGINGFACE_CONFIG" type="str" qualifier="builtins" value="distilbert-base-cased" />
<var name="ITERATIVE_STRAT_ORDER" type="int" qualifier="builtins" value="1" />
<var name="In" type="list" qualifier="builtins" value="%5B%27%27%2C %22import sys%5Cn%5Cn%5Cn%5Cnget_ipython%28%29.run_line_magic%28%27load_ext%27%2C %27autoreload%27%29%5Cnget_ipython%28%29.run_line_magic%28%27autoreload%27%2C %272%27%29%22%2C %27from src.sklearn_utils import iter_train_test_split%2C simple_feature_engineering%5Cnfrom sklearn.ensemble import GradientBoostingClassifier%27%2C %27import pandas as pd%5Cnimport numpy as np%5Cnimport os%5Cnimport plotly.express as px%5Cnfrom skmultilearn.model_selection import IterativeStratification%5Cnfrom sklearn.model_selection import train_test_split%5Cnfrom sklearn.preprocessing import MultiLabelBinarizer%5Cnfrom sklearn.dummy import DummyClassifier%5Cnfrom sklearn.metrics import hamming_loss%5Cnimport seaborn as sns%5Cn%5Cnfrom sklearn.feature_extraction.text import TfidfVectorizer%5Cn%5Cnfrom yellowbrick.text import TSNEVisualizer%5Cnfrom yellowbrick.datasets import load_hobbies%5Cn%23 import tensorflow_addons as tfa%5Cnfrom sklearn.metrics import hamming_loss%5Cn%5Cnfrom skmultilearn.problem_transform import ClassifierChain%5Cnfrom sklearn.metrics import hamming_loss%2C accuracy_score%2C make_scorer..." isContainer="True" shape="35" isIPythonHidden="True" />
<var name="IterativeStratification" type="ABCMeta" qualifier="abc" value="%3Cclass %27skmultilearn.model_selection.iterative_stratification.IterativeStratification%27&gt;" isContainer="True" />
<var name="KEEP_MOST_COMMON_LABELS" type="int" qualifier="builtins" value="10" />
<var name="Lasso" type="ABCMeta" qualifier="abc" value="%3Cclass %27sklearn.linear_model._coordinate_descent.Lasso%27&gt;" isContainer="True" />
<var name="MultiIndex" type="type" qualifier="builtins" value="%3Cclass %27pandas.core.indexes.multi.MultiIndex%27&gt;" isContainer="True" />
<var name="MultiLabelBinarizer" type="type" qualifier="builtins" value="%3Cclass %27sklearn.preprocessing._label.MultiLabelBinarizer%27&gt;" isContainer="True" />
<var name="MultinomialNB" type="ABCMeta" qualifier="abc" value="%3Cclass %27sklearn.naive_bayes.MultinomialNB%27&gt;" isContainer="True" />
<var name="Out" type="dict" qualifier="builtins" value="%7B5%3A %27/home/stefan/PycharmProjects/multi-label-classification-climate/notebooks%27%2C 7%3A    policy_id                       policy_title  %5C%0A0      10088     Circular economy promotion law   %0A1      10087                14th Five-Year Plan   %0A2      10046             National Forest Policy   %0A3      10044   Suriname National REDD%2B Strategy   %0A4      10042  Policy Development Plan 2017-2021   %0A%0A                                             sectors  %5C%0A0                  Industry%3BAgriculture%3BEconomy-wide   %0A1  Transportation%3BRural%3BLULUCF%3BEnergy%3BEconomy-wid...   %0A2                                             LULUCF   %0A3                                             LULUCF   %0A4                                       Economy-wide   %0A%0A                                    description_text  %0A0  This law promotes the development of a circula...  %0A1  The 14th Five Year Plan lays down the strategy...  %0A2  This document aims at protecting the country%27s...  %0A3  This document aims to protect Suriname%27s fores......" isContainer="True" shape="13" isIPythonHidden="True" />
<var name="Path" type="type" qualifier="builtins" value="%3Cclass %27pathlib.Path%27&gt;" isContainer="True" />
<var name="Pipeline" type="ABCMeta" qualifier="abc" value="%3Cclass %27sklearn.pipeline.Pipeline%27&gt;" isContainer="True" />
<var name="SEED" type="int" qualifier="builtins" value="42" />
<var name="TEST_SET_FRAC" type="float" qualifier="builtins" value="0.1" />
<var name="TRAIN_FRACTION" type="float" qualifier="builtins" value="0.9" />
<var name="TSNEVisualizer" type="type" qualifier="builtins" value="%3Cclass %27yellowbrick.text.tsne.TSNEVisualizer%27&gt;" isContainer="True" />
<var name="TextFeatureEngineering" type="type" qualifier="builtins" value="%3Cclass %27src.sklearn_utils.TextFeatureEngineering%27&gt;" isContainer="True" />
<var name="TfidfVectorizer" type="type" qualifier="builtins" value="%3Cclass %27sklearn.feature_extraction.text.TfidfVectorizer%27&gt;" isContainer="True" />
<var name="Tuple" type="_TupleType" qualifier="typing" value="typing.Tuple" isContainer="True" />
<var name="X" type="DataFrame" qualifier="pandas.core.frame" value="policy_id                                       policy_title  %5C %5B0         10088                     Circular economy promotion law   %5D %5B3         10044                   Suriname National REDD%2B Strategy   %5D %5B5         10049                               Energy Strategy 2050   %5D %5B6         10051                   Long-Term Climate Strategy%2C 2021   %5D %5B9         10054  Environmentally Sustainable Transport System P...   %5D %5B...         ...                                                ...   %5D %5B1955       8835  National Climate Change Strategy and Action Pl...   %5D %5B1956       9110                 National Policy for Climate Change   %5D %5B1957       9191  Presidential Decree 7/2019 establishing the na...   %5D %5B1958       8889  Act No. 28 of 1972 concerning nuclear energy a...   %5D %5B1959       8887  Natural Hazards Compensation Act %28No. 59 of 2014%29   %5D %5B%5D %5B                                       description_text  %5C%5D %5B0     This law promotes the development of a circula...   %5D %5B3     This document aims to protect Surin...%5D" isContainer="True" shape="(1680, 14)" />
<var name="X_test" type="DataFrame" qualifier="pandas.core.frame" value="description_text  %5C %5B1497  The Enemalta %28Transfer of Assets%2C Rights%2C Liab...   %5D %5B1517  The National Climate Change Policy%2C published ...   %5D %5B1244  This document sets the remuneration framework ...   %5D %5B249   This document sets the government%27s National T...   %5D %5B698   This document sets the government%27s energy pol...   %5D %5B...                                                 ...   %5D %5B1704  The goal of this regulation is to grant financ...   %5D %5B598   This law commits Ireland%27s national treasury t...   %5D %5B1533  The Democratic Republic of Congo%27s Disaster Re...   %5D %5B1903  The Small and Medium-sized Power Plant Act was...   %5D %5B240   The Strategic Investment Framework for Environ...   %5D %5B%5D %5B                                           policy_title  %5C%5D %5B1497  ACT No. XXXIV of 2014 and associated feed-in t...   %5D %5B1517            Myanmar National Climate Change Policy    %5D %5B1244  Royal Decree 960/2020 regulating the economic ...   %5D %5B249   National Transport Plan 2018-2029 %28Meld. St. 3......%5D" isContainer="True" shape="(249, 3)" />
<var name="X_train" type="DataFrame" qualifier="pandas.core.frame" value="description_text  %5C %5B946   This Act establishes the Energy Market Authori...   %5D %5B1077  This Act creates the Energy and Climate Fund. ...   %5D %5B753   This Strategy%2C developed in partnership with U...   %5D %5B917   Energy efficiency labelling requirements are s...   %5D %5B966   The law provided a legal framework to set up a...   %5D %5B...                                                 ...   %5D %5B220   South Africa%27s Sectoral Cold Spell Management ...   %5D %5B422   The Energy Efficiency Action Plan 2011%3F2020 le...   %5D %5B789   This law states that the State shall provide t...   %5D %5B1125  The Strategy aims to develop a sustainable ene...   %5D %5B404   The main objectives of Law 1391-V are to%3A %5Cn- ...   %5D %5B%5D %5B                                           policy_title  %5C%5D %5B946   Energy Market Authority of Singapore Act %28Chap...   %5D %5B1077                 Energy and Climate Fund Act %28EKFG%29   %5D %5B753   Decentralized Rural Electrification Strategy %28...   %5D %5B917   Energy Resources Regulations %28Energy labeling ......%5D" isContainer="True" shape="(503, 3)" />
<var name="_" type="dict" qualifier="builtins" value="%7B%27clf__classifier__n_estimators%27%3A 100%7D" isContainer="True" shape="1" isIPythonHidden="True" />
<var name="_11" type="DataFrame" qualifier="pandas.core.frame" value="num_labels  cumulative_positive_labels  %5C %5BEnergy                                1143                        1143   %5D %5BTransportation                         761                        1904   %5D %5BLULUCF                                 398                        2302   %5D %5BEconomy-wide                           366                        2668   %5D %5BResidential and Commercial             351                        3019   %5D %5BAgriculture                            305                        3324   %5D %5BWater                                  297                        3621   %5D %5BIndustry                               238                        3859   %5D %5BWaste                                  177                        4036   %5D %5BHealth                                 158                        4194   %5D %5BEnvironment                            127                        4321   %5D %5BUrban                                   73                        4394   %5D %5BBuildings                             ...%5D" isContainer="True" shape="(23, 3)" isIPythonHidden="True" />
<var name="_12" type="Figure" qualifier="plotly.graph_objs._figure" value="Figure%28%7B%0A    %27data%27%3A %5B%7B%27alignmentgroup%27%3A %27True%27%2C%0A              %27hovertemplate%27%3A %27index=%25%7Bx%7D%3Cbr&gt;num_labels=%25%7By%7D%3Cextra&gt;%3C/extra&gt;%27%2C%0A              %27legendgroup%27%3A %27%27%2C%0A              %27marker%27%3A %7B%27color%27%3A %27%23636efa%27%2C %27pattern%27%3A %7B%27shape%27%3A %27%27%7D%7D%2C%0A              %27name%27%3A %27%27%2C%0A              %27offsetgroup%27%3A %27%27%2C%0A              %27orientation%27%3A %27v%27%2C%0A              %27showlegend%27%3A False%2C%0A              %27textposition%27%3A %27auto%27%2C%0A              %27type%27%3A %27bar%27%2C%0A              %27x%27%3A array%28%5B%27Energy%27%2C %27Transportation%27%2C %27LULUCF%27%2C %27Economy-wide%27%2C%0A                          %27Residential and Commercial%27%2C %27Agriculture%27%2C %27Water%27%2C %27Industry%27%2C%0A                          %27Waste%27%2C %27Health%27%2C %27Environment%27%2C %27Urban%27%2C %27Buildings%27%2C %27Tourism%27%2C%0A                          %27Social development%27%2C %27Disaster Risk Management %28Drm%29%27%2C %27Coastal zones%27%2C%0A                          %27Rural%27%2C %27Adaptation%27%2C %27Cross Cutting Area%27%2C %27Public Sector%27%2C %27Other%27%2C%0A                          %27Finance%27%5D%2C dtype=object%29%2C%0A              %27xaxis%27%3A %27x%27%2C%0A              %27y%27%3A array%28%5B1143..." isContainer="True" isIPythonHidden="True" />
<var name="_13" type="AxesSubplot" qualifier="matplotlib.axes._subplots" value="AxesSubplot%280.125%2C0.125%3B0.62x0.755%29" isContainer="True" isIPythonHidden="True" />
<var name="_14" type="Figure" qualifier="plotly.graph_objs._figure" value="Figure%28%7B%0A    %27data%27%3A %5B%7B%27alignmentgroup%27%3A %27True%27%2C%0A              %27bingroup%27%3A %27x%27%2C%0A              %27hovertemplate%27%3A %27variable=sectors_list%3Cbr&gt;value=%25%7Bx%7D%3Cbr&gt;count=%25%7By%7D%3Cextra&gt;%3C/extra&gt;%27%2C%0A              %27legendgroup%27%3A %27sectors_list%27%2C%0A              %27marker%27%3A %7B%27color%27%3A %27%23636efa%27%2C %27pattern%27%3A %7B%27shape%27%3A %27%27%7D%7D%2C%0A              %27name%27%3A %27sectors_list%27%2C%0A              %27offsetgroup%27%3A %27sectors_list%27%2C%0A              %27orientation%27%3A %27v%27%2C%0A              %27showlegend%27%3A True%2C%0A              %27type%27%3A %27histogram%27%2C%0A              %27x%27%3A array%28%5B3%2C 6%2C 1%2C ...%2C 5%2C 1%2C 1%5D%29%2C%0A              %27xaxis%27%3A %27x%27%2C%0A              %27yaxis%27%3A %27y%27%7D%5D%2C%0A    %27layout%27%3A %7B%27barmode%27%3A %27relative%27%2C%0A               %27legend%27%3A %7B%27title%27%3A %7B%27text%27%3A %27variable%27%7D%2C %27tracegroupgap%27%3A 0%7D%2C%0A               %27template%27%3A %27...%27%2C%0A               %27title%27%3A %7B%27text%27%3A %27num labels per instance%27%7D%2C%0A               %27xaxis%27%3A %7B%27anchor%27%3A %27y%27%2C %27domain%27%3A %5B0.0%2C 1.0%5D%2C %27title%27%3A %7B%27text%27%3A %27value%27%7D%7D%2C%0A               %27yaxis%27%3A %7B%27anchor%27%3A %27x%27%2C %27domain%27%3A %5B0.0%2C 1.0%5D%2C %27title%27%3A %7B%27text%27%3A %27count%27%7D%7D%7D%0A%7D%29" isContainer="True" isIPythonHidden="True" />
<var name="_15" type="Series" qualifier="pandas.core.series" value="%28%27Energy%27%2C 365%29 %28%27Economy-wide%27%2C 144%29 %28%27Transportation%3BEnergy%27%2C 117%29 %28%27Transportation%27%2C 112%29 %28%27Energy%3BResidential and Commercial%27%2C 63%29 %28%27LULUCF%27%2C 58%29 %28%27Transportation%3BEnergy%3BResidential and Commercial%27%2C 30%29 %28%27Agriculture%27%2C 26%29 %28%27Transportation%3BLULUCF%27%2C 24%29 %28%27Industry%3BEnergy%27%2C 24%29" isContainer="True" shape="(10,)" isIPythonHidden="True" />
<var name="_18" type="AxesSubplot" qualifier="matplotlib.axes._subplots" value="AxesSubplot%280.125%2C0.125%3B0.62x0.755%29" isContainer="True" isIPythonHidden="True" />
<var name="_24" type="Run" qualifier="wandb.sdk.wandb_run" value="%3Cwandb.sdk.wandb_run.Run object at 0x7fdea06a8400&gt;" isContainer="True" isIPythonHidden="True" />
<var name="_26" type="dict" qualifier="builtins" value="%7B%27memory%27%3A None%2C %27steps%27%3A %5B%28%27features%27%2C FeatureUnion%28transformer_list=%5B%28%27pipeline_text%27%2C%0A                                Pipeline%28steps=%5B%28%27select_text_col%27%2C%0A                                                 FunctionTransformer%28func=%3Cfunction select_col at 0x7fdf1be14310&gt;%29%29%2C%0A                                                %28%27tfidf%27%2C%0A                                                 TfidfVectorizer%28lowercase=False%2C%0A                                                                 max_df=0.5%2C%0A                                                                 stop_words=%27english%27%29%29%5D%29%29%2C%0A                               %28%27feature_engineering%27%2C%0A                                TextFeatureEngineering%28%29%29%5D%29%29%2C %28%27clf%27%2C ClassifierChain%28classifier=RandomForestClassifier%28%29%2C require_dense=%5BTrue%2C True%5D%29%29%5D%2C %27verbose%27%3A False%2C %27features%27%3A FeatureUnion%28transformer_list=%5B%28%27pipeline_text%27%2C%0A                                Pipeline%28steps=%5B%28%27select_text_col%27%2C%0A                                                 FunctionTran..." isContainer="True" shape="66" isIPythonHidden="True" />
<var name="_27" type="dict" qualifier="builtins" value="%7B%27classifier%27%3A RandomForestClassifier%28%29%2C %27classifier__bootstrap%27%3A True%2C %27classifier__ccp_alpha%27%3A 0.0%2C %27classifier__class_weight%27%3A None%2C %27classifier__criterion%27%3A %27gini%27%2C %27classifier__max_depth%27%3A None%2C %27classifier__max_features%27%3A %27auto%27%2C %27classifier__max_leaf_nodes%27%3A None%2C %27classifier__max_samples%27%3A None%2C %27classifier__min_impurity_decrease%27%3A 0.0%2C %27classifier__min_samples_leaf%27%3A 1%2C %27classifier__min_samples_split%27%3A 2%2C %27classifier__min_weight_fraction_leaf%27%3A 0.0%2C %27classifier__n_estimators%27%3A 100%2C %27classifier__n_jobs%27%3A None%2C %27classifier__oob_score%27%3A False%2C %27classifier__random_state%27%3A None%2C %27classifier__verbose%27%3A 0%2C %27classifier__warm_start%27%3A False%2C %27require_dense%27%3A %5BTrue%2C True%5D%2C %27order%27%3A None%7D" isContainer="True" shape="21" isIPythonHidden="True" />
<var name="_29" type="float64" qualifier="numpy" value="0.1382738095238095" shape="()" isIPythonHidden="True" />
<var name="_31" type="dict" qualifier="builtins" value="%7B%27clf__classifier__n_estimators%27%3A 100%7D" isContainer="True" shape="1" isIPythonHidden="True" />
<var name="_5" type="str" qualifier="builtins" value="/home/stefan/PycharmProjects/multi-label-classification-climate/notebooks" isIPythonHidden="True" />
<var name="_7" type="DataFrame" qualifier="pandas.core.frame" value="policy_id                       policy_title  %5C %5B0      10088     Circular economy promotion law   %5D %5B1      10087                14th Five-Year Plan   %5D %5B2      10046             National Forest Policy   %5D %5B3      10044   Suriname National REDD%2B Strategy   %5D %5B4      10042  Policy Development Plan 2017-2021   %5D %5B%5D %5B                                             sectors  %5C%5D %5B0                  Industry%3BAgriculture%3BEconomy-wide   %5D %5B1  Transportation%3BRural%3BLULUCF%3BEnergy%3BEconomy-wid...   %5D %5B2                                             LULUCF   %5D %5B3                                             LULUCF   %5D %5B4                                       Economy-wide   %5D %5B%5D %5B                                    description_text  %5D %5B0  This law promotes the development of a circula...  %5D %5B1  The 14th Five Year Plan lays down the strategy...  %5D %5B2  This document aims at protecting the country%27s...  %5D %5B3  This document aims to protect Suriname%27s fores...  %5D %5B4  This document lays out the country%27s developme...  %5D" isContainer="True" shape="(5, 4)" isIPythonHidden="True" />
<var name="__" type="float64" qualifier="numpy" value="0.1382738095238095" shape="()" isIPythonHidden="True" />
<var name="___" type="dict" qualifier="builtins" value="%7B%27classifier%27%3A RandomForestClassifier%28%29%2C %27classifier__bootstrap%27%3A True%2C %27classifier__ccp_alpha%27%3A 0.0%2C %27classifier__class_weight%27%3A None%2C %27classifier__criterion%27%3A %27gini%27%2C %27classifier__max_depth%27%3A None%2C %27classifier__max_features%27%3A %27auto%27%2C %27classifier__max_leaf_nodes%27%3A None%2C %27classifier__max_samples%27%3A None%2C %27classifier__min_impurity_decrease%27%3A 0.0%2C %27classifier__min_samples_leaf%27%3A 1%2C %27classifier__min_samples_split%27%3A 2%2C %27classifier__min_weight_fraction_leaf%27%3A 0.0%2C %27classifier__n_estimators%27%3A 100%2C %27classifier__n_jobs%27%3A None%2C %27classifier__oob_score%27%3A False%2C %27classifier__random_state%27%3A None%2C %27classifier__verbose%27%3A 0%2C %27classifier__warm_start%27%3A False%2C %27require_dense%27%3A %5BTrue%2C True%5D%2C %27order%27%3A None%7D" isContainer="True" shape="21" isIPythonHidden="True" />
<var name="__builtin__" type="module" qualifier="builtins" value="%3Cmodule %27builtins%27 %28built-in%29&gt;" isContainer="True" isIPythonHidden="True" />
<var name="__builtins__" type="module" qualifier="builtins" value="%3Cmodule %27builtins%27 %28built-in%29&gt;" isContainer="True" isIPythonHidden="True" />
<var name="__doc__" type="str" qualifier="builtins" value="Automatically created module for IPython interactive environment" isIPythonHidden="True" />
<var name="__loader__" type="NoneType" qualifier="builtins" value="None" isIPythonHidden="True" />
<var name="__name__" type="str" qualifier="builtins" value="__main__" isIPythonHidden="True" />
<var name="__package__" type="NoneType" qualifier="builtins" value="None" isIPythonHidden="True" />
<var name="__spec__" type="NoneType" qualifier="builtins" value="None" isIPythonHidden="True" />
<var name="_dh" type="list" qualifier="builtins" value="%5BPosixPath%28%27/home/stefan/PycharmProjects/multi-label-classification-climate/notebooks%27%29%5D" isContainer="True" shape="1" isIPythonHidden="True" />
<var name="_i" type="str" qualifier="builtins" value="from sklearn.model_selection import GridSearchCV%0A%0Aparam_grid_random_forest = %7B%27clf__classifier__n_estimators%27%3A%5B10%2C 100%2C 1000%5D%7D%0Agrid = GridSearchCV%28full_pipe_rf%2C param_grid=param_grid_random_forest%2C scoring=make_scorer%28hamming_loss%29%2C cv=5%2C error_score=%27raise%27%29%0A%23 Do grid search and log the results.%0Agrid.fit%28X%2C y%29%0Awandb.log%28%7B%27grid_score%27%3A grid.best_score_%2C %27grid_std%27%3A grid.cv_results_%5B%27std_test_score%27%5D%5Bgrid.best_index_%5D%2C %27grid_params%27%3A grid.best_params_%7D%29" isIPythonHidden="True" />
<var name="_i1" type="str" qualifier="builtins" value="import sys%0A%0A%0A%0A%25load_ext autoreload%0A%25autoreload 2" isIPythonHidden="True" />
<var name="_i10" type="str" qualifier="builtins" value="%23 Let%27s analyse the labels.%0Alabels_flattened=df%5B%27sectors_list%27%5D.explode%28%29%0Aunique_labels=labels_flattened.unique%28%29%0An_unique_labels=len%28unique_labels%29%0Aprint%28f%22There are %7Bn_unique_labels%7D classes with possible labels%3A %5Cn %7Bunique_labels%7D%22%29" isIPythonHidden="True" />
<var name="_i11" type="str" qualifier="builtins" value="%23 What are the cumulative totals for each label%3F%0Anum_instances_each_label=labels_flattened.value_counts%28%29%0Atotal_positive_labels=num_instances_each_label.sum%28%29%0Acumulative_sum=num_instances_each_label.cumsum%28%29%0Afraction_dataset_covered=cumulative_sum/total_positive_labels%0Adf_labels=pd.DataFrame%28%7B%27num_labels%27%3A num_instances_each_label%2C%0A                        %27cumulative_positive_labels%27%3A cumulative_sum%2C %0A                        %27cumulative_fraction_dataset_covered%27%3A fraction_dataset_covered%7D%29%0Adf_labels" isIPythonHidden="True" />
<var name="_i12" type="str" qualifier="builtins" value="px.bar%28df_labels%2C x=df_labels.index%2C y=%27num_labels%27%2C title=%27label distribution%27%29" isIPythonHidden="True" />
<var name="_i13" type="str" qualifier="builtins" value="%23 12 most under represented labels.%0Aunderrepresented_labels=df_labels%5B11%3A%5D.index%0A%0Amlb=MultiLabelBinarizer%28%29%0Ay = mlb.fit_transform%28df%5B%27sectors_list%27%5D%29%0A%23 Now let%27s look at the correlations between labels.%0Asns.heatmap%28pd.DataFrame%28y%2C columns=mlb.classes_%29.corr%28%29.loc%5Bunderrepresented_labels%5D%29" isIPythonHidden="True" />
<var name="_i14" type="str" qualifier="builtins" value="px.histogram%28df%5B%27sectors_list%27%5D.apply%28len%29%2C title=%27num labels per instance%27%29" isIPythonHidden="True" />
<var name="_i15" type="str" qualifier="builtins" value="%23 Let%27s also check if there are any labels with an especially high number of classes such that we could change this to a multi-class problem%0A%23 instead of a multi-label problem.%0Adf%5B%27sectors%27%5D.value_counts%28%29.head%2810%29" isIPythonHidden="True" />
<var name="_i16" type="str" qualifier="builtins" value="common_labels=df_labels.index%5B0%3AKEEP_MOST_COMMON_LABELS%5D%0A%0A%23 Only keep sectors in top n labels%0Adf%5B%27sectors_list%27%5D = df%5B%27sectors_list%27%5D.apply%28lambda x%3A %5Btag for tag in x if tag in common_labels%5D%29%0Adf_filtered = df.copy%28%29%5Bdf%5B%27sectors_list%27%5D.str.len%28%29&gt;0%5D%0Adf_filtered.drop%28columns=%27sectors%27%2Cinplace=True%29" isIPythonHidden="True" />
<var name="_i17" type="str" qualifier="builtins" value="y = mlb.fit_transform%28df_filtered%5B%27sectors_list%27%5D%29%0A%0A%23 Split%0Adf_eda%2C df_test%2C y_eda%2C y_test = iter_train_test_split%28%0A    df_filtered%2C y%2C train_size=1-TEST_SET_FRAC%29%0A%0A%0Ay_eda_df = pd.DataFrame%28y_eda%2C columns = mlb.classes_%29" isIPythonHidden="True" />
<var name="_i18" type="str" qualifier="builtins" value="%23 Now let%27s look at the correlations between labels.%0Asns.heatmap%28y_eda_df.corr%28%29%29" isIPythonHidden="True" />
<var name="_i19" type="str" qualifier="builtins" value="%23 Let%27s do a quick analysis of a bunch of statistics from the text columns. %0A%0Adf_eda=df_eda.copy%28%29 %23 Suppress warnings%0Adf_eda%5B%27full_text%27%5D= df_eda%5B%27policy_title%27%5D%2B%27%3A %27%2Bdf_eda%5B%27description_text%27%5D %23 Concat text columns%0A%0Atext_cols=%5B%27description_text%27%2C %27policy_title%27%2C %27full_text%27%5D%0Atext_cols_n_words = %5Bf%27%7Bx%7D_nwords%27 for x in text_cols%5D%0Afor col in text_cols%3A%0A    df_eda%5Bf%27%7Bcol%7D_nwords%27%5D=df_eda%5Bcol%5D.str.split%28%29.str.len%28%29%0A    %0Adef subplot_helper%28cols%3A list%29 -&gt; None%3A%0A    fig=make_subplots%283%2C1%2C subplot_titles=cols%29%0A    for i%2C col in enumerate%28cols%29%3A%0A        trace=go.Histogram%28x=df_eda%5Bcol%5D%29%0A        fig.append_trace%28trace%2C i%2B1%2C1%29%0A    %0A    fig.update_layout%28height=700%2C width=800%29%0A    fig.show%28%29%0A%0Asubplot_helper%28text_cols_n_words%29" isIPythonHidden="True" />
<var name="_i2" type="str" qualifier="builtins" value="from src.sklearn_utils import iter_train_test_split%2C simple_feature_engineering%0Afrom sklearn.ensemble import GradientBoostingClassifier" isIPythonHidden="True" />
<var name="_i20" type="str" qualifier="builtins" value="tokenizer = AutoTokenizer.from_pretrained%28%27distilbert-base-cased%27%29%0Afor col in text_cols%3A%0A    df_eda%5Bf%27%7Bcol%7D_tokens%27%5D=df_eda%5Bcol%5D.apply%28lambda x%3A tokenizer.tokenize%28x%29%29%0A    df_eda%5Bf%27%7Bcol%7D_ntokens%27%5D=df_eda%5Bf%27%7Bcol%7D_tokens%27%5D.str.len%28%29%0A%0Atext_cols_n_tokens = %5Bf%27%7Bx%7D_ntokens%27 for x in text_cols%5D%0Asubplot_helper%28text_cols_n_tokens%29" isIPythonHidden="True" />
<var name="_i21" type="str" qualifier="builtins" value="%23 Let%27s see what happens if we subset the dataset so that it only contains rows with a single label%0A%23 and visualise the separation between classes to get%0Adf_single_label=df_eda%5Bdf_eda%5B%27sectors_list%27%5D.apply%28len%29==1%5D%0AX%2C y = df_single_label%5B%5B%27description_text%27%2C%27policy_title%27%2C%27full_text%27%5D%5D%2C df_single_label%5B%27sectors_list%27%5D.apply%28lambda x%3A x%5B0%5D%29%0AX_train%2C X_test%2C y_train%2C y_test = train_test_split%28%0A     X%2C y%2C test_size=0.33%2C random_state=SEED%29%0A%0Adef tsne_plot%28X_train%2C X_test%2C y_train%2C y_test%2C col%3A str%29%3A%0A    %22%22%22%0A    Helper to plot tsne visualisations on train and test set for a tfidf transformed column.%0A    %22%22%22%0A    tfidf = TfidfVectorizer%28%29%0A    tfidf.fit_transform%28X_train%5Bcol%5D%29%0A    train_features = tfidf.transform%28X_train%5Bcol%5D%29%0A    test_features = tfidf.transform%28X_test%5Bcol%5D%29%0A    tsne_train = TSNEVisualizer%28decompose_by=24%2C title=f%27Train set%3A %7Bcol%7D%27%29%0A    tsne_train.fit%28train_features%2C y_train%29%0A    tsne_train.show%28%29%0A    tsne_test = TSNEVisualizer%28decompose_by=24%2C title=f%27Test set%3A %7Bcol%7D%27%29%0A    ts..." isIPythonHidden="True" />
<var name="_i22" type="str" qualifier="builtins" value="from src.sklearn_utils import TextFeatureEngineering%2C select_col%2C construct_pipeline" isIPythonHidden="True" />
<var name="_i23" type="str" qualifier="builtins" value="X%2C y = df_eda%2C mlb.fit_transform%28df_eda%5B%27sectors_list%27%5D%29" isIPythonHidden="True" />
<var name="_i24" type="str" qualifier="builtins" value="import wandb%0Awandb.init%28project=%22climate-multi-label-classification%22%2C entity=%22stefl14%22%29" isIPythonHidden="True" />
<var name="_i25" type="str" qualifier="builtins" value="def select_col%28df%2C col=%27full_text%27%29%3A %23 lambda%27s not picklable%2C hence this one liner.%0A    return df%5Bcol%5D%0A%0Afull_pipe_rf=construct_pipeline%28%29%0Afull_pipe_gb=construct_pipeline%28clf=GradientBoostingClassifier%28%29%29%0A%0A%23 cv_score=cross_val_score%28full_pipe_rf%2C X%2C y%2C scoring=make_scorer%28hamming_loss%29%2C cv=5%2C error_score=%27raise%27%29%0A%23%0A%23 %23 fit full_pipe and log the results.%0A%23 full_pipe_rf.fit%28X%2C y%29%0A%23 wandb.log%28%7B%27cv_score%27%3A cv_score.mean%28%29%2C %27cv_std%27%3A cv_score.std%28%29%7D%29" isIPythonHidden="True" />
<var name="_i26" type="str" qualifier="builtins" value="full_pipe_rf.get_params%28%29" isIPythonHidden="True" />
<var name="_i27" type="str" qualifier="builtins" value="full_pipe_rf.named_steps%5B%27clf%27%5D.get_params%28%29" isIPythonHidden="True" />
<var name="_i28" type="str" qualifier="builtins" value="from sklearn.model_selection import GridSearchCV%0A%0Aparam_grid_random_forest = %7B%27clf__classifier__n_estimators%27%3A%5B100%2C 200%5D%7D%0Agrid = GridSearchCV%28full_pipe_rf%2C param_grid=param_grid_random_forest%2C scoring=make_scorer%28hamming_loss%29%2C cv=5%2C error_score=%27raise%27%29%0A%23 Do grid search and log the results.%0Agrid.fit%28X%2C y%29%0Awandb.log%28%7B%27grid_score%27%3A grid.best_score_%2C %27grid_std%27%3A grid.cv_results_%5B%27std_test_score%27%5D%5Bgrid.best_index_%5D%7D%29" isIPythonHidden="True" />
<var name="_i29" type="str" qualifier="builtins" value="grid.best_score_" isIPythonHidden="True" />
<var name="_i3" type="str" qualifier="builtins" value="import pandas as pd%0Aimport numpy as np%0Aimport os%0Aimport plotly.express as px%0Afrom skmultilearn.model_selection import IterativeStratification%0Afrom sklearn.model_selection import train_test_split%0Afrom sklearn.preprocessing import MultiLabelBinarizer%0Afrom sklearn.dummy import DummyClassifier%0Afrom sklearn.metrics import hamming_loss%0Aimport seaborn as sns%0A%0Afrom sklearn.feature_extraction.text import TfidfVectorizer%0A%0Afrom yellowbrick.text import TSNEVisualizer%0Afrom yellowbrick.datasets import load_hobbies%0A%23 import tensorflow_addons as tfa%0Afrom sklearn.metrics import hamming_loss%0A%0Afrom skmultilearn.problem_transform import ClassifierChain%0Afrom sklearn.metrics import hamming_loss%2C accuracy_score%2C make_scorer%0Afrom sklearn.feature_extraction.text import CountVectorizer%2C TfidfVectorizer%0Afrom sklearn.naive_bayes import MultinomialNB%0Afrom sklearn.pipeline import Pipeline%0Afrom sklearn.linear_model import Lasso%0Afrom sklearn.model_selection import cross_val_score%0Afrom datetime import time%0A%0Afrom trans..." isIPythonHidden="True" />
<var name="_i30" type="str" qualifier="builtins" value="from sklearn.model_selection import GridSearchCV%0A%0Aparam_grid_random_forest = %7B%27clf__classifier__n_estimators%27%3A%5B100%2C 200%5D%7D%0Agrid = GridSearchCV%28full_pipe_rf%2C param_grid=param_grid_random_forest%2C scoring=make_scorer%28hamming_loss%29%2C cv=5%2C error_score=%27raise%27%29%0A%23 Do grid search and log the results.%0Agrid.fit%28X%2C y%29%0Awandb.log%28%7B%27grid_score%27%3A grid.best_score_%2C %27grid_std%27%3A grid.cv_results_%5B%27std_test_score%27%5D%5Bgrid.best_index_%5D%2C %27grid_params%27%3A grid.best_params_%7D%29" isIPythonHidden="True" />
<var name="_i31" type="str" qualifier="builtins" value="grid.best_params_" isIPythonHidden="True" />
<var name="_i32" type="str" qualifier="builtins" value="wandb.log%28%7B%27grid_score%27%3A grid.best_score_%2C %27grid_std%27%3A grid.cv_results_%5B%27std_test_score%27%5D%5Bgrid.best_index_%5D%2C %27grid_params%27%3A grid.best_params_%7D%29" isIPythonHidden="True" />
<var name="_i33" type="str" qualifier="builtins" value="from sklearn.model_selection import GridSearchCV%0A%0Aparam_grid_random_forest = %7B%27clf__classifier__n_estimators%27%3A%5B10%2C 100%2C 1000%5D%7D%0Agrid = GridSearchCV%28full_pipe_rf%2C param_grid=param_grid_random_forest%2C scoring=make_scorer%28hamming_loss%29%2C cv=5%2C error_score=%27raise%27%29%0A%23 Do grid search and log the results.%0Agrid.fit%28X%2C y%29%0Awandb.log%28%7B%27grid_score%27%3A grid.best_score_%2C %27grid_std%27%3A grid.cv_results_%5B%27std_test_score%27%5D%5Bgrid.best_index_%5D%2C %27grid_params%27%3A grid.best_params_%7D%29" isIPythonHidden="True" />
<var name="_i34" type="str" qualifier="builtins" value="param_grid_gb = %7B%27clf__classifier__max_depth%27%3A%5B2%2C 4%2C 6%5D%7D%0Agrid = GridSearchCV%28full_pipe_gb%2C param_grid=param_grid_gb%2C scoring=make_scorer%28hamming_loss%29%2C cv=5%2C error_score=%27raise%27%29%0Agrid.fit%28X%2C y%29%0Awandb.log%28%7B%27grid_score%27%3A grid.best_score_%2C %27grid_std%27%3A grid.cv_results_%5B%27std_test_score%27%5D%5Bgrid.best_index_%5D%2C %27grid_params%27%3A grid.best_params_%7D%29" isIPythonHidden="True" />
<var name="_i4" type="str" qualifier="builtins" value="def create_tokenized_ds%28%0A    X%2C y%2C text_column=%22description_text%22%2C model_name=%22bert-base-cased%22%2C batch_size=16%0A%29%3A%0A    y = np.array%28y%2C dtype=%22int32%22%29%0A    X = X%5Btext_column%5D%0A    tokens = tokenizer%28%0A        list%28X%29%2C%0A        padding=%22max_length%22%2C%0A        truncation=True%2C%0A        return_tensors=%22tf%22%2C%0A        return_token_type_ids=False%2C%0A    %29%0A    tokens_w_labels = tokens.copy%28%29%0A    tokens_w_labels%5B%22target%22%5D = y%0A    tf_dataset = tf.data.Dataset.from_tensor_slices%28%28dict%28tokens_w_labels%29%2C y%29%29%0A    tf_dataset = tf_dataset.shuffle%28len%28tf_dataset%29%29.batch%28batch_size%29%0A    return tf_dataset%0A%0A%0Aimport keras%0A%0AK = keras.backend%0A%0A%0Aclass ExponentialLearningRate%28keras.callbacks.Callback%29%3A%0A    def __init__%28self%2C factor%29%3A%0A        self.factor = factor%0A        self.rates = %5B%5D%0A        self.losses = %5B%5D%0A%0A    def on_batch_end%28self%2C batch%2C logs%29%3A%0A        self.rates.append%28K.get_value%28self.model.optimizer.learning_rate%29%29%0A        self.losses.append%28logs%5B%22loss%22%5D%29%0A        K.set_value%28%0A            self.model.optimizer.le..." isIPythonHidden="True" />
<var name="_i5" type="str" qualifier="builtins" value="os.getcwd%28%29" isIPythonHidden="True" />
<var name="_i6" type="str" qualifier="builtins" value="%23 Constants%0ASEED=42%0AHOLD_OUT_PERCENTAGE=10%0AITERATIVE_STRAT_ORDER=1%0AKEEP_MOST_COMMON_LABELS=10%0ABATCH_SIZE=16%0ATRAIN_FRACTION=0.9%0AHUGGINGFACE_CONFIG=%27distilbert-base-cased%27%0ATEST_SET_FRAC=.1" isIPythonHidden="True" />
<var name="_i7" type="str" qualifier="builtins" value="data_path = Path%28os.path.abspath%28%27%27%29%29.parent / %27data%27 / %27recruitment-task_1-full.csv%27%0A%0Adf=pd.read_csv%28%27/home/stefan/PycharmProjects/multi-label-classification-climate/data/recruitment-task_1-full.csv%27%29%0Adf.head%28%29" isIPythonHidden="True" />
<var name="_i8" type="str" qualifier="builtins" value="df.info%28%29" isIPythonHidden="True" />
<var name="_i9" type="str" qualifier="builtins" value="%23 Parse labels into a list.%0Adf%5B%27sectors_list%27%5D=df%5B%27sectors%27%5D.str.split%28%22%3B%22%29%0Adf=df%5B~df.description_text.duplicated%28%29%5D %23 Found a duplicated entry" isIPythonHidden="True" />
<var name="_ih" type="list" qualifier="builtins" value="%5B%27%27%2C %22import sys%5Cn%5Cn%5Cn%5Cnget_ipython%28%29.run_line_magic%28%27load_ext%27%2C %27autoreload%27%29%5Cnget_ipython%28%29.run_line_magic%28%27autoreload%27%2C %272%27%29%22%2C %27from src.sklearn_utils import iter_train_test_split%2C simple_feature_engineering%5Cnfrom sklearn.ensemble import GradientBoostingClassifier%27%2C %27import pandas as pd%5Cnimport numpy as np%5Cnimport os%5Cnimport plotly.express as px%5Cnfrom skmultilearn.model_selection import IterativeStratification%5Cnfrom sklearn.model_selection import train_test_split%5Cnfrom sklearn.preprocessing import MultiLabelBinarizer%5Cnfrom sklearn.dummy import DummyClassifier%5Cnfrom sklearn.metrics import hamming_loss%5Cnimport seaborn as sns%5Cn%5Cnfrom sklearn.feature_extraction.text import TfidfVectorizer%5Cn%5Cnfrom yellowbrick.text import TSNEVisualizer%5Cnfrom yellowbrick.datasets import load_hobbies%5Cn%23 import tensorflow_addons as tfa%5Cnfrom sklearn.metrics import hamming_loss%5Cn%5Cnfrom skmultilearn.problem_transform import ClassifierChain%5Cnfrom sklearn.metrics import hamming_loss%2C accuracy_score%2C make_scorer..." isContainer="True" shape="35" isIPythonHidden="True" />
<var name="_ii" type="str" qualifier="builtins" value="wandb.log%28%7B%27grid_score%27%3A grid.best_score_%2C %27grid_std%27%3A grid.cv_results_%5B%27std_test_score%27%5D%5Bgrid.best_index_%5D%2C %27grid_params%27%3A grid.best_params_%7D%29" isIPythonHidden="True" />
<var name="_iii" type="str" qualifier="builtins" value="grid.best_params_" isIPythonHidden="True" />
<var name="_oh" type="dict" qualifier="builtins" value="%7B5%3A %27/home/stefan/PycharmProjects/multi-label-classification-climate/notebooks%27%2C 7%3A    policy_id                       policy_title  %5C%0A0      10088     Circular economy promotion law   %0A1      10087                14th Five-Year Plan   %0A2      10046             National Forest Policy   %0A3      10044   Suriname National REDD%2B Strategy   %0A4      10042  Policy Development Plan 2017-2021   %0A%0A                                             sectors  %5C%0A0                  Industry%3BAgriculture%3BEconomy-wide   %0A1  Transportation%3BRural%3BLULUCF%3BEnergy%3BEconomy-wid...   %0A2                                             LULUCF   %0A3                                             LULUCF   %0A4                                       Economy-wide   %0A%0A                                    description_text  %0A0  This law promotes the development of a circula...  %0A1  The 14th Five Year Plan lays down the strategy...  %0A2  This document aims at protecting the country%27s...  %0A3  This document aims to protect Suriname%27s fores......" isContainer="True" shape="13" isIPythonHidden="True" />
<var name="_pydevd_bundle" type="module" qualifier="builtins" value="%3Cmodule %27_pydevd_bundle%27 from %27/snap/pycharm-professional/290/plugins/python/helpers/pydev/_pydevd_bundle/__init__.py%27&gt;" isContainer="True" />
<var name="accuracy_score" type="function" qualifier="builtins" value="%3Cfunction accuracy_score at 0x7fdf48fbb8b0&gt;" isContainer="True" />
<var name="col" type="str" qualifier="builtins" value="full_text" />
<var name="common_labels" type="Index" qualifier="pandas.core.indexes.base" value="Index%28%5B%27Energy%27%2C %27Transportation%27%2C %27LULUCF%27%2C %27Economy-wide%27%2C%0A       %27Residential and Commercial%27%2C %27Agriculture%27%2C %27Water%27%2C %27Industry%27%2C%0A       %27Waste%27%2C %27Health%27%5D%2C%0A      dtype=%27object%27%29" isContainer="True" shape="(10,)" />
<var name="construct_pipeline" type="function" qualifier="builtins" value="%3Cfunction construct_pipeline at 0x7fdf1be14a60&gt;" isContainer="True" />
<var name="create_tokenized_ds" type="function" qualifier="builtins" value="%3Cfunction create_tokenized_ds at 0x7fdf196f1790&gt;" isContainer="True" />
<var name="cross_val_score" type="function" qualifier="builtins" value="%3Cfunction cross_val_score at 0x7fdf48eb9b80&gt;" isContainer="True" />
<var name="cumulative_sum" type="Series" qualifier="pandas.core.series" value="%28%27Energy%27%2C 1143%29 %28%27Transportation%27%2C 1904%29 %28%27LULUCF%27%2C 2302%29 %28%27Economy-wide%27%2C 2668%29 %28%27Residential and Commercial%27%2C 3019%29 %28%27Agriculture%27%2C 3324%29 %28%27Water%27%2C 3621%29 %28%27Industry%27%2C 3859%29 %28%27Waste%27%2C 4036%29 %28%27Health%27%2C 4194%29 %28%27Environment%27%2C 4321%29 %28%27Urban%27%2C 4394%29 %28%27Buildings%27%2C 4459%29 %28%27Tourism%27%2C 4511%29 %28%27Social development%27%2C 4556%29 %28%27Disaster Risk Management %28Drm%29%27%2C 4589%29 %28%27Coastal zones%27%2C 4617%29 %28%27Rural%27%2C 4636%29 %28%27Adaptation%27%2C 4647%29 %28%27Cross Cutting Area%27%2C 4656%29 %28%27Public Sector%27%2C 4664%29 %28%27Other%27%2C 4670%29 %28%27Finance%27%2C 4675%29" isContainer="True" shape="(23,)" />
<var name="data_path" type="PosixPath" qualifier="pathlib" value="/home/stefan/PycharmProjects/multi-label-classification-climate/data/recruitment-task_1-full.csv" isContainer="True" />
<var name="df" type="DataFrame" qualifier="pandas.core.frame" value="policy_id                                       policy_title  %5C %5B0         10088                     Circular economy promotion law   %5D %5B1         10087                                14th Five-Year Plan   %5D %5B2         10046                             National Forest Policy   %5D %5B3         10044                   Suriname National REDD%2B Strategy   %5D %5B4         10042                  Policy Development Plan 2017-2021   %5D %5B...         ...                                                ...   %5D %5B1955       8835  National Climate Change Strategy and Action Pl...   %5D %5B1956       9110                 National Policy for Climate Change   %5D %5B1957       9191  Presidential Decree 7/2019 establishing the na...   %5D %5B1958       8889  Act No. 28 of 1972 concerning nuclear energy a...   %5D %5B1959       8887  Natural Hazards Compensation Act %28No. 59 of 2014%29   %5D %5B%5D %5B                                                sectors  %5C%5D %5B0                     Industry%3BAgriculture%3BEconomy-wide   %5D %5B1     Transportation%3BRural%3BLULUCF%3BEnergy%3B...%5D" isContainer="True" shape="(1959, 5)" />
<var name="df_eda" type="DataFrame" qualifier="pandas.core.frame" value="policy_id                                       policy_title  %5C %5B0         10088                     Circular economy promotion law   %5D %5B3         10044                   Suriname National REDD%2B Strategy   %5D %5B5         10049                               Energy Strategy 2050   %5D %5B6         10051                   Long-Term Climate Strategy%2C 2021   %5D %5B9         10054  Environmentally Sustainable Transport System P...   %5D %5B...         ...                                                ...   %5D %5B1955       8835  National Climate Change Strategy and Action Pl...   %5D %5B1956       9110                 National Policy for Climate Change   %5D %5B1957       9191  Presidential Decree 7/2019 establishing the na...   %5D %5B1958       8889  Act No. 28 of 1972 concerning nuclear energy a...   %5D %5B1959       8887  Natural Hazards Compensation Act %28No. 59 of 2014%29   %5D %5B%5D %5B                                       description_text  %5C%5D %5B0     This law promotes the development of a circula...   %5D %5B3     This document aims to protect Surin...%5D" isContainer="True" shape="(1680, 14)" />
<var name="df_filtered" type="DataFrame" qualifier="pandas.core.frame" value="policy_id                                       policy_title  %5C %5B0         10088                     Circular economy promotion law   %5D %5B1         10087                                14th Five-Year Plan   %5D %5B2         10046                             National Forest Policy   %5D %5B3         10044                   Suriname National REDD%2B Strategy   %5D %5B4         10042                  Policy Development Plan 2017-2021   %5D %5B...         ...                                                ...   %5D %5B1955       8835  National Climate Change Strategy and Action Pl...   %5D %5B1956       9110                 National Policy for Climate Change   %5D %5B1957       9191  Presidential Decree 7/2019 establishing the na...   %5D %5B1958       8889  Act No. 28 of 1972 concerning nuclear energy a...   %5D %5B1959       8887  Natural Hazards Compensation Act %28No. 59 of 2014%29   %5D %5B%5D %5B                                       description_text  %5C%5D %5B0     This law promotes the development of a circula...   %5D %5B1     The 14th Five Year Plan lays down t...%5D" isContainer="True" shape="(1879, 4)" />
<var name="df_labels" type="DataFrame" qualifier="pandas.core.frame" value="num_labels  cumulative_positive_labels  %5C %5BEnergy                                1143                        1143   %5D %5BTransportation                         761                        1904   %5D %5BLULUCF                                 398                        2302   %5D %5BEconomy-wide                           366                        2668   %5D %5BResidential and Commercial             351                        3019   %5D %5BAgriculture                            305                        3324   %5D %5BWater                                  297                        3621   %5D %5BIndustry                               238                        3859   %5D %5BWaste                                  177                        4036   %5D %5BHealth                                 158                        4194   %5D %5BEnvironment                            127                        4321   %5D %5BUrban                                   73                        4394   %5D %5BBuildings                             ...%5D" isContainer="True" shape="(23, 3)" />
<var name="df_single_label" type="DataFrame" qualifier="pandas.core.frame" value="policy_id                                       policy_title  %5C %5B3         10044                   Suriname National REDD%2B Strategy   %5D %5B5         10049                               Energy Strategy 2050   %5D %5B6         10051                   Long-Term Climate Strategy%2C 2021   %5D %5B9         10054  Environmentally Sustainable Transport System P...   %5D %5B10        10061  Uganda Green Growth Development Strategy 2017/...   %5D %5B...         ...                                                ...   %5D %5B1950       8704  National Strategy for Adaptation to Climate Ch...   %5D %5B1953       8766  Priority Framework for Action%3A Climate Change ...   %5D %5B1956       9110                 National Policy for Climate Change   %5D %5B1958       8889  Act No. 28 of 1972 concerning nuclear energy a...   %5D %5B1959       8887  Natural Hazards Compensation Act %28No. 59 of 2014%29   %5D %5B%5D %5B                                       description_text      sectors_list  %5C%5D %5B3     This document aims to protect Suriname%27s fores...          %5BLULUCF%5D   %5D %5B5    ...%5D" isContainer="True" shape="(752, 14)" />
<var name="df_test" type="DataFrame" qualifier="pandas.core.frame" value="policy_id                                       policy_title  %5C %5B1        10087                                14th Five-Year Plan   %5D %5B2        10046                             National Forest Policy   %5D %5B4        10042                  Policy Development Plan 2017-2021   %5D %5B7        10052                 Switzerland%E2%80%99s climate policy%2C 2018   %5D %5B8        10053       Smart Grid Development Master Plan 2015-2036   %5D %5B..         ...                                                ...   %5D %5B549       9133                     Law No. 293-Z on energy saving   %5D %5B552       9045                  Law No. 1136-XIV on energy saving   %5D %5B588       8784  Industrial Sector Plan for mitigation and Adap...   %5D %5B616       8687                              Pollution Control Act   %5D %5B760       4313          Second National Environmental Action Plan   %5D %5B%5D %5B                                      description_text  %5C%5D %5B1    The 14th Five Year Plan lays down the strategy...   %5D %5B2    This document aims at protecting the country%27s... ...%5D" isContainer="True" shape="(199, 4)" />
<var name="exit" type="ZMQExitAutocall" qualifier="IPython.core.autocall" value="%3CIPython.core.autocall.ZMQExitAutocall object at 0x7fdf59b7a1c0&gt;" isContainer="True" isIPythonHidden="True" />
<var name="fraction_dataset_covered" type="Series" qualifier="pandas.core.series" value="%28%27Energy%27%2C 0.24449197860962568%29 %28%27Transportation%27%2C 0.4072727272727273%29 %28%27LULUCF%27%2C 0.4924064171122995%29 %28%27Economy-wide%27%2C 0.5706951871657754%29 %28%27Residential and Commercial%27%2C 0.6457754010695187%29 %28%27Agriculture%27%2C 0.7110160427807487%29 %28%27Water%27%2C 0.7745454545454545%29 %28%27Industry%27%2C 0.8254545454545454%29 %28%27Waste%27%2C 0.8633155080213903%29 %28%27Health%27%2C 0.8971122994652406%29 %28%27Environment%27%2C 0.9242780748663102%29 %28%27Urban%27%2C 0.9398930481283423%29 %28%27Buildings%27%2C 0.9537967914438503%29 %28%27Tourism%27%2C 0.9649197860962567%29 %28%27Social development%27%2C 0.9745454545454545%29 %28%27Disaster Risk Management %28Drm%29%27%2C 0.9816042780748663%29 %28%27Coastal zones%27%2C 0.9875935828877005%29 %28%27Rural%27%2C 0.9916577540106952%29 %28%27Adaptation%27%2C 0.9940106951871658%29 %28%27Cross Cutting Area%27%2C 0.9959358288770054%29 %28%27Public Sector%27%2C 0.9976470588235294%29 %28%27Other%27%2C 0.9989304812834224%29 %28%27Finance%27%2C 1.0%29" isContainer="True" shape="(23,)" />
<var name="full_pipe_gb" type="Pipeline" qualifier="sklearn.pipeline" value="Pipeline%28steps=%5B%28%27features%27%2C%0A                 FeatureUnion%28transformer_list=%5B%28%27pipeline_text%27%2C%0A                                                 Pipeline%28steps=%5B%28%27select_text_col%27%2C%0A                                                                  FunctionTransformer%28func=%3Cfunction select_col at 0x7fdf1be14310&gt;%29%29%2C%0A                                                                 %28%27tfidf%27%2C%0A                                                                  TfidfVectorizer%28lowercase=False%2C%0A                                                                                  max_df=0.5%2C%0A                                                                                  stop_words=%27english%27%29%29%5D%29%29%2C%0A                                                %28%27feature_engineering%27%2C%0A                                                 TextFeatureEngineering%28%29%29%5D%29%29%2C%0A                %28%27clf%27%2C%0A                 ClassifierChain%28classifier=GradientBoostingClassifier%28%29%2C%0A                                 require_dense=%5BTrue%2C True%5D%29..." isContainer="True" shape="2" />
<var name="full_pipe_rf" type="Pipeline" qualifier="sklearn.pipeline" value="Pipeline%28steps=%5B%28%27features%27%2C%0A                 FeatureUnion%28transformer_list=%5B%28%27pipeline_text%27%2C%0A                                                 Pipeline%28steps=%5B%28%27select_text_col%27%2C%0A                                                                  FunctionTransformer%28func=%3Cfunction select_col at 0x7fdf1be14310&gt;%29%29%2C%0A                                                                 %28%27tfidf%27%2C%0A                                                                  TfidfVectorizer%28lowercase=False%2C%0A                                                                                  max_df=0.5%2C%0A                                                                                  stop_words=%27english%27%29%29%5D%29%29%2C%0A                                                %28%27feature_engineering%27%2C%0A                                                 TextFeatureEngineering%28%29%29%5D%29%29%2C%0A                %28%27clf%27%2C%0A                 ClassifierChain%28classifier=RandomForestClassifier%28%29%2C%0A                                 require_dense=%5BTrue%2C True%5D%29%29%5D%29" isContainer="True" shape="2" />
<var name="get_ipython" type="method" qualifier="builtins" value="%3Cbound method InteractiveShell.get_ipython of %3Cipykernel.zmqshell.ZMQInteractiveShell object at 0x7fdf59b5e520&gt;&gt;" isContainer="True" isIPythonHidden="True" />
<var name="go" type="module" qualifier="builtins" value="%3Cmodule %27plotly.graph_objects%27 from %27/home/stefan/anaconda3/envs/multi-label-classification-climate/lib/python3.9/site-packages/plotly/graph_objects/__init__.py%27&gt;" isContainer="True" />
<var name="grid" type="GridSearchCV" qualifier="sklearn.model_selection._search" value="GridSearchCV%28cv=5%2C error_score=%27raise%27%2C%0A             estimator=Pipeline%28steps=%5B%28%27features%27%2C%0A                                        FeatureUnion%28transformer_list=%5B%28%27pipeline_text%27%2C%0A                                                                        Pipeline%28steps=%5B%28%27select_text_col%27%2C%0A                                                                                         FunctionTransformer%28func=%3Cfunction select_col at 0x7fdf1be14310&gt;%29%29%2C%0A                                                                                        %28%27tfidf%27%2C%0A                                                                                         TfidfVectorizer%28lowercase=False%2C%0A                                                                                                         max_df=0.5%2C%0A                                                                                                         stop_words=%27english%27%29%29%5D%29%29%2C%0A                                                                       %28%27feature_engi..." isContainer="True" />
<var name="hamming_loss" type="function" qualifier="builtins" value="%3Cfunction hamming_loss at 0x7fdf48fc2280&gt;" isContainer="True" />
<var name="iter_train_test_split" type="function" qualifier="builtins" value="%3Cfunction iter_train_test_split at 0x7fdf1cce23a0&gt;" isContainer="True" />
<var name="joblib" type="module" qualifier="builtins" value="%3Cmodule %27joblib%27 from %27/home/stefan/anaconda3/envs/multi-label-classification-climate/lib/python3.9/site-packages/joblib/__init__.py%27&gt;" isContainer="True" />
<var name="labels_flattened" type="Series" qualifier="pandas.core.series" value="%280%2C %27Industry%27%29 %280%2C %27Agriculture%27%29 %280%2C %27Economy-wide%27%29 %281%2C %27Transportation%27%29 %281%2C %27Rural%27%29 %281%2C %27LULUCF%27%29 %281%2C %27Energy%27%29 %281%2C %27Economy-wide%27%29 %281%2C %27Agriculture%27%29 %282%2C %27LULUCF%27%29 %283%2C %27LULUCF%27%29 %284%2C %27Economy-wide%27%29 %285%2C %27Energy%27%29 %286%2C %27Economy-wide%27%29 %287%2C %27Economy-wide%27%29 %288%2C %27Energy%27%29 %289%2C %27Transportation%27%29 %2810%2C %27Economy-wide%27%29 %2811%2C %27Economy-wide%27%29 %2812%2C %27Economy-wide%27%29 %2813%2C %27Economy-wide%27%29 %2814%2C %27Economy-wide%27%29 %2815%2C %27Economy-wide%27%29 %2816%2C %27Social development%27%29 %2816%2C %27LULUCF%27%29 %2816%2C %27Economy-wide%27%29 %2817%2C %27Industry%27%29 %2818%2C %27Economy-wide%27%29 %2819%2C %27Agriculture%27%29 %2821%2C %27Energy%27%29 %2821%2C %27Economy-wide%27%29 %2821%2C %27Adaptation%27%29 %2822%2C %27Health%27%29 %2823%2C %27Economy-wide%27%29 %2824%2C %27Economy-wide%27%29 %2825%2C %27Transportation%27%29 %2826%2C %27LULUCF%27%29 %2827%2C %27Economy-wide%27%29 %2828%2C %27Adaptation%27%29 %2829%2C %27Buildings%27%29 %2830%2C %27Tourism%27%29 %2831%2C %27Environment%27%29 %2831%2C %27Energy%27%29 %2831%2C %27Economy-wide%27%29 %2832%2C %27Economy-wide%27%29 %2833%2C %27Transportation%27%29 %2834%2C %27Energy%27%29 %2834%2C %27Economy-wide%27%29 %2835%2C %27Economy-wide%27%29 %2835%2C %27Coastal zones%27%29 %2835%2C %27Adaptation%27%29 %2836%2C %27LULUCF%27%29 %2836%2C %27Energy%27%29 %2836%2C %27Economy-wide%27%29 %2837%2C %27LULUCF%27%29 %2838%2C %27Environment%27%29 %2839%2C %27LULUCF%27%29 %2839%2C %27Energy%27%29 %2840%2C %27Industry%27%29 %2840%2C %27Health%27%29 %2840%2C %27Economy-wide%27%29 %2840%2C %27Coastal zones%27%29 %2840%2C %27Buildings%27%29 %2841%2C %27Urban%27%29 %2841%2C %27Energy%27%29 %2842%2C %27Water%27%29 %2842%2C %27Cross Cutting Area%27%29 %2843%2C %27Economy-wide%27%29 %2844%2C %27Transportation%27%29 %2844%2C %27Public Sector%27%29 %2844%2C %27Buildings%27%29 %2845%2C %27Energy%27%29 %2846%2C %27Urban%27%29 %2846%2C %27LULUCF%27%29 %2846%2C %27Agriculture%27%29 %2847%2C %27Environment%27%29 %2848%2C %27LULUCF%27%29 %2849%2C %27Energy%27%29 %2849%2C %27Economy-wide%27%29 %2850%2C %27Residential and Commercial%27%29 %2850%2C %27Buildings%27%29 %2851%2C %27LULUCF%27%29 %2852%2C %27Economy-wide%27%29 %2853%2C %27Economy-wide%27%29 %2854%2C %27Economy-wide%27%29 %2855%2C %27Energy%27%29 %2856%2C %27Energy%27%29 %2857%2C %27Economy-wide%27%29 %2858%2C %27Economy-wide%27%29 %2859%2C %27Economy-wide%27%29 %2860%2C %27Economy-wide%27%29 %2861%2C %27Economy-wide%27%29 %2862%2C %27Transportation%27%29 %2863%2C %27Economy-wide%27%29 %2864%2C %27Economy-wide%27%29 %2865%2C %27Energy%27%29 %2866%2C %27Energy%27%29 %2867%2C %27Economy-wide%27%29 %2868%2C %27Transportation%27%29 %2869%2C %27Economy-wide%27%29" isContainer="True" shape="(4675,)" />
<var name="load_hobbies" type="function" qualifier="builtins" value="%3Cfunction load_hobbies at 0x7fdf1b790700&gt;" isContainer="True" />
<var name="logger" type="RootLogger" qualifier="logging" value="%3CRootLogger root %28CRITICAL%29&gt;" isContainer="True" />
<var name="logging" type="module" qualifier="builtins" value="%3Cmodule %27logging%27 from %27/home/stefan/anaconda3/envs/multi-label-classification-climate/lib/python3.9/logging/__init__.py%27&gt;" isContainer="True" />
<var name="make_scorer" type="function" qualifier="builtins" value="%3Cfunction make_scorer at 0x7fdf48eac670&gt;" isContainer="True" />
<var name="make_subplots" type="function" qualifier="builtins" value="%3Cfunction make_subplots at 0x7fdf1a24e790&gt;" isContainer="True" />
<var name="math" type="module" qualifier="builtins" value="%3Cmodule %27math%27 from %27/home/stefan/anaconda3/envs/multi-label-classification-climate/lib/python3.9/lib-dynload/math.cpython-39-x86_64-linux-gnu.so%27&gt;" isContainer="True" />
<var name="mlb" type="MultiLabelBinarizer" qualifier="sklearn.preprocessing._label" value="MultiLabelBinarizer%28%29" isContainer="True" />
<var name="n_unique_labels" type="int" qualifier="builtins" value="23" />
<var name="np" type="module" qualifier="builtins" value="%3Cmodule %27numpy%27 from %27/home/stefan/anaconda3/envs/multi-label-classification-climate/lib/python3.9/site-packages/numpy/__init__.py%27&gt;" isContainer="True" />
<var name="num_instances_each_label" type="Series" qualifier="pandas.core.series" value="%28%27Energy%27%2C 1143%29 %28%27Transportation%27%2C 761%29 %28%27LULUCF%27%2C 398%29 %28%27Economy-wide%27%2C 366%29 %28%27Residential and Commercial%27%2C 351%29 %28%27Agriculture%27%2C 305%29 %28%27Water%27%2C 297%29 %28%27Industry%27%2C 238%29 %28%27Waste%27%2C 177%29 %28%27Health%27%2C 158%29 %28%27Environment%27%2C 127%29 %28%27Urban%27%2C 73%29 %28%27Buildings%27%2C 65%29 %28%27Tourism%27%2C 52%29 %28%27Social development%27%2C 45%29 %28%27Disaster Risk Management %28Drm%29%27%2C 33%29 %28%27Coastal zones%27%2C 28%29 %28%27Rural%27%2C 19%29 %28%27Adaptation%27%2C 11%29 %28%27Cross Cutting Area%27%2C 9%29 %28%27Public Sector%27%2C 8%29 %28%27Other%27%2C 6%29 %28%27Finance%27%2C 5%29" isContainer="True" shape="(23,)" />
<var name="os" type="module" qualifier="builtins" value="%3Cmodule %27os%27 from %27/home/stefan/anaconda3/envs/multi-label-classification-climate/lib/python3.9/os.py%27&gt;" isContainer="True" />
<var name="param_grid_gb" type="dict" qualifier="builtins" value="%7B%27clf__classifier__max_depth%27%3A %5B2%2C 4%2C 6%5D%7D" isContainer="True" shape="1" />
<var name="param_grid_random_forest" type="dict" qualifier="builtins" value="%7B%27clf__classifier__n_estimators%27%3A %5B10%2C 100%2C 1000%5D%7D" isContainer="True" shape="1" />
<var name="pd" type="module" qualifier="builtins" value="%3Cmodule %27pandas%27 from %27/home/stefan/anaconda3/envs/multi-label-classification-climate/lib/python3.9/site-packages/pandas/__init__.py%27&gt;" isContainer="True" />
<var name="plt" type="module" qualifier="builtins" value="%3Cmodule %27matplotlib.pyplot%27 from %27/home/stefan/anaconda3/envs/multi-label-classification-climate/lib/python3.9/site-packages/matplotlib/pyplot.py%27&gt;" isContainer="True" />
<var name="print_columns" type="function" qualifier="builtins" value="%3Cfunction print_columns at 0x7fde80473550&gt;" isContainer="True" />
<var name="px" type="module" qualifier="builtins" value="%3Cmodule %27plotly.express%27 from %27/home/stefan/anaconda3/envs/multi-label-classification-climate/lib/python3.9/site-packages/plotly/express/__init__.py%27&gt;" isContainer="True" />
<var name="pydev_jupyter_vars" type="module" qualifier="builtins" value="%3Cmodule %27pydev_jupyter_vars%27 from %27/snap/pycharm-professional/290/plugins/python/helpers-pro/jupyter_debug/pydev_jupyter_vars.py%27&gt;" isContainer="True" />
<var name="quit" type="ZMQExitAutocall" qualifier="IPython.core.autocall" value="%3CIPython.core.autocall.ZMQExitAutocall object at 0x7fdf59b7a1c0&gt;" isContainer="True" isIPythonHidden="True" />
<var name="remove_imported_pydev_package" type="function" qualifier="builtins" value="%3Cfunction remove_imported_pydev_package at 0x7fdf1cd905e0&gt;" isContainer="True" />
<var name="select_col" type="function" qualifier="builtins" value="%3Cfunction select_col at 0x7fdeab42f0d0&gt;" isContainer="True" />
<var name="simple_feature_engineering" type="function" qualifier="builtins" value="%3Cfunction simple_feature_engineering at 0x7fdf1cb21af0&gt;" isContainer="True" />
<var name="sns" type="module" qualifier="builtins" value="%3Cmodule %27seaborn%27 from %27/home/stefan/anaconda3/envs/multi-label-classification-climate/lib/python3.9/site-packages/seaborn/__init__.py%27&gt;" isContainer="True" />
<var name="subplot_helper" type="function" qualifier="builtins" value="%3Cfunction subplot_helper at 0x7fdf0eee9f70&gt;" isContainer="True" />
<var name="sys" type="module" qualifier="builtins" value="%3Cmodule %27sys%27 %28built-in%29&gt;" isContainer="True" />
<var name="text_cols" type="list" qualifier="builtins" value="%5B%27description_text%27%2C %27policy_title%27%2C %27full_text%27%5D" isContainer="True" shape="3" />
<var name="text_cols_n_tokens" type="list" qualifier="builtins" value="%5B%27description_text_ntokens%27%2C %27policy_title_ntokens%27%2C %27full_text_ntokens%27%5D" isContainer="True" shape="3" />
<var name="text_cols_n_words" type="list" qualifier="builtins" value="%5B%27description_text_nwords%27%2C %27policy_title_nwords%27%2C %27full_text_nwords%27%5D" isContainer="True" shape="3" />
<var name="time" type="type" qualifier="builtins" value="%3Cclass %27datetime.time%27&gt;" isContainer="True" />
<var name="tokenizer" type="DistilBertTokenizerFast" qualifier="transformers.models.distilbert.tokenization_distilbert_fast" value="PreTrainedTokenizerFast%28name_or_path=%27distilbert-base-cased%27%2C vocab_size=28996%2C model_max_len=512%2C is_fast=True%2C padding_side=%27right%27%2C truncation_side=%27right%27%2C special_tokens=%7B%27unk_token%27%3A %27%5BUNK%5D%27%2C %27sep_token%27%3A %27%5BSEP%5D%27%2C %27pad_token%27%3A %27%5BPAD%5D%27%2C %27cls_token%27%3A %27%5BCLS%5D%27%2C %27mask_token%27%3A %27%5BMASK%5D%27%7D%29" isContainer="True" shape="28996" />
<var name="total_positive_labels" type="int64" qualifier="numpy" value="4675" isContainer="True" shape="()" />
<var name="train_test_split" type="function" qualifier="builtins" value="%3Cfunction train_test_split at 0x7fdf1c8fb790&gt;" isContainer="True" />
<var name="tsne_plot" type="function" qualifier="builtins" value="%3Cfunction tsne_plot at 0x7fdf195f7dc0&gt;" isContainer="True" />
<var name="underrepresented_labels" type="Index" qualifier="pandas.core.indexes.base" value="Index%28%5B%27Urban%27%2C %27Buildings%27%2C %27Tourism%27%2C %27Social development%27%2C%0A       %27Disaster Risk Management %28Drm%29%27%2C %27Coastal zones%27%2C %27Rural%27%2C%0A       %27Adaptation%27%2C %27Cross Cutting Area%27%2C %27Public Sector%27%2C %27Other%27%2C%0A       %27Finance%27%5D%2C%0A      dtype=%27object%27%29" isContainer="True" shape="(12,)" />
<var name="unique_labels" type="ndarray" qualifier="numpy" value="%5B%27Industry%27 %27Agriculture%27 %27Economy-wide%27 %27Transportation%27 %27Rural%27 %27LULUCF%27%2C %27Energy%27 %27Social development%27 %27Adaptation%27 %27Health%27 %27Buildings%27 %27Tourism%27%2C %27Environment%27 %27Coastal zones%27 %27Urban%27 %27Water%27 %27Cross Cutting Area%27%2C %27Public Sector%27 %27Residential and Commercial%27 %27Finance%27 %27Waste%27 %27Other%27%2C %27Disaster Risk Management %28Drm%29%27%5D" isContainer="True" shape="(23,)" />
<var name="wandb" type="module" qualifier="builtins" value="%3Cmodule %27wandb%27 from %27/home/stefan/anaconda3/envs/multi-label-classification-climate/lib/python3.9/site-packages/wandb/__init__.py%27&gt;" isContainer="True" />
<var name="y" type="ndarray" qualifier="numpy" value="%5B%5B1 1 0 0 1 0 0 0 0 0%5D%2C %5B0 0 0 0 0 1 0 0 0 0%5D%2C %5B0 0 1 0 0 0 0 0 0 0%5D%2C %5B0 1 0 0 0 0 0 0 0 0%5D%2C %5B0 0 0 0 0 0 0 1 0 0%5D%2C %5B0 1 0 0 0 0 0 0 0 0%5D%2C %5B0 1 0 0 0 0 0 0 0 0%5D%2C %5B0 1 0 0 0 0 0 0 0 0%5D%2C %5B0 1 0 0 0 1 0 0 0 0%5D%2C %5B1 0 0 0 0 0 0 0 0 0%5D%2C %5B0 1 1 0 0 0 0 0 0 0%5D%2C %5B0 1 0 0 0 0 0 0 0 0%5D%2C %5B0 1 1 0 0 0 0 0 0 0%5D%2C %5B0 0 0 0 0 0 0 1 0 0%5D%2C %5B0 1 1 0 0 0 0 0 0 0%5D%2C %5B0 1 1 0 0 1 0 0 0 0%5D%2C %5B0 0 0 0 0 1 0 0 0 0%5D%2C %5B0 0 1 0 0 1 0 0 0 0%5D%2C %5B0 0 0 0 0 0 0 0 0 1%5D%2C %5B0 1 0 0 0 0 0 0 0 0%5D%2C %5B0 0 1 0 0 0 0 0 0 0%5D%2C %5B0 0 0 0 0 0 1 0 0 0%5D%2C %5B0 0 0 0 0 1 0 0 0 0%5D%2C %5B0 1 0 0 0 0 0 0 0 0%5D%2C %5B0 1 0 0 0 0 0 0 0 0%5D%2C %5B0 0 1 0 0 0 0 0 0 0%5D%2C %5B0 1 0 0 0 0 0 0 0 0%5D%2C %5B0 1 0 0 0 0 0 0 0 0%5D%2C %5B0 0 0 0 0 0 0 1 0 0%5D%2C %5B0 1 0 0 0 0 0 0 0 0%5D%2C %5B0 0 1 0 0 0 0 0 0 0%5D%2C %5B0 1 0 0 0 0 0 0 0 0%5D%2C %5B0 1 0 0 0 0 0 0 0 0%5D%2C %5B0 0 1 0 0 0 0 0 0 0%5D%2C %5B0 1 0 0 0 0 0 0 0 0%5D%2C %5B0 0 1 0 0 0 0 0 0 0%5D%2C %5B0 1 0 0 0 0 0 0 0 0%5D%2C %5B0 1 1 0 0 0 0 0 0 0%5D%2C %5B0 0 1 0 0 0 0 0 0 0%5D%2C %5B0 0 1 0 0 0 0 0 0 0%5D%2C %5B0 0 1 0 0 0 0 1 0 0%5D%2C %5B0 0 1 0 0 0 0 0 0 0%5D%2C %5B0 0 1 0 0 0 1 1 0 0%5D%2C %5B1 0 0 0 0..." isContainer="True" shape="(1680, 10)" />
<var name="y_eda" type="ndarray" qualifier="numpy" value="%5B%5B1 1 0 0 1 0 0 0 0 0%5D%2C %5B0 0 0 0 0 1 0 0 0 0%5D%2C %5B0 0 1 0 0 0 0 0 0 0%5D%2C %5B0 1 0 0 0 0 0 0 0 0%5D%2C %5B0 0 0 0 0 0 0 1 0 0%5D%2C %5B0 1 0 0 0 0 0 0 0 0%5D%2C %5B0 1 0 0 0 0 0 0 0 0%5D%2C %5B0 1 0 0 0 0 0 0 0 0%5D%2C %5B0 1 0 0 0 1 0 0 0 0%5D%2C %5B1 0 0 0 0 0 0 0 0 0%5D%2C %5B0 1 1 0 0 0 0 0 0 0%5D%2C %5B0 1 0 0 0 0 0 0 0 0%5D%2C %5B0 1 1 0 0 0 0 0 0 0%5D%2C %5B0 0 0 0 0 0 0 1 0 0%5D%2C %5B0 1 1 0 0 0 0 0 0 0%5D%2C %5B0 1 1 0 0 1 0 0 0 0%5D%2C %5B0 0 0 0 0 1 0 0 0 0%5D%2C %5B0 0 1 0 0 1 0 0 0 0%5D%2C %5B0 0 0 0 0 0 0 0 0 1%5D%2C %5B0 1 0 0 0 0 0 0 0 0%5D%2C %5B0 0 1 0 0 0 0 0 0 0%5D%2C %5B0 0 0 0 0 0 1 0 0 0%5D%2C %5B0 0 0 0 0 1 0 0 0 0%5D%2C %5B0 1 0 0 0 0 0 0 0 0%5D%2C %5B0 1 0 0 0 0 0 0 0 0%5D%2C %5B0 0 1 0 0 0 0 0 0 0%5D%2C %5B0 1 0 0 0 0 0 0 0 0%5D%2C %5B0 1 0 0 0 0 0 0 0 0%5D%2C %5B0 0 0 0 0 0 0 1 0 0%5D%2C %5B0 1 0 0 0 0 0 0 0 0%5D%2C %5B0 0 1 0 0 0 0 0 0 0%5D%2C %5B0 1 0 0 0 0 0 0 0 0%5D%2C %5B0 1 0 0 0 0 0 0 0 0%5D%2C %5B0 0 1 0 0 0 0 0 0 0%5D%2C %5B0 1 0 0 0 0 0 0 0 0%5D%2C %5B0 0 1 0 0 0 0 0 0 0%5D%2C %5B0 1 0 0 0 0 0 0 0 0%5D%2C %5B0 1 1 0 0 0 0 0 0 0%5D%2C %5B0 0 1 0 0 0 0 0 0 0%5D%2C %5B0 0 1 0 0 0 0 0 0 0%5D%2C %5B0 0 1 0 0 0 0 1 0 0%5D%2C %5B0 0 1 0 0 0 0 0 0 0%5D%2C %5B0 0 1 0 0 0 1 1 0 0%5D%2C %5B1 0 0 0 0..." isContainer="True" shape="(1680, 10)" />
<var name="y_eda_df" type="DataFrame" qualifier="pandas.core.frame" value="Agriculture  Economy-wide  Energy  Health  Industry  LULUCF  %5C %5B0               1             1       0       0         1       0   %5D %5B1               0             0       0       0         0       1   %5D %5B2               0             0       1       0         0       0   %5D %5B3               0             1       0       0         0       0   %5D %5B4               0             0       0       0         0       0   %5D %5B...           ...           ...     ...     ...       ...     ...   %5D %5B1675            0             0       1       1         0       0   %5D %5B1676            0             0       0       0         0       0   %5D %5B1677            0             0       1       0         0       1   %5D %5B1678            0             0       1       0         0       0   %5D %5B1679            0             0       0       0         0       0   %5D %5B%5D %5B      Residential and Commercial  Transportation  Waste  Water  %5D %5B0                              0               0      0      0  %5D %5B1                              0         ...%5D" isContainer="True" shape="(1680, 10)" />
<var name="y_test" type="Series" qualifier="pandas.core.series" value="%281497%2C %27Energy%27%29 %281517%2C %27Economy-wide%27%29 %281244%2C %27Energy%27%29 %28249%2C %27Transportation%27%29 %28698%2C %27Energy%27%29 %281002%2C %27Economy-wide%27%29 %281757%2C %27Transportation%27%29 %28765%2C %27Energy%27%29 %281958%2C %27Energy%27%29 %281738%2C %27Economy-wide%27%29 %281091%2C %27Energy%27%29 %28893%2C %27Energy%27%29 %281328%2C %27LULUCF%27%29 %281869%2C %27Energy%27%29 %281257%2C %27Economy-wide%27%29 %28398%2C %27Transportation%27%29 %281326%2C %27Energy%27%29 %281550%2C %27Transportation%27%29 %28375%2C %27LULUCF%27%29 %28666%2C %27Energy%27%29 %281201%2C %27Energy%27%29 %281010%2C %27Energy%27%29 %281570%2C %27Transportation%27%29 %281199%2C %27Energy%27%29 %28979%2C %27Energy%27%29 %28112%2C %27Energy%27%29 %281928%2C %27Economy-wide%27%29 %28697%2C %27Residential and Commercial%27%29 %281112%2C %27Energy%27%29 %28583%2C %27LULUCF%27%29 %28484%2C %27Residential and Commercial%27%29 %281059%2C %27Energy%27%29 %281908%2C %27Energy%27%29 %28708%2C %27Economy-wide%27%29 %281953%2C %27Agriculture%27%29 %281214%2C %27Energy%27%29 %28438%2C %27Transportation%27%29 %28951%2C %27Energy%27%29 %281448%2C %27Transportation%27%29 %28762%2C %27Energy%27%29 %28795%2C %27Energy%27%29 %28918%2C %27Transportation%27%29 %281914%2C %27Energy%27%29 %281544%2C %27Agriculture%27%29 %28953%2C %27Economy-wide%27%29 %2895%2C %27Agriculture%27%29 %28700%2C %27LULUCF%27%29 %281222%2C %27Energy%27%29 %28294%2C %27Agriculture%27%29 %281100%2C %27Energy%27%29 %281217%2C %27Transportation%27%29 %281526%2C %27Transportation%27%29 %281041%2C %27Transportation%27%29 %281644%2C %27Energy%27%29 %2837%2C %27LULUCF%27%29 %28554%2C %27Energy%27%29 %281065%2C %27Energy%27%29 %2888%2C %27Energy%27%29 %281109%2C %27Energy%27%29 %28590%2C %27Energy%27%29 %28574%2C %27Energy%27%29 %28252%2C %27Agriculture%27%29 %28203%2C %27Water%27%29 %28165%2C %27LULUCF%27%29 %28619%2C %27Water%27%29 %281039%2C %27Economy-wide%27%29 %281237%2C %27Economy-wide%27%29 %28823%2C %27Energy%27%29 %28199%2C %27Energy%27%29 %28839%2C %27Energy%27%29 %281915%2C %27Energy%27%29 %281123%2C %27Economy-wide%27%29 %281489%2C %27Energy%27%29 %28964%2C %27Energy%27%29 %281139%2C %27Residential and Commercial%27%29 %28827%2C %27Health%27%29 %281725%2C %27Energy%27%29 %28247%2C %27Transportation%27%29 %281820%2C %27Transportation%27%29 %28232%2C %27Residential and Commercial%27%29 %28702%2C %27LULUCF%27%29 %281221%2C %27Transportation%27%29 %28602%2C %27Transportation%27%29 %28196%2C %27Transportation%27%29 %281624%2C %27Economy-wide%27%29 %28782%2C %27Economy-wide%27%29 %28145%2C %27Residential and Commercial%27%29 %28971%2C %27Energy%27%29 %28990%2C %27Energy%27%29 %28842%2C %27Energy%27%29 %281424%2C %27Economy-wide%27%29 %28502%2C %27Water%27%29 %28769%2C %27Economy-wide%27%29 %2819%2C %27Agriculture%27%29 %28671%2C %27Transportation%27%29 %2866%2C %27Energy%27%29 %281147%2C %27LULUCF%27%29 %281950%2C %27Economy-wide%27%29 %281656%2C %27Economy-wide%27%29 %28725%2C %27Energy%27%29" isContainer="True" shape="(249,)" />
<var name="y_train" type="Series" qualifier="pandas.core.series" value="%28946%2C %27Energy%27%29 %281077%2C %27Energy%27%29 %28753%2C %27Energy%27%29 %28917%2C %27Energy%27%29 %28966%2C %27Economy-wide%27%29 %281563%2C %27Transportation%27%29 %28420%2C %27Transportation%27%29 %28470%2C %27Transportation%27%29 %28776%2C %27Energy%27%29 %28347%2C %27Transportation%27%29 %28329%2C %27LULUCF%27%29 %281004%2C %27Energy%27%29 %281151%2C %27Economy-wide%27%29 %281780%2C %27Transportation%27%29 %281745%2C %27Economy-wide%27%29 %281115%2C %27LULUCF%27%29 %2842%2C %27Water%27%29 %28130%2C %27Energy%27%29 %28125%2C %27LULUCF%27%29 %28607%2C %27Energy%27%29 %281670%2C %27Transportation%27%29 %281541%2C %27Energy%27%29 %281102%2C %27Energy%27%29 %28631%2C %27Energy%27%29 %281225%2C %27Energy%27%29 %281641%2C %27Transportation%27%29 %28630%2C %27Energy%27%29 %281308%2C %27Energy%27%29 %281319%2C %27LULUCF%27%29 %28774%2C %27Economy-wide%27%29 %281243%2C %27Energy%27%29 %281899%2C %27Energy%27%29 %2851%2C %27LULUCF%27%29 %281155%2C %27Energy%27%29 %28771%2C %27Energy%27%29 %28904%2C %27Energy%27%29 %281189%2C %27Economy-wide%27%29 %28824%2C %27Energy%27%29 %281298%2C %27Transportation%27%29 %281209%2C %27Agriculture%27%29 %281335%2C %27Transportation%27%29 %281832%2C %27Energy%27%29 %2833%2C %27Transportation%27%29 %28764%2C %27Energy%27%29 %2863%2C %27Economy-wide%27%29 %28709%2C %27Economy-wide%27%29 %281291%2C %27Transportation%27%29 %281900%2C %27Energy%27%29 %281909%2C %27Transportation%27%29 %281044%2C %27Energy%27%29 %281579%2C %27Energy%27%29 %28680%2C %27Energy%27%29 %281743%2C %27Transportation%27%29 %28350%2C %27Energy%27%29 %28962%2C %27Energy%27%29 %28882%2C %27Industry%27%29 %281145%2C %27Industry%27%29 %28807%2C %27Energy%27%29 %28644%2C %27Energy%27%29 %281542%2C %27Transportation%27%29 %28956%2C %27Agriculture%27%29 %28580%2C %27LULUCF%27%29 %28246%2C %27Water%27%29 %281253%2C %27Energy%27%29 %28798%2C %27Energy%27%29 %28215%2C %27Water%27%29 %281150%2C %27Energy%27%29 %28650%2C %27Energy%27%29 %28790%2C %27Economy-wide%27%29 %28736%2C %27Energy%27%29 %28327%2C %27Agriculture%27%29 %281615%2C %27Energy%27%29 %28483%2C %27LULUCF%27%29 %28523%2C %27Transportation%27%29 %281566%2C %27Economy-wide%27%29 %28815%2C %27Energy%27%29 %28738%2C %27Energy%27%29 %283%2C %27LULUCF%27%29 %281927%2C %27Economy-wide%27%29 %28938%2C %27Economy-wide%27%29 %281655%2C %27LULUCF%27%29 %281067%2C %27Energy%27%29 %28800%2C %27Economy-wide%27%29 %281501%2C %27Transportation%27%29 %28477%2C %27Transportation%27%29 %28719%2C %27Energy%27%29 %28989%2C %27LULUCF%27%29 %281013%2C %27Agriculture%27%29 %28794%2C %27Economy-wide%27%29 %28892%2C %27Health%27%29 %281302%2C %27Transportation%27%29 %28569%2C %27Economy-wide%27%29 %281508%2C %27Energy%27%29 %281491%2C %27LULUCF%27%29 %281729%2C %27Energy%27%29 %281393%2C %27LULUCF%27%29 %28786%2C %27Transportation%27%29 %281331%2C %27Transportation%27%29 %28859%2C %27Energy%27%29 %28863%2C %27Transportation%27%29" isContainer="True" shape="(503,)" />
